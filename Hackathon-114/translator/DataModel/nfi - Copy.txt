module: ietf-i2nsf-policy-rule-for-nsf
    +--rw i2nsf-security-policy
       +--rw system-policy* [system-policy-name]
          +--rw system-policy-name     string
          +--rw priority-usage?        identityref
          +--rw resolution-strategy?   identityref
          +--rw default-action?        identityref
          +--rw rules* [rule-name]
          |  +--rw rule-name                     string
          |  +--rw rule-description?             string
          |  +--rw rule-priority?                uint8
          |  +--rw rule-enable?                  boolean
          |  +--rw session-aging-time?           uint16
          |  +--rw long-connection
          |  |  +--rw enable?     boolean
          |  |  +--rw duration?   uint16
          |  +--rw time-intervals
          |  |  +--rw absolute-time-interval
          |  |  |  +--rw start-time?   start-time-type
          |  |  |  +--rw end-time?     end-time-type
          |  |  +--rw periodic-time-interval
          |  |     +--rw day
          |  |     |  +--rw every-day?      boolean
          |  |     |  +--rw specific-day*   day-type
          |  |     +--rw month
          |  |        +--rw every-month?      boolean
          |  |        +--rw specific-month*   month-type
          |  +--rw event-clause-container
          |  |  +--rw event-clause-description?   string
          |  |  +--rw event-clauses
          |  |     +--rw system-event*   identityref
          |  |     +--rw system-alarm*   identityref
          |  +--rw condition-clause-container
          |  |  +--rw condition-clause-description?             string
          |  |  +--rw packet-security-ipv4-condition
          |  |  |  +--rw ipv4-description?               string
          |  |  |  +--rw pkt-sec-ipv4-header-length
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv4-header-length*         uint8
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv4-header-length* [start-ipv4-header-length end-ipv4-header-length]
          |  |  |  |           +--rw start-ipv4-header-length    uint8
          |  |  |  |           +--rw end-ipv4-header-length      uint8
          |  |  |  +--rw pkt-sec-ipv4-tos*               identityref
          |  |  |  +--rw pkt-sec-ipv4-total-length
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv4-total-length*         uint16
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv4-total-length* [start-ipv4-total-length end-ipv4-total-length]
          |  |  |  |           +--rw start-ipv4-total-length    uint16
          |  |  |  |           +--rw end-ipv4-total-length      uint16
          |  |  |  +--rw pkt-sec-ipv4-id*                uint16
          |  |  |  +--rw pkt-sec-ipv4-fragment-flags*    identityref
          |  |  |  +--rw pkt-sec-ipv4-fragment-offset
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv4-fragment-offset*         uint16
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv4-fragment-offset* [start-ipv4-fragment-offset end-ipv4-fragment-offset]
          |  |  |  |           +--rw start-ipv4-fragment-offset    uint16
          |  |  |  |           +--rw end-ipv4-fragment-offset      uint16
          |  |  |  +--rw pkt-sec-ipv4-ttl
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv4-ttl*         uint8
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv4-ttl* [start-ipv4-ttl end-ipv4-ttl]
          |  |  |  |           +--rw start-ipv4-ttl    uint8
          |  |  |  |           +--rw end-ipv4-ttl      uint8
          |  |  |  +--rw pkt-sec-ipv4-protocol*          identityref
          |  |  |  +--rw pkt-sec-ipv4-src
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv4-address* [ipv4]
          |  |  |  |     |     +--rw ipv4             inet:ipv4-address
          |  |  |  |     |     +--rw (subnet)?
          |  |  |  |     |        +--:(prefix-length)
          |  |  |  |     |        |  +--rw prefix-length?   uint8
          |  |  |  |     |        +--:(netmask)
          |  |  |  |     |           +--rw netmask?         yang:dotted-quad
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv4-address* [start-ipv4-address end-ipv4-address]
          |  |  |  |           +--rw start-ipv4-address    inet:ipv4-address
          |  |  |  |           +--rw end-ipv4-address      inet:ipv4-address
          |  |  |  +--rw pkt-sec-ipv4-dest
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv4-address* [ipv4]
          |  |  |  |     |     +--rw ipv4             inet:ipv4-address
          |  |  |  |     |     +--rw (subnet)?
          |  |  |  |     |        +--:(prefix-length)
          |  |  |  |     |        |  +--rw prefix-length?   uint8
          |  |  |  |     |        +--:(netmask)
          |  |  |  |     |           +--rw netmask?         yang:dotted-quad
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv4-address* [start-ipv4-address end-ipv4-address]
          |  |  |  |           +--rw start-ipv4-address    inet:ipv4-address
          |  |  |  |           +--rw end-ipv4-address      inet:ipv4-address
          |  |  |  +--rw pkt-sec-ipv4-ipopts*            identityref
          |  |  |  +--rw pkt-sec-ipv4-same-ip?           boolean
          |  |  |  +--rw pkt-sec-ipv4-geo-ip*            string
          |  |  +--rw packet-security-ipv6-condition
          |  |  |  +--rw ipv6-description?              string
          |  |  |  +--rw pkt-sec-ipv6-traffic-class*    identityref
          |  |  |  +--rw pkt-sec-ipv6-flow-label
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv6-flow-label*         uint32
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv6-flow-label* [start-ipv6-flow-label end-ipv6-flow-label]
          |  |  |  |           +--rw start-ipv6-flow-label    uint32
          |  |  |  |           +--rw end-ipv6-flow-label      uint32
          |  |  |  +--rw pkt-sec-ipv6-payload-length
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv6-payload-length*         uint16
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv6-payload-length* [start-ipv6-payload-length end-ipv6-payload-length]
          |  |  |  |           +--rw start-ipv6-payload-length    uint16
          |  |  |  |           +--rw end-ipv6-payload-length      uint16
          |  |  |  +--rw pkt-sec-ipv6-next-header*      identityref
          |  |  |  +--rw pkt-sec-ipv6-hop-limit
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv6-hop-limit*         uint8
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv6-hop-limit* [start-ipv6-hop-limit end-ipv6-hop-limit]
          |  |  |  |           +--rw start-ipv6-hop-limit    uint8
          |  |  |  |           +--rw end-ipv6-hop-limit      uint8
          |  |  |  +--rw pkt-sec-ipv6-src
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw ipv6-address* [ipv6]
          |  |  |  |     |     +--rw ipv6             inet:ipv6-address
          |  |  |  |     |     +--rw prefix-length?   uint8
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-ipv6-address* [start-ipv6-address end-ipv6-address]
          |  |  |  |           +--rw start-ipv6-address    inet:ipv6-address
          |  |  |  |           +--rw end-ipv6-address      inet:ipv6-address
          |  |  |  +--rw pkt-sec-ipv6-dest
          |  |  |     +--rw (match-type)?
          |  |  |        +--:(exact-match)
          |  |  |        |  +--rw ipv6-address* [ipv6]
          |  |  |        |     +--rw ipv6             inet:ipv6-address
          |  |  |        |     +--rw prefix-length?   uint8
          |  |  |        +--:(range-match)
          |  |  |           +--rw range-ipv6-address* [start-ipv6-address end-ipv6-address]
          |  |  |              +--rw start-ipv6-address    inet:ipv6-address
          |  |  |              +--rw end-ipv6-address      inet:ipv6-address
          |  |  +--rw packet-security-tcp-condition
          |  |  |  +--rw tcp-description?             string
          |  |  |  +--rw pkt-sec-tcp-src-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-tcp-dest-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-tcp-flags*           identityref
          |  |  +--rw packet-security-udp-condition
          |  |  |  +--rw udp-description?             string
          |  |  |  +--rw pkt-sec-udp-src-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-udp-dest-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-udp-total-length
          |  |  |     +--rw (match-type)?
          |  |  |        +--:(exact-match)
          |  |  |        |  +--rw udp-total-length*         uint32
          |  |  |        +--:(range-match)
          |  |  |           +--rw range-udp-total-length* [start-udp-total-length end-udp-total-length]
          |  |  |              +--rw start-udp-total-length    uint32
          |  |  |              +--rw end-udp-total-length      uint32
          |  |  +--rw packet-security-sctp-condition
          |  |  |  +--rw sctp-description?                string
          |  |  |  +--rw pkt-sec-sctp-src-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-sctp-dest-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-sctp-verification-tag*   uint32
          |  |  |  +--rw pkt-sec-sctp-chunk-type*         uint8
          |  |  +--rw packet-security-dccp-condition
          |  |  |  +--rw dccp-description?             string
          |  |  |  +--rw pkt-sec-dccp-src-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-dccp-dest-port-num
          |  |  |  |  +--rw (match-type)?
          |  |  |  |     +--:(exact-match)
          |  |  |  |     |  +--rw port-num*         inet:port-number
          |  |  |  |     +--:(range-match)
          |  |  |  |        +--rw range-port-num* [start-port-num end-port-num]
          |  |  |  |           +--rw start-port-num    inet:port-number
          |  |  |  |           +--rw end-port-num      inet:port-number
          |  |  |  +--rw pkt-sec-dccp-service-code*    uint32
          |  |  +--rw packet-security-icmp-condition
          |  |  |  +--rw icmp-description?             string
          |  |  |  +--rw pkt-sec-icmp-type-and-code*   identityref
          |  |  +--rw packet-security-url-category-condition
          |  |  |  +--rw url-category-description?   string
          |  |  |  +--rw pre-defined-category*       string
          |  |  |  +--rw user-defined-category*      string
          |  |  +--rw packet-security-voice-condition
          |  |  |  +--rw voice-description?       string
          |  |  |  +--rw pkt-sec-src-voice-id*    string
          |  |  |  +--rw pkt-sec-dest-voice-id*   string
          |  |  |  +--rw pkt-sec-user-agent*      string
          |  |  +--rw packet-security-ddos-condition
          |  |  |  +--rw ddos-description?            string
          |  |  |  +--rw pkt-sec-alert-packet-rate?   uint32
          |  |  |  +--rw pkt-sec-alert-flow-rate?     uint32
          |  |  |  +--rw pkt-sec-alert-byte-rate?     uint32
          |  |  +--rw packet-security-payload-condition
          |  |  |  +--rw packet-payload-description?   string
          |  |  |  +--rw pkt-payload-content*          string
          |  |  +--rw context-condition
          |  |     +--rw context-description?           string
          |  |     +--rw application-condition
          |  |     |  +--rw application-description?   string
          |  |     |  +--rw application-object*        string
          |  |     |  +--rw application-group*         string
          |  |     |  +--rw application-label*         string
          |  |     |  +--rw category
          |  |     |     +--rw application-category* [name application-subcategory]
          |  |     |        +--rw name                       string
          |  |     |        +--rw application-subcategory    string
          |  |     +--rw target-condition
          |  |     |  +--rw target-description?        string
          |  |     |  +--rw device-sec-context-cond
          |  |     |     +--rw target-device*   identityref
          |  |     +--rw users-condition
          |  |     |  +--rw users-description?   string
          |  |     |  +--rw user* [user-id]
          |  |     |  |  +--rw user-id      uint32
          |  |     |  |  +--rw user-name?   string
          |  |     |  +--rw group* [group-id]
          |  |     |  |  +--rw group-id      uint32
          |  |     |  |  +--rw group-name?   string
          |  |     |  +--rw security-group?      string
          |  |     +--rw geography-context-condition
          |  |        +--rw geography-context-description?   string
          |  |        +--rw geography-location
          |  |           +--rw src-geography-location*    string
          |  |           +--rw dest-geography-location*   string
          |  +--rw action-clause-container
          |     +--rw action-clause-description?   string
          |     +--rw packet-action
          |     |  +--rw ingress-action?   identityref
          |     |  +--rw egress-action?    identityref
          |     |  +--rw log-action?       identityref
          |     +--rw flow-action
          |     |  +--rw ingress-action?   identityref
          |     |  +--rw egress-action?    identityref
          |     |  +--rw log-action?       identityref
          |     +--rw advanced-action
          |        +--rw content-security-control*    identityref
          |        +--rw attack-mitigation-control*   identityref
          +--rw rule-group
             +--rw groups* [group-name]
                +--rw group-name     string
                +--rw rule-range
                |  +--rw start-rule?   string
                |  +--rw end-rule?     string
                +--rw enable?        boolean
                +--rw description?   string
