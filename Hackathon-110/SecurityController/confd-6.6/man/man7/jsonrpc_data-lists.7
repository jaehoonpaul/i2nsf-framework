.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "JSONRPC_DATA\-LISTS" "" "February 2016" "" ""
.
.SH "NAME"
\fBjsonrpc_data\-lists\fR
.
.SH "METHOD rename_list_entry"
Renames a list entry\.
.
.SS "PARAMS"
.
.nf

{"th": <number>,
 "from_path": <string>,
 "to_keys": <array of string>}
.
.fi
.
.P
The \fBfrom_path\fR is a keypath pointing out the list entry to be renamed\.
.
.P
The list entry to be renamed will, under the hood, be deleted all together and then recreated with the content from the deleted list entry copied in\.
.
.P
The \fBto_keys\fR param is an array with the new key values\. The array must contain a full set of key values\.
.
.SS "RESULT"
.
.nf

{}
.
.fi
.
.SS "ERRORS (SPECIFIC)"
.
.nf

{"type": "data\.already_exists"}
{"type": "data\.not_found"}
{"type": "data\.not_writable"}
.
.fi
.
.SH "METHOD move_list_entry"
Moves an ordered\-by user list entry relative to its siblings\.
.
.SS "PARAMS"
.
.nf

{"th": <number>,
 "from_path": <string>,
 "to_path": <string>,
 "mode": <"first" | "last" | "before" | "after">}
.
.fi
.
.P
The \fBfrom_path\fR is a keypath pointing out the list entry to be moved\.
.
.P
The list entry to be moved can either be moved to the first or the last position, i\.e\. if the \fBmode\fR param is set to \fBfirst\fR or \fBlast\fR the \fBto_path\fR keypath param has no meaning\.
.
.P
If the \fBmode\fR param is set to \fBbefore\fR or \fBafter\fR the \fBto_path\fR param must be specified, i\.e\. the list entry will be moved to the position before or after the list entry which the \fBto_path\fR keypath param points to\.
.
.SS "RESULT"
.
.nf

{}
.
.fi
.
.SS "ERRORS (SPECIFIC)"
.
.nf

{"type": "db\.locked"}
.
.fi
.
.SH "METHOD count_list_keys"
Counts the number of keys in a list\.
.
.SS "PARAMS"
.
.nf

{"th": <number>
 "path": <string>}
.
.fi
.
.P
The \fBpath\fR parameter is a keypath pointing to a list\.
.
.SS "RESULT"
.
.nf

{"count": <number>}
.
.fi
.
.SH "METHOD get_list_keys"
Enumerates keys in a list\.
.
.SS "PARAMS"
.
.nf

{"th": <number>,
 "path": <string>,
 "chunk_size": <string>,
 "start_with": <array of string, optional>,
 "lh": <number, optional>}
.
.fi
.
.P
The \fBth\fR parameter is the transaction handle\.
.
.P
The \fBpath\fR parameter is a keypath pointing to a list\. Required on first invocation \- optional in following\.
.
.P
The \fBchunk_size\fR parameter is the number of requested keys in the result\. Optional \- default is unlimited\.
.
.P
The \fBstart_with\fR parameter will be used to filter out all those keys that do not start with the provided strings\. The parameter supports multiple keys e\.g\. if the list has two keys, then \fBstart_with\fR can hold two items\.
.
.P
The \fBlh\fR (list handle) parameter is optional (on the first invocation) but must be used in following invocations\.
.
.SS "RESULT"
.
.nf

{"keys": <array of array of string>,
 "total_count": <number>,
 "lh": <number>}
.
.fi
.
.P
Each invocation of \fBget_list_keys\fR will return at most \fBchunk_size\fR keys\. The returned \fBlh\fR must be used in following invocations to retrieve next chunk of keys\. When no more keys are available the returned \fBlh\fR will be set to \fB\-1\fR\.
.
.P
On the first invocation \fBlh\fR can either be omitted or set to \fB\-1\fR\.
