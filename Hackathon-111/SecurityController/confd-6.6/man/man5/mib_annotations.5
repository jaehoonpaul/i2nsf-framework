'\" t
.\"     Title: mib_annotations
.\"    Author:  <support@tail-f.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 03/02/2018
.\"    Manual: ConfD Manual
.\"    Source: Tail-f Systems
.\"  Language: English
.\"
.TH "MIB_ANNOTATIONS" "5" "03/02/2018" "Tail-f Systems" "ConfD Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mib_annotations \- MIB annotations file format
.SH "DESCRIPTION"
.PP
This manual page describes the syntax and semantics used to write MIB annotations\&. A MIB annotation file is used to modify the behavior of certain MIB objects without having to edit the original MIB file\&.
.PP
MIB annotations are separate file with a \&.miba suffix, and is applied to to a MIB when a YANG module is generated and when the MIB is compiled\&. See
\m[blue]\fBconfdc(1)\fR\m[]\&.
.SH "SYNTAX"
.PP
Each line in a MIB annotation file has the following syntax:
.sp
.if n \{\
.RS 4
.\}
.nf
<MIB Object Name> <modifier> [= <value>]
    
.fi
.if n \{\
.RE
.\}
.PP
where
\fImodifier\fR
is one of
\fBmax_access\fR,
\fBdisplay_hint\fR,
\fBbehavior\fR,
\fBunique\fR, or
\fBoperational\fR\&.
.PP
Blank lines are ignored, and lines starting with # are treated as comments and ignored\&.
.PP
If
\fImodifier\fR
is
\fBmax_access\fR,
\fIvalue\fR
must be one of
\fBnot_accessible\fR
or
\fBread_only\fR\&.
.PP
If
\fImodifier\fR
is
\fBdisplay_hint\fR,
\fIvalue\fR
must be a valid DISPLAY\-HINT value\&. The display hint is used to determine if a string object should be treated as text or binary data\&.
.PP
If
\fImodifier\fR
is
\fBbehavior\fR,
\fIvalue\fR
must be one of
\fBnoSuchObject\fR
or
\fBnoSuchInstance\fR\&. When a YANG module is generated from a MIB, objects with a specified behavior are not converted to YANG\&. When the SNMP agent responds to SNMP requests for such an object, the corresponding error code is used\&.
.PP
If
\fImodifier\fR
is
\fBunique\fR,
\fIvalue\fR
must be a valid YANG "unique" expression, i\&.e\&., a space\-separated list of column names\&. This modifier must be given on table entries\&.
.PP
If
\fImodifier\fR
is
\fBoperational\fR, there must not be any
\fIvalue\fR
given\&. A writable object marked as
\fBoperational\fR
will be translated into a non\-configuration YANG node, marked with a
\fBtailf:writable true\fR
statement, indicating that the object represents writable operational data\&.
.SH "EXAMPLE"
.PP
An example of a MIB annotation file\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# the following object does not have value
ifStackLastChange behavior = noSuchInstance

# this deprecated table is not implemented
ifTestTable behavior = noSuchObject
      
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
The ConfD User Guide
.RS 4
.RE
.PP
\fBconfdc\fR(1)
.RS 4
YANG compiler
.RE
.SH "AUTHOR"
.PP
 <\&support@tail\-f\&.com\&>
.RS 4
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2018 Tail-f Systems AB
.br
