.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "API" "" "February 2016" "" ""
.
.SH "NAME"
\fBAPI\fR \- Data (leafs)
.
.SH "METHOD get_value"
Gets a leaf value
.
.SS "PARAMS"
.
.nf

{"th": <number>,
 "path": <string>}
.
.fi
.
.P
The \fBpath\fR param is a keypath pointing to a value\.
.
.SS "RESULT"
.
.nf

{"value": <string>}
.
.fi
.
.SS "EXAMPLE"
.
.nf

curl \e
    \-\-cookie \'sessionid=sess12541119146799620192;\' \e
    \-X POST \e
    \-H \'Content\-Type: application/json\' \e
    \-d \'{"jsonrpc": "2\.0", "id": 1, \e
         "method": "get_value", \e
         "params": {"th": 4711, \e
                    "path": "/dhcp:dhcp/max\-lease\-time"}}\' \e
    http://127\.0\.0\.1:8008/jsonrpc
.
.fi
.
.IP "" 4
.
.nf

{
  "jsonrpc": "2\.0",
  "id": 1,
  "result": {"value": "7200"}
}
.
.fi
.
.IP "" 0
.
.SH "METHOD get_values"
Get leaf values
.
.SS "PARAMS"
.
.nf

{"th": <number>,
 "path": <string>,
 "leafs": <array of string>}
.
.fi
.
.P
The \fBpath\fR param is a keypath pointing to a container\. the \fBleafs\fR param is an array of children names residing under the parent container in the YANG module\.
.
.SS "RESULT"
.
.nf

{"values": <array of value/error>}

value  = {"value": <string>, "access": <access>}
error  = {"error": <string>, "access": <access>} |
         {"exists": true, "access": <access>} |
         {"not_found": true, "access": <access>}
access = {"read": true, write: true}
.
.fi
.
.P
\fBNOTE\fR: The access object has no "read" and/or "write" properties if there are no read and/or access rights\.
.
.SH "METHOD set_value"
Sets a leaf value
.
.SS "PARAMS"
.
.nf

{"th": <number>,
 "path": <string>,
 "value": <string | boolean | integer | array | null>,
 "dryrun": <boolean, default: false}
.
.fi
.
.P
The \fBpath\fR param is the keypath to give a new value as specified with the \fBvalue\fR param\.
.
.P
\fBvalue\fR can be an array when the \fBpath\fR is a leaf\-list node\.
.
.P
When \fBvalue\fR is \fBnull\fR, the \fBset_value\fR method acts like \fBdelete\fR\.
.
.P
When \fBdryrun\fR is \fBtrue\fR, this function can be used to test if a value is valid or not\.
.
.SS "RESULT"
.
.nf

{}
.
.fi
.
.SS "ERRORS (SPECIFIC)"
.
.nf

{"type": "data\.already_exists"}
{"type": "data\.not_found"}
{"type": "data\.not_writable"}
{"type": "db\.locked"}
.
.fi
.
.SS "EXAMPLE"
.
.nf

curl \e
    \-\-cookie \'sessionid=sess12541119146799620192;\' \e
    \-X POST \e
    \-H \'Content\-Type: application/json\' \e
    \-d \'{"jsonrpc": "2\.0", "id": 1, \e
         "method": "set_value", \e
         "params": {"th": 4711, \e
                    "path": "/dhcp:dhcp/max\-lease\-time", \e
                    "value": "4500"}}\' \e
    http://127\.0\.0\.1:8008/jsonrpc
.
.fi
.
.IP "" 4
.
.nf

{"jsonrpc": "2\.0",
 "id": 1,
 "result": {}
}
.
.fi
.
.IP "" 0

