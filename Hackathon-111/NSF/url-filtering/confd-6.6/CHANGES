ConfD-6.6 [March 01, 2018]
==========================
Deprecated:

  - CDB: cdb_load_file() has been deprecated.
    Use maapi_load_config() with MAAPI_CONFIG_OPER_ONLY flag to load only
    operational data and ancestors to operational data nodes.
    This functionality is also available via the -O option to 'confd_load'.

    (ENG-17208)

Non-backwards compatible enhancements:

  - CLI: Added check to see if CLI entered integer value is within range
    constraints.

    (ENG-17233, RT:30945, PS-27157)

  - CLI: Flow control has been introduced between confd_cli and ConfD to
    allow better handling of ctrl-c to abort long outputs. Note that
    if clistart.c has been modified it needs to incorporate changes
    from this release.

    (ENG-16485, RT:29419, PS-9553)

  - NETCONF: Invoking an action over NETCONF would not pass on a transaction
    started by the tail-f extension <start-transaction> (if one had been
    started). Instead the transaction would be closed before the action was
    invoked. This has now been changed so that if a transaction has been
    started its handle will be passed on to the action (making it possible
    for an action to add changes to an existing transaction). As before, it
    is up to the action implementor to either use the transaction or not.

    (ENG-17638, RT:31663, PS-27635)

  - NETCONF: ConfD now allows non-unique leaf-lists in notifications.

    (ENG-16883, RT:30640, PS-10171)

  - Python API: The YANG module name is now included in the schema loaded by
    Python applications, and available as the fifth element in the tuples
    returned by get_nslist(). I.e. it now returns returns a list of
    five-tuples instead of a list of four-tuples.

    (ENG-17344)

  - Python API: When reading a yang:dotted-quad leaf the value returned was
    a 4-tuple. Now a string is returned so writing and reading such a leaf
    is symmetrical.

    (ENG-17105)

  - RESTCONF: RESTCONF - Added support for RESTCONF Event Notification as
    described in RFC 8040.

    (ENG-16339, RT:30011, RT:27457, PS-9832, PS-8718)

  - RESTCONF: RESTCONF - Optimization of number of 'exists' calls to
    external data providers and CDB.

    (ENG-14549, RT:29466, RT:30043, PS-9571, PS-9852)

Enhancements:

  - confd: Added the MAAPI_CONFIG_OPER_ONLY flag for maapi_load_config(), to
    load only operational data and ancestors to operational data nodes.
    This functionality is also available via the -O option to 'confd_load'.

    (ENG-17206)

  - confd: ConfD no longer requires the ncurses library.

    (ENG-17068, RT:30214)

  - confd: If ietf-yang-library.yang is recompiled with the "--export"
    parameter, ConfD will now properly instantiate this data for each
    context (northbound protocol) for which it is exported.

    (ENG-16764, RT:25186, PS-7975)

  - confd: Performance enhancements during commit.  To take full advantage
    of the enhancements, yang files should be recompiled.

    (ENG-16634)

  - confd: REST - Optimization of number of 'exists' calls to external data
    providers and CDB.

    (ENG-16539, RT:29466, RT:30043, PS-9571, PS-9852)

  - confd: The installer check for 32-bit vs 64-bit architecture mismatch
    between ConfD release and host system has been removed, since it
    interfered with e.g. installing a release for a 32-bit target system on
    a 64-bit development system.

    (ENG-16446)

  - confd: New feature (revertByCommit) to make it possible to
    revert/rollback to previous stable 'running' with a normal
    commit instead of re-activating a stored database checkpoint.

    (ENG-16300, RT:28715, PS-9210)

  - confd: The YANG module name is now included in the schema loaded by
    applications, and available as the "module" element in the confd_nsinfo
    structs returned by confd_get_nslist().

    (ENG-15955, RT:27747, PS-26274)

  - confd: Data kickers are now validated against the YANG schema.
    The leaves 'monitor', 'trigger-expr' and 'kick-node' must comply to the
    YANG models.

    (ENG-15594)

  - C-API: The C-API function confd_ha_status() has been renamed to
    confd_ha_get_status(), to avoid a warning due to the 'struct
    confd_ha_status' parameter when compiling for C++. Invocation via
    confd_ha_status() remains supported, via a macro definition.

    (ENG-16815, RT:30579, PS-10131)

  - CLI: Improved handling of corrupt rollbacks and non-existing rollbacks.

    (ENG-17536, RT:31358, PS-27422)

  - CLI: The load activity clock, as enabled by the confd.conf setting
    confdConfig/cli/loadActivityClock, would in some cases not be in effect
    during the whole execution of the 'load' command in the C-style CLI.
    This has been fixed.

    (ENG-17466, RT:31199, PS-27336)

  - CLI: Performance when displaying configuration changes containing
    diff-dependencies (e.g. tailf:cli-diff-before etc.) has been improved.

    (ENG-16760)

  - CLI: The performance when displaying C-style configuration diffs (e.g.
    'show configuration') has been improved.

    (ENG-16752, RT:29980, RT:28076, PS-9810)

  - CLI: The CLI prompt is (by default) re-displayed after subsystem
    messages. When this is done, the prompt should occur directly after the
    messages, without any other output in between. This has been fixed.

    (ENG-15873, RT:29561, PS-9619)

  - CLI: The CLI can now do completion based on 'when' and
    'tailf:display-when' expressions even when they are located within
    actions.

    (ENG-15699, RT:26216, RT:27243, RT:27609, RT:30120, PS-8274, PS-8650,
    PS-8784, PS-9893, PS-9679)

  - CLI: Improve performance of show configuration command in config shared
    mode.

    (ENG-15540, RT:30105, PS-9884)

  - CLI: The CLI command "show configuration commit changes" (without
    explicit rollback id parameter) now displays a sensible printout instead
    of an error message.

    (ENG-8597, RT:29252, PS-9473)

  - Documentation: Added info to the description of what to be included in a
    minimal target.

    (ENG-17663, RT:31564, PS-27561)

  - Documentation: Documented '/confdConfig/cli/allowImplicitWildcard' in
    'confd.conf' manpage.

    (ENG-17410, RT:30823, PS-27066)

  - Documentation: Extended documentation to specify certain confd.conf
    configuration parameters changes take effect only for new CLI sessions
    or for both existing and new CLI sessions.

    (ENG-16612, RT:26107, PS-8238)

  - Documentation: Extended documentation to specify certain ConfD
    configuration parameters changes take effect only for new NETCONF
    sessions or for both existing and new NETCONF sessions.

    (ENG-2389, RT:26107, PS-8238)

  - Examples: small fixes to example "intro/10-c_transform" - to work with
    new leaf-list behavior

    (ENG-17925)

  - Examples: new Python API example -
    examples.confd/intro/python/10-transforms

    (ENG-17776)

  - Examples: new ConfD example - usage of cdb_get_modifications()

    (ENG-17335)

  - Examples: Added a delayed reply example dp/delayed_reply

    (ENG-17057)

  - Examples: added python example intro/python/12-maapi

    (ENG-16864)

  - Examples: maapi example was added to intro examples

    (ENG-16833)

  - Examples: examples - python version of cdb_subscription/iter_c was added

    (ENG-16738)

  - Examples: Example in_service_upgrade/simple added to ConfD Basic.

    (ENG-16737)

  - Examples: new example - high level variant of Python API action callback
    implementation - examples.confd/intro/python/7-actions-high

    (ENG-438)

  - JSON-RPC: get_trans response now include the tag set when creating the
    transaction.

    (ENG-17754)

  - JSON-RPC: added load command for loading XML/JSON data into a running
    transaction.

    (ENG-17221)

  - JSON-RPC: The method get_trans_changes now support the optional
    parameter output. Setting it to compact will exclude missing values
    making it possible to differentiate between empty string and missing
    value.

    (ENG-16665)

  - JSON-RPC: get_value method now supports check_default parameter
    returning is_default: true/false to indicate if the value came from the
    default handling or the configuration database.

    (ENG-16534)

  - JSON-RPC: The query and start_query methods now support
    leaf_value_as_string as a result_as value. leaf_value_as_string behaves
    as string except that missing values are represented as null.

    (ENG-15932)

  - JSON-RPC: The get_schema method now supports a boolean parameter
    stop_on_list. When true, get schema returns no more than the direct
    children of lists.

    (ENG-13033)

  - NETCONF: The NETCONF server now accepts rollback-label and
    rollback-comment (as part of edit-config or prepare-transaction) to set
    the label and comment for the rollback file. For details see
    tailf-netconf-rollback.yang

    (ENG-17862)

  - NETCONF: The previously unreleased tailf-rollback.yang is now included
    in the release. It defines an interface towards the rollback file
    handling functionality. Rollback files can be viewed and applied (using
    an action) and listed (using a config false list). The tailf-rollback
    YANG module is by default exported to restconf, netconf and maapi (which
    makes it usable over north bound programmatic API's). For more details
    see tailf-rollback.yang

    (ENG-17450, RT:31167, PS-27519)

  - NETCONF: New function in the Query API: 'immediate-query'. It starts a
    query, evaluates it, and returns the entire query result in one request.

    (ENG-17334)

  - NETCONF: Confd now supports base64-encoding the username when using
    NETCONF over TCP.

    (ENG-16497, RT:30351, PS-10011)

  - NETCONF: ConfD would consume lots of memory if encountering files in the
    NETCONF URL rootDir with extremely long lines.  This bug has been fixed.

    (ENG-16217, RT:29415, PS-9551)

  - NETCONF: Improvement performance for NETCONF queries in certain cases.

    (ENG-16142, RT:28792, PS-9244)

  - NETCONF: The NETCONF trace log in "pretty" format is now buffered one
    message at the time before it is printed.  This makes the trace log
    easier to follow.

    (ENG-15906, RT:24926, RT:26381, PS-25342, PS-8330)

  - Python API: A new attribute 'uinfo' (UserInfo) is now available in a
    TransCtxRef object. The old 'username' and 'context' attributes are
    deprecated.

    (ENG-16543, RT:29251, PS-9472)

  - REST API: New function in the Query API: 'immediate-query'. It starts a
    query, evaluates it, and returns the entire query result in one request.

    (ENG-16754, RT:30106, PS-9885)

  - RESTCONF: The RESTCONF API now supports adding custom HTTP headers to
    responses.

    (ENG-17771, RT:31725, PS-27667)

  - RESTCONF: It is now possible to pick up the Client IP address from a
    trusted Proxy, to be used when doing authentication of
    REST/RESTCONF/JSONRPC requests. At success, the Client IP will show up
    in the audit.log.

    (ENG-16842, RT:28177, RT:29994, RT:30763, RT:31082, PS-27037, PS-27225,
    PS-26395, PS-9820)

  - RESTCONF: RESTCONF now supports the YANG Patch media type as defined in
    RFC 8072.

    (ENG-16729, RT:17002, PS-4882)

  - RESTCONF: It is now possible to have the client source IP address as a
    key in the rest(conf) authentication cache, by enabling
    'enableAuthCacheClientIp' in the config.

    (ENG-16470, RT:29994, PS-9820)

  - RESTCONF: Token authentication support was added to RESTCONF.

    (ENG-15339, RT:28940, PS-9315)

Non-backwards compatible corrections:

  - confd: maapi_xpath2kpath() would incorrectly accept the path "/", which
    is not a valid "instance identifier". This has been fixed, it will now
    return CONFD_ERR with confd_errno == CONFD_ERR_BADPATH in that case.

    (ENG-17207, RT:30892)

  - confd: ConfD would crash when crypto functionality was used on MacOS X
    High Sierra. This has been fixed by linking statically with libcrypto
    from OpenSSL for the Darwin build.

    (ENG-16443, RT:30381, RT:30451, PS-10026, PS-10062)

  - confd: The "prio" element of the confd_syslog_notification struct for
    CONFD_NOTIF_NETCONF and CONFD_NOTIF_DEVEL event notifications did not
    match the priority used when logging to syslog and file. Also, if one
    client subscribed to CONFD_NOTIF_NETCONF and another subscribed to
    CONFD_NOTIF_DEVEL, both clients would receive both types of
    notifications. These bugs have been fixed.

    (ENG-16228, RT:26922, PS-8523)

  - AAA: ConfD did not fully comply with the NACM specification (RFC 6536):
    the 'module-name' leaf in a rule was required to match toplevel nodes,
    but it was not considered for the node being accessed. Thus it was not
    possible to have a rule with 'module-name' matching augmented sections
    of a module. This bug has been fixed.
    The fix is not expected to change the semantics of typical existing rule
    sets, but per above there is a possibility that rules that earlier would
    never match will match after the fix. For backward compatibility,
    /confdConfig/aaa/authorization/nacmCompliant  can be set to "false" in
    confd.conf to keep the non-compliant behavior.

    (ENG-16570, RT:29762, PS-9722)

  - CLI: In the case of setting a leaf-list without "tailf:cli-replace-all"
    extension, it led to deletion of config data with "when" expression
    depending on the leaf-list elements. This has now been fixed.

    (ENG-17827, RT:31841, PS-27753)

  - JSON-RPC: show_config did not return more than 100Kb of data in the
    response. The amount of data returned is now controlled with the
    optional max_size parameter defaulting to 0 meaning no limit.

    (ENG-17551)

  - JSON-RPC: get_schema and run_action now verify that list entries in the
    provided path exist.

    (ENG-16903)

  - JSON-RPC: get_schema namespace attribute is now only output on namespace
    changes.

    (ENG-149)

  - Python API: _confd.maapi.confirmed_commit_in_progress now returns usid
    (int) instead of bool to match the C API. A value greater than 0
    indicates a commit is in progress.

    (ENG-17789)

  - Python API: mmap_schema is now disabled on OS X due to instability
    issues in the C and Python APIs.

    (ENG-17029)

  - Python API: Reading an identityref leaf using maagic only returned the
    unqualified name of the identity even if the name was not unique. Now
    the qualified name (prefix:name) is always returned.

    (ENG-14434, RT:30613, PS-10154)

  - RESTCONF: JSON output did not comply with RFC 7951 with regards to
    numbers and booleans.
    int8, int16, int32, uint8, uint16, uint32 are encoded as integers.
    int64, uint64 and decimal64 are encoded as strings.
    boolean is encoded as true or false.
    leaf values now adhere to the rules above instead of encoding int64 and
    uint64 as integers.
    leaf-list values now adhere to the rules above instead of encoding all
    values as strings.

    (ENG-260, RT:30663, PS-10186)

  - Toolchain: tailf:validate as substatement to 'must' was ignored, and did
    not cause invocation of the validation callback instead of evaluation of
    the 'must' expression as documented. This has been fixed.

    (ENG-16012, RT:30087, PS-26777)

Corrections:

  - confd: With inactive feature enabled, if a transaction that did not have
    any inactive changes in its changeset was validated and returned back to
    read state, then any additional inactive changes in this transaction
    were not visible. This has been fixed.

    (ENG-17671, RT:31587, PS-27575)

  - confd: Using "confd --rollback <Nr>" or "confd --loadfile <File>" did
    not work when rollbackNumbering was set to fixed (in confd.conf), this
    has been fixed.

    (ENG-17616)

  - confd: If a container with a 'when' expression had a descendant 'choice'
    with a default 'case', and changes that both made the 'when' evaluate to
    "true" and selected a non-default 'case' in the 'choice' were done in a
    single commit, the 'case' selection was lost. This bug was introduced in
    ConfD-6.5 and has now been fixed.

    (ENG-17566, RT:31400, PS-27454)

  - confd: Improved performance of ConfD Query API when querying long
    leaf-lists.

    (ENG-17549, RT:31178, PS-27313)

  - confd: Some regular expressions with a combination of branches and
    quantifiers in a YANG 'pattern' statement did not allow some valid
    strings. E.g. the pattern '(([0-9]{1,2}|[0-9]-[0-9]):){1,2}' did not
    allow the string "1:2-3:". This has been fixed.

    (ENG-17535, RT:31341, PS-27421)

  - confd: Fixed problem with activating inactive nodes which have
    symlink(s) to other node(s).

    (ENG-17470, RT:31289, PS-27361)

  - confd: Reading /ncm:netconf-state/capabilities/capability failed
    intermittently. This has been fixed.

    (ENG-17441)

  - confd: Optimization to avoid unnecessary get_elem() invocations for list
    leafs with default values for lists that never have existed.

    (ENG-17401, RT:26917, PS-8521)

  - confd: Fixed bugs when augmenting in new items under a choice.  In
    certain use cases the bugs led to existing nodes not being seen.

    (ENG-17234, RT:30807, PS-27056)

  - confd: When configuring a kicker monitor with a non-existing namespace,
    ConfD would crash. This has been fixed.

    (ENG-17219)

  - confd: Regular expression elements of the form X{0,N}X in a YANG
    'pattern' statement were incorrectly evaluated as X{2,N+1} (instead of
    X{1,N+1}). This has been fixed.

    (ENG-17107)

  - confd: The backward-compatibility support for treating leaf-lists as
    leafs in the Data Provider API did not work correctly for transforms
    when a commit was requested but not completed: changes done by the
    transform were not removed from the changeset. This bug has been fixed.

    (ENG-16836, RT:30562, PS-10124)

  - confd: Mandatory leaves in non-existent parts of the schema, absent due
    to when-expressions evaluating to false, could cause incorrect
    validation errors.
    This has now been fixed.

    (ENG-16757)

  - confd: Optimizing away unnecessary get_elem() calls for leaves with
    default values which have never existed upon create/set requests.

    (ENG-16751, RT:26917, PS-8521)

  - confd: NETCONF gateway XML parsing was not working correctly with some
    specific cases of data model. This has been fixed.

    (ENG-16734, RT:29594, PS-9639)

  - confd: The confd_install_crypto_keys() and maapi_install_crypto_keys()
    functions didn't handle that the initVector leaf is optional, and would
    either claim that no crypto keys had been configured (if no initVector
    had been configured) or crash (if the initVector had been configured for
    one algorithm but not the other). This has been fixed.

    (ENG-16699, RT:29968, PS-9805)

  - confd: <defaultHandlingMode>trim</defaultHandlingMode> was handled
    incorrectly when used in conjunction with transforms or non-schema aware
    external data providers.
    This has now been fixed.

    (ENG-16623, RT:28938, RT:29603, PS-9313, PS-9644)

  - confd: Optimized validation of 'must' expressions on top level
    NP-containers. Validation is now evaluated during startup and when any
    dependency has changed.

    (ENG-16580, RT:28543,, RT:30609, PS-9140, PS-10151)

  - confd: XPath comparison between node sets and booleans was broken.  For
    example, "/path/to/non-existing-leaf = false()" should return true.
    This bug has been fixed.

    (ENG-16513, RT:30376, PS-10022)

  - confd: confd_load -C <xml-file> failed when the file contained an
    augmented config node.
    This has now been fixed.

    (ENG-16181, RT:29417, RT:29971, PS-26761, PS-9552)

  - confd: There was a bug that made it impossible to configure a shared
    memory executable. This has been fixed.

    (ENG-15722, RT:29984, PS-9813)

  - confd: The .fxs files for tailf-common, tailf-xsd-types, and
    tailf-common-query are now included in the release, in
    $CONFD_DIR/etc/confd. These files are not directly used by ConfD, but
    they must be loaded in order for it to be possible to retrieve the
    corresponding YANG modules via the NETCONF <get-schema> RPC or the URLs
    in ietf-yang-library. Attempting to load tailf-xsd-types.fxs would
    earlier cause a failure at startup - this has been fixed.

    (ENG-15632, RT:26737, RT:30450, RT:30495, PS-10090, PS-8455, PS-10061)

  - confd: HA: If a slave-node transitioned to the 'none' state due to a
    tick timeout (keepalive ticks sent between HA nodes) some subsystems was
    not informed of the transition. This has been fixed.

    (ENG-14356, RT:29084, PS-9391)

  - confd: When a must expression failed, a registered custom format_error
    callback error_app_tag was always empty. This has been fixed.

    (ENG-14188, RT:29337, PS-9508)

  - confd: Validation of the mandatory constraint failed when deleting a
    case within another case which was contained in a mandatory choice. This
    has been fixed.

    (ENG-14165, RT:29253, PS-9474)

  - confd: If a confirmed commit with persist timed out after the client
    session had closed, an external dataprovider would not be invoked in
    activate_checkpoint_running().  This bug has been fixed.

    (ENG-13140, RT:24397, RT:28656, PS-7745, PS-9187)

  - confd: A ConfD stripped from the webui is now more efficient at commit
    time.

    (ENG-6636, RT:26419, RT:32138, PS-27952, PS-8341)

  - confd: Activating a node NodeB below a deactivated node NodeA caused
    NodeA to be deleted.
    This has now been fixed.

    (ENG-427, RT:30534, PS-10110)

  - CDB: If ConfD runs out of resources due to limited disk space and
    memory, an error message stated that CDB was corrupt in a
    non-recoverable way. This has been corrected to an error message
    indicating that ConfD failed to load the CDB files due to a resource
    shortage.

    (ENG-17408, RT:31141, PS-27280)

  - CLI: The CLI prematurely closed the CLI when large amounts of data was
    displayed and the data was piped to some other program, and the
    receiving end of the pipe was slow to read the data. This has been
    fixed.

    (ENG-17919)

  - CLI: The flow control functionality that was introduced in 6.5.2
    contained an error that caused the CLI to hang under certain scenarios
    when large number of commands were pasted into the CLI. This has been
    fixed.

    (ENG-17837, RT:31759, PS-27727)

  - CLI: An internal accumulation timer was accidentally increased in
    release 6.5.2 which
    caused the CLI to be sluggish. This has been fixed.

    (ENG-17830, RT:31863, PS-27767)

  - CLI: The "show configuration" command shall return syntax error message
    when a range expression is given as parameter. This has now been fixed.

    (ENG-17747, RT:31676, PS-27653)

  - CLI: In the CLI running the xpath command with an invalid context path
    would sometimes result in an internal error. This has been fixed such
    that an error message is displayed if an invalid context path is
    specified.

    (ENG-17737)

  - CLI: When using tailf:alt-name the CLI wouldn't use the information when
    outputting result from a action. This has been fixed.

    (ENG-17696, RT:31539, PS-27550)

  - CLI: Running the pipe-command 'select' with no argument would result in
    an internal error. This has been fixed.

    (ENG-17491, RT:31353, PS-27411)

  - CLI: Using the 'extend' pipe target in the C-style CLI would result in
    an internal error for non-matching instances. This has been fixed.

    (ENG-17484, RT:31319, PS-27386)

  - CLI: The pipe command de-select was ignored in some cases. This has been
    fixed.

    (ENG-17477, RT:31310, PS-27375)

  - CLI: Improve performance of show configuration command when running
    datastore is locked by another session.

    (ENG-17468, RT:31273, PS-27351)

  - CLI: When displaying a binary file using, for example, the "file show"
    command, the terminal could end up in a garbled state since the terminal
    could interpret some of the binary data as control code. There was no
    way to reset the terminal to a controlled state. This has been fixed
    such that a vt100 reset sequence is sent to the terminal after
    displaying binary data, also the ctrl-l (redraw) key stroke now sends
    the terminal reset sequence, in addition to clearing the screen.

    (ENG-17424, RT:31128, PS-27248)

  - CLI: When requesting data from a list that is connected to a data
    provider the CLI would sometimes fetch every entry in the list although
    only one key was specified. This has been fixed.

    (ENG-17383, RT:30854, PS-27117)

  - CLI: The extension tailf:suppress-echo wouldn't suppress characters from
    the history if a CLI command failed. This has been fixed.

    (ENG-17346)

  - CLI: If the output of the terminal in the CLI was redirected to a file
    and that file was displayed in the same CLI, the CLI would get stuck in
    a recursive loop. This has been fixed by not allowing the file to be
    displayed in the same CLI that is currently writing to it.

    (ENG-17341, RT:31068, PS-27236)

  - CLI: When saving configuration to a file, if the parent directory has
    the "set group id on execution" bit set, the group id of the saved
    configuration file shall be set to the group id of the parent directory.

    (ENG-17231, RT:30972, PS-27192)

  - CLI: Attributes were not displayed properly for leaves of type empty in
    curly bracket format. This has been fixed.

    (ENG-17225)

  - CLI: Saving configuration to a file by using the config-mode commands
    'save <file> <path>' or 'save <file> xml <path>' would result in an
    empty file unless the user had 'create' access to the path, as specified
    by nacm data-rules. This has been fixed so that only 'read' access to
    the path is necessary when saving configuration to a file, assuming the
    user has right to execute the command itself.

    (ENG-17210, RT:30518, PS-10104)

  - CLI: Displaying the contents of a file using the operational mode
    command 'file show' would not work if the file did not end with a
    newline. This has been fixed.

    (ENG-17198, RT:30862, PS-27110)

  - CLI: Loading of a badly formatted XML file caused an internal error.
    This has been fixed.

    (ENG-17181, RT:30883, PS-27144)

  - CLI: CLI-spec command with many optional parameters, each with
    completionpoint callback, caused CLI hanging without responding when the
    command is invoked with more number of parameters than defined in the
    clispec. This has now been fixed.

    (ENG-17108, RT:30759, PS-27023)

  - CLI: Fixed problem in Java library that resulted in an exception when a
    clispec simpleType completion callback was used.

    (ENG-17100)

  - CLI: Auto completion did not work properly for leaf value with type
    leafref referenced to a leaf-list with type identityref. This has now
    been fixed.

    (ENG-16867, RT:30519, PS-10105)

  - CLI: Taking a partial-lock on some configuration on the running
    datastore through NETCONF, while trying to set the same configuration in
    shared config mode in the C-style CLI would result in an internal error.
    This has been fixed.

    (ENG-16862, RT:30342, PS-10005)

  - CLI: It was not possible to have an diff-dependency (e.g.
    tailf:diff-before etc.) in a list referring to the list itself. This has
    been fixed. This would be useful when for example wanting to control the
    order when list instances are created and deleted.

    (ENG-16758)

  - CLI: Using predicates in xpath expressions for diff-dependencies (e.g.
    tailf:cli-diff-before, tailf:cli-diff-after etc.) would in some cases
    cause the dependency to be ignored. This has been fixed.

    (ENG-16755)

  - CLI: Leafs annotated with tailf:cli-boolean-no would not show up under
    'possible completions' during completion of the 'no' command. This has
    been fixed.

    (ENG-16672, RT:29100, PS-9401)

  - CLI: The help information listing possible alternatives when executing
    an ambiguous command has been improved.

    (ENG-16608, RT:28954, PS-9323)

  - CLI: Some diff-dependencies (e.g. tailf:cli-diff-delete-after,
    tailf:cli-diff-delete-before) would not be triggered correctly if a node
    inside a list was dependent on delete operations of the parent list.
    This has been fixed.

    (ENG-16579)

  - CLI: The command 'load override' of an xml file would in some cases fail
    to set nodes subject to a 'must' constraint in YANG even though the
    constraint was satisfied. This has been fixed.

    (ENG-16267, RT:29731, PS-9703)

  - CLI: Deletion of empty leafs could be done with multiple leafs at a time
    although that shouldn't be possible unless they were sequence commands.
    This has been fixed.

    (ENG-16078, RT:28570, PS-9151)

  - CLI: When the confd.conf setting /confdConfig/cli/rollbackAAA is enabled
    and NACM rules deny delete operation on some part of the config tree,
    rollback was still successful even though it only rollbacks partially
    for the other part of the config tree which is allowed by NACM rules.
    This has now been fixed by changing rollback to be atomic i.e. either
    allow everything or reject everything depending on NACM rules.

    (ENG-15872, RT:27798, RT:31490, PS-27552, PS-8850)

  - CLI: The functionality of /confdConfig/cli/trimDefaultSave configuration
    parameter did not take any effect. This has now been fixed.

    (ENG-15841, RT:29647, PS-26705)

  - CLI: Internal error fixed when encountering syntax error in rollback
    file

    (ENG-15711, RT:30387, PS-10028)

  - CLI: The configuration change (as displayed by 'show configuration')
    when re-ordering the instances of a 'ordered-by user' list annotated
    with tailf:cli-show-obu-comments would in some cases lack the correct
    re-ordering comments. This has been fixed.

    (ENG-15648)

  - CLI: Show a leaf named "disabled" caused an internal error. This has now
    been fixed.

    (ENG-15059, RT:25976, PS-8199)

  - CLI: With nested choice statements, CLI completions mixed up the case
    statements in different levels. This has now been fixed.

    (ENG-14597, RT:30633, PS-10167)

  - CLI: When issuing the command "logout user" or "logout session" in the
    CLI, it would try to identify the current actual logout being performed
    and could sometimes issue the one or the other no matter what was
    specified by the user. This has been fixed.

    (ENG-13537, RT:27645, RT:31159, PS-27271, PS-8797)

  - CLI: It was not possible to delete a leaf-list in the C-style CLI by
    setting the value of the leaf-list to the empty list (e.g. '[]'). This
    has been fixed.

    (ENG-13047, RT:30345, PS-10007)

  - CLI: When CLI prompt input was not of string type, it did not ignore the
    trailing spaces. This has now been fixed.

    (ENG-9083, RT:16554, RT:30593, PS-4716, PS-10142)

  - CLI: The CLI built-in command "no service prompt config" shall not be
    available in the submode. This has now been fixed.

    (ENG-5118, RT:30319, PS-9990)

  - CLI: When selecting to display a table in CSV format, ie by using | csv,
    the headers would be split into multiple lines. This has been fixed.
    Also, quoting was not performed when an entry contained a quotable
    character, for example a comma, this also been fixed.

    (ENG-4211, RT:16379, PS-4642)

  - CLI: CLI restarted when setting lists with multiple key leafs, with
    leafref and must expressions. This has now been fixed.

    (ENG-230, RT:30638, PS-10170)

  - Documentation: Updated documentation with information about what files
    are needed to be removed in case the webui/rest components are removed.

    (ENG-16259, RT:29986, PS-26764)

  - Documentation: RESTCONF is now documented in the confd.conf man page.

    (ENG-2388, RT:28803, PS-26966)

  - Documentation: Documented that multiple hooks can be defined for a node,
    and how the hook callpoints are inherited in this case.

    (ENG-324, RT:22241, PS-24510)

  - Erlang API: econfd_cdb:trigger_oper_subscriptions/1,2,3 has been added
    to the Erlang API.

    (ENG-16294, RT:25018, PS-7927)

  - Examples: - fixed managed-folders iteration when multiple users exist
    - fixed transform daemon application error on deletion of managed folder

    (ENG-16529)

  - JSON-RPC: The install_rollback rpc did not work when rollbackNumbering
    was set to fixed (in confd.conf), this has been fixed.

    (ENG-17617)

  - JSON-RPC: get_schema response did not include
    is_action_input/is_action_output for choice and case entries. This has
    been fixed.

    (ENG-16884)

  - JSON-RPC: get_schema response would contain duplicate type information
    in certain scenarios. This is fixed.

    (ENG-16882)

  - JSON-RPC: get_value on list keys would return a value on non-existing
    list entries instead of data not found. This has been fixed.

    (ENG-16878)

  - JSON-RPC: The get_case method now support choice in choice. To get the
    case for a choice in choice set the choice parameter like:
    "/top-choice/top-case/nested-choice".

    (ENG-16742)

  - JSON-RPC: Large JSON-RPC requests caused Internal Server Error, this is
    fixed.

    (ENG-15971, RT:23968, RT:31780, PS-27711, PS-7632)

  - Java API: There was an bad reference of an NCS class in the ConfD java
    api that prevented it from compiling. This has been fixed.

    (ENG-17155, RT:30831)

  - Java API: Japi Navu.KeyPath2NavuNode for paths that ends on a leaflist
    does not have correct internal representation. This has been fixed.

    (ENG-5841)

  - NETCONF: If a NETCONF client subscribed to notifications and on the same
    session did an <edit-config>, the session could deadlock.  This bug has
    been fixed.

    (ENG-17599, RT:31306, PS-27393)

  - NETCONF: In start phase 0, after a successful maapi_lock; maapi_unlock
    failed with an internal error. This has been fixed.

    (ENG-17589, RT:31139, PS-27282)

  - NETCONF: A leaf-list with a min-element could cause a Netconf-replace
    operation to fail for the Candidate DB. This has now been fixed.

    (ENG-17537, RT:31343, PS-27424)

  - NETCONF: Proper error message is now produced for a 'range' error.

    (ENG-17478, RT:31321, PS-27387)

  - NETCONF: The reply to partial-lock had incorrectly formatted xmlns
    declarations, this has been fixed.

    (ENG-17371)

  - NETCONF: When a running ConfD was upgraded with new datamodels, the yang
    library in NETCONF and RESTCONF would not be rebuilt.  This bug has been
    fixed.

    (ENG-17359, RT:31073)

  - NETCONF: The NETCONF server now properly handles <with-defaults>
    "report-all-tagged" in <copy-config>.

    (ENG-16828, RT:28141, PS-8978)

  - NETCONF: The NETCONF server would silently accept an <rpc> message with
    more than one operation in it, if the operations were non-built-in.
    This bug has been fixed.

    (ENG-15979, RT:30165, PS-9917)

  - NETCONF: The NETCONF server now sends correct error-app-tags for
    <partial-lock>.

    (ENG-15518, RT:27090, PS-8584)

  - Packages: When configuring ssl/extraListen, function packs such as PNP
    would fail setting up an internet server. This has been fixed.

    (ENG-17861, RT:31876, PS-27782)

  - Python API: A list where one of its keys is an identityref can now be
    iterated using Maagic even if two identities with the same
    name but from different namespaces are present in the list.

    (ENG-17337)

  - Python API: Calling any of the _confd methods
    cdb.trigger_subscriptions(), cdb.trigger_oper_subscriptions() or
    cdb.replay_subscriptions() while supplying a non-empty sub_points list
    would cause a crash. This has been fixed.

    (ENG-17209)

  - Python API: When using the dp.Action.action or dp.Action.rpc decorators
    it wasn't possible to return confd.DELAYED_RESPONSE. This has been
    fixed.

    (ENG-17109)

  - Python API: When a yang enumeration type was used in a leaf-list or in a
    union, reading that gave back the numeric value. Now a maagic.Enum
    object is returned (as it should). Also, setting an enumeration value in
    a union which also contains a string didn't always work. This has been
    fixed.

    (ENG-1934, RT:30348, PS-10009)

  - REST API: REST custom errors was not reflected in the error reply

    (ENG-16874, RT:30195, PS-9927)

  - REST API: REST DELETE failed when it was sent in a /api/transaction/N
    resource. This has been fixed.

    (ENG-16206, RT:30040, PS-9850)

  - REST API: Fixing regression bug where a POST (create) REST request on an
    already existing leaf responded with incorrectly HTTP 400 instead of
    correctly HTTP 409.

    (ENG-16182, RT:29905, PS-9778)

  - RESTCONF: The apply-rollback-file action did not work when
    rollbackNumbering was set to fixed (in confd.conf), this has been fixed.

    (ENG-17618)

  - RESTCONF: YANG Patch no longer emits a spurious 'edit-status' XML
    end tag if  'global-status' is 'ok'.

    (ENG-17147)

  - RESTCONF: Empty Accept header no longer yield a response with HTTP 500
    Internal Error.

    (ENG-16858, RT:30620, PS-10160)

  - RESTCONF: REST/RESTCONF keys in a JSON payload may come in any order

    (ENG-16741, RT:29777, RT:29814, PS-9727, PS-9744)

  - RESTCONF: Fixing regression bug where a POST (create) RESTCONF request
    on an already existing leaf responded with incorrectly HTTP 400 instead
    of correctly HTTP 409.

    (ENG-16544, RT:29905, PS-9778)

  - RESTCONF: When receiving string values in JSON syntax, if any of the
    characters 0x08 (\b or \u0008 in JSON) or 0x0c (\f or \u000c) was part
    of the string, the RESTCONF server would incorrectly interpret those as
    a backslash "\" followed by "b" or "f" respectively.
    This has been fixed.

    (ENG-16487, RT:28398, PS-26444)

  - Toolchain: If confdc was given a YANG module without a module name, it
    would crash.  This bug has been fixed.

    (ENG-17783, RT:31729, PS-27669)

  - Toolchain: The compiler did not apply the result of evaluating the
    'if-feature' substatement for top-level nodes in a YANG module, i.e. the
    nodes were included regardless of which features were supported. This
    bug was introduced by the correction to ignore 'augment', 'deviation',
    and 'tailf:annotate' when the target node had been removed due to
    'if-feature' evaluation (Issue tracker: #25936, #27441), and has now
    been fixed.

    (ENG-17636, RT:31506, PS-27543)

  - Toolchain: If a deviation module added a "must" statement to a node that
    was augmented from another module, and the XPath expression used a
    prefix that was only defined in the deviation module, the YANG compiler
    would incorrectly claim that the prefix was invalid. This bug was
    introduced in ConfD-6.5.2 and has now been fixed.

    (ENG-17483, RT:31307, PS-27377)

  - Toolchain: Schema loading would fail if a YANG module augmented a
    notification into another module. This has been fixed.

    (ENG-17230, RT:30939, PS-27159)

  - Toolchain: If a module had a local augment that added a node with the
    same name as a node in a sibling case, the confdc compiler would not
    flag this error.  This bug has been fixed.

    (ENG-16309, RT:28099, PS-8957)

  - Toolchain: If a deviation module added a 'unique' statement to a list in
    an 'augment' section of a module, and imported the augmenting module
    with a prefix that was different from the one defined in the augmenting
    module, the YANG compiler would fail with "internal error". This has
    been fixed.

    (ENG-16248, RT:29746, PS-9713)

  - Toolchain: If a YANG union had an invalid member type definition (e.g.
    the type name had an undefined prefix), and there was a default value
    that needed to be matched against the invalid member type, the compiler
    would fail with "internal error" instead of reporting the actual
    problem. This has been fixed.

    (ENG-15208, RT:29552, PS-9614)

  - Web Server: The TLS server answered with different TLS alerts to
    different error types in the RSA PKCS #1 1.5 padding. This could allow
    an attacker to decrypt content or sign messages with the server's
    private key (this is a variation of the Bleichenbacher attack). This has
    been fixed.

    (ENG-17396)

  - XPath: XPath expressions containing mandatory leaves with
    when-expressions were sometimes incorrectly evaluated to be existing
    even though they were not.
    This has now been fixed.

    (ENG-17458, RT:31260, PS-27342)

ConfD-6.5 [October  6, 2017]
============================

Deprecation notice:

  - Toolchain: pyang will be removed from ConfD in a
    future release.  If you need pyang, we recommend that you download the
    latest version of pyang from github (https://github.com/mbj4668/pyang).

    (Issue tracker: #26851)

Removals:

  - Documentation: The user guide previously mentioned a possibility to
    login via JSON-RPC and re-use the resulting session cookie for REST and
    RESTCONF requests, this has been removed.

    (Issue tracker: #26857)

  - Python API: The module _confd.deprecated.maapi has been removed.


Non-backwards compatible enhancements:

  - confd: The internal representation of leaf-lists has changed.
    Leaf-lists now behave similar to lists in terms of operations, i.e.,
    individual elements can now be created and deleted instead of
    setting/deleting the entire leaf-list as a single entity. Attributes
    can be set on individual leaf-list elements.

    = Highlights =

    * create and delete can now be used on individual leaf-list elements.
    This affects the following APIs:

    * C

    * Java

    * Python

    * Erlang

    * JSON-RPC

    * Attributes can be set on leaf-list elements.

    * For convenience, previous operations for setting/deleting whole
    leaf-lists still exist, but the semantics are somewhat different. In
    terms of actual operation these will result in a series of create and
    delete operations of leaf-list elements, which will result in a
    different view when iterating over a changeset.

    * `diff_iterate` will report create/delete for leaf-list elements
    instead of set/delete for the whole leaf-list (see notes on backwards
    compatibility below).

    * Data providers will get invocation of
    `get_next()`/`exists_optional()`/`create()`/`remove()`/`num_instances()
    `/`move_after()` data callbacks for indivdual leaf-list elements
    instead of `get_elem()`/`set_elem()`/`remove()` for the whole leaf-list
    (see notes on backwards compatibility below).

    * Entries in `audit.log` will now show individual create and delete
    for leaf-list elements.

    == Migration ==

    * While operations for setting/deleting whole leaf-lists still exist,
    they should be seen as convenience and be changed in the long run to
    the new operations.

    * Code doing iteration on changesets, e.g., subscribers need to be
    changed to expect create/delete on leaf-list elements. As a stop gap
    measure one can use a newly introduced (and deprecated) flag to get the
    old behaviour. This change should be minimal, but please note that
    there are limitations.

    * Data providers need to be changed to expect different data callback
    invocations as described above. As a stop gap measure one can use a
    newly introduced (and deprecated) flag to get the old behaviour.

    == Backwards compatibility ==

    Certain operations can be made to run in a backwards compatibility
    mode, making them behave as before, i.e., handling leaf-lists as single
    elements. The flags for controlling this behaviour are deprecated,
    meaning that they will be removed in a future release.

    * For the iteration functions in the CDB and MAAPI APIs, the flag
    ITER_WANT_LEAF_LIST_AS_LEAF can be used to get the old behaviour, see
    the confd_lib_cdb(3) and confd_lib_maapi(3) manual pages.

    * For data providers, the flag CONFD_DAEMON_FLAG_LEAF_LIST_AS_LEAF can
    be used to get the old behaviour, see the confd_lib_dp(3) manual page.

    == Limitations ==

    * There is no option to downgrade to a previous version of ConfD.

    * CDB subscribers on slaves cannot use the backwards compatibility
    flag for iteration.

    * If transactions on leaf-lists conflict with each other, iteration
    might produce unexpected results due to a set/delete on the whole list
    actually being composed of individual create/delete operations.

    (Issue tracker: #17868, #18557, #18980, #19136, #19177, #20326, #21179,
    #24027, #25379, #27130, #27112, #27789, #28594, #28932)

  - confd: Improve consistency and clarity in audit logging.

    * Src IP and port, protocol and context have been added to audit log
    messages.

    * Wording in audit log messages have been changed to be consistent and
    clearly differentiate between authentication attempts (and methods) and
    the final login result.

    * A number of logsyms have changed named or been removed

    The following logsyms are new (due to renaming): *
    `LOCAL_AUTH_SUCCESS` * `LOCAL_AUTH_FAIL` * `PAM_AUTH_SUCCESS` *
    `PAM_AUTH_FAIL` * `EXT_AUTH_SUCCESS` * `EXT_AUTH_FAIL` *
    `AUTH_LOGIN_SUCCESS` * `AUTH_LOGIN_FAIL` * `AUTH_LOGOUT`

    The following logsyms have be renamed or removed (due to no longer
    being used): * `BAD_LOCAL_PASS` * `NO_SUCH_LOCAL_USER` *
    `PAM_LOGIN_FAILED` * `PAM_NO_LOGIN` * `EXT_LOGIN` * `EXT_NO_LOGIN` *
    `SSH_LOGIN` * `SSH_LOGOUT` * `SSH_NO_LOGIN` * `WEB_LOGIN` *
    `WEB_LOGOUT`

  - confd: Input parameters to actions and rpcs are now validated with
    respect to all constraints specified in the YANG model. A side effect
    of this change is that empty non-'presence' containers in the input are
    never passed to the action/rpc implementation, regardless of whether
    they were provided in the invocation.

    (Issue tracker: #26216, #27243, #27609, #28164, #29275)

  - CLI: If the prompt contained vt100/xterm control sequences, for example
    for setting the xterm title, then those characters would be counted as
    part of the prompt and the error indication arrow would be misaligned.
    This has now been fixed such that many control sequences are
    automatically recognized and ignored. Also, two new magical sequences:
    \[ and \] has been added. They can be used to indicate that the
    characters in between should be ignored when calculating the width of
    the prompt. However, any prompt already containing \[ or \] need to
    change to [ and ] respectively. Previously \[ and \] would be
    completely equivalent to [ and ].

    (Issue tracker: #29480)

  - JSON-RPC: get_schema now returns children list for types that can have
    children, even if no child exist.

  - Python API: logging has been updated to match the format of existing
    ConfD log files.

    (Issue tracker: #28782)

  - Toolchain: The algorithm that generates integer values for YANG
    identifiers has been modified to generate a different value for the
    first identifier in each line below, to avoid the conflict with the
    second identifier in the same line. Thus it is no longer necessary to
    use tailf:id-value for any of these identifiers to avoid the conflicts,
    and it is recommended to remove any existing tailf:id-value statements
    for them.

    community-id unit

    lag_id protocol-operation

    fabric-interfaces if-name-str

    ejpol-items last-received

    isis-context-information redundancy-events

    si-nat-icmpv6-errors-local-nptv6 in-octets

    tBgpInstanceParamsExtTblLstCh tos-type-info

    (Issue tracker: #30064)

Enhancements:

  - confd: Data kickers are now validated agains the YANG schema. The
    leaves 'monitor', 'trigger-expr' and 'kick-node' must comply to the
    YANG models.

  - confd: The CONFD_NOTIF_COMMIT_DIFF event now also includes the
    "comment" and "label" given for the commit (if any) in the
    confd_commit_diff_notification struct, see the User Guide section "12.4
    Commit Events".

    (Issue tracker: #27664)

  - CDB: It is now possible to give data kickers priorities, 0-255,
    deciding order of execution when multiple data kickers triggers at the
    same time. Also, it is possible to serialize data kickers by
    configuring a serialization number; 0-255.

  - CLI: 'select' and 'de-select' are now available as pipe commands when
    displaying the configuration in operational mode (eg. 'show
    running-config') in the I-style CLI.

    (Issue tracker: #28877)

  - Examples: Quagga demo was removed from ConfD and is an external demo.

  - Examples: linuxcfg - new route component based on RFC 8022

  - Examples: Add RESTONF query example.

  - Examples: linuxcfg - routing component, added support for active route

  - Examples: added set-hook and transaction-hook example

  - Examples: new YANG model transformation callpoint implementation
    example

  - Examples: added confirmed commit example

  - Examples: NETCONF TCP transport was disabled in the confd.conf and
    NETCONF SSH is now used as default NETCONF transport mechanism.

  - Examples: Enable the errorLog in the examples. See
    /confdConfig/logs/errorLog/enabled.

  - Java API: Japi Dp - when a Dp daemon started it would previously start
    5 worker threads as the min value for the worker threadpool. This min
    is now changed to 1 thread.

    (Issue tracker: #29565)

  - JSON-RPC: Extend show_config method with optional parameters result_as
    string|json and with_oper true|false

  - NETCONF: Added a confd.conf parameter "no-continue-on-error".  If this
    parameter is set to "true", then the NETCONF server will not support
    the "continue-on-error" error-option.

    (Issue tracker: #26796)

  - Python API: It was not possible to e.g. call an action from inside
    another action if they were both registered to the same
    confd.dp.Daemon. This has been fixed.

  - Python API: Support for accumulate functionality in ConfD data
    providers has been added.

    (Issue tracker: #27320)

  - REST API: Added RESTCONF API according to
    draft-ietf-netconf-restconf-18. As a result, the existing REST API has
    got an improved json encoding, which may cause backward incompatible
    changes.

  - SNMP Agent: If any of the MIB models that hold configuration for the
    SNMP Agent (SNMP-COMMUNITY-MIB, SNMP-VIEW-BASED-ACM-MIB,
    SNMP-TARGET-MIB, SNMP-USER-BASED-SM-MIB) is annotated with a callpoint
    (and consequently implemented by an external data provider) the SNMP
    Agent must re-read the configuration for any changes to take effect.
    This has previously been achieved by disabling and re-enabling the SNMP
    Agent. A new MAAPI function has been added for triggering the SNMP
    Agent to re-read its configuration - maapi_snmpa_reload().

    (Issue tracker: #24426)

  - Toolchain: The script "netconf-console" now accepts the command line
    parameter "--start-time" and "--stop-time" to be used together with
    "--create-subscription".

    (Issue tracker: #26653)

Non-backwards compatible corrections:

  - Building: confdc / yanger now checks if a definition references
    something with a "lesser" "status" (e.g., if a "current" leaf uses a
    "deprecated" typedef).

    (Issue tracker: #28373)

  - Java API: Previously an item with declared tailf:id-value larger than
    2^31 was not correctly handled. This has been fixed.

    (Issue tracker: #27560, #27874, #29613)

  - JSON-RPC: get_schema levels parameter now apply to list schema entries.

    (Issue tracker: #28305)

  - JSON-RPC: get_schema returned incomplete list of children for action
    output. This has been corrected.

  - JSON-RPC: access rules returned from get_schema now more closely
    reflect which operations are allowed.

    (Issue tracker: #22865)

  - JSON-RPC: get_value no longer qualify identityref values unless there
    is a conflict.

  - NETCONF: The NETCONF server would send 'common-session-params' in the
    'netconf-confirmed-commit' notification even when the 'confirm-event'
    was 'timeout'.  This bug has been fixed.

    (Issue tracker: #28366)

  - Python API: Service and Action now execute requests in separate threads
    improving parallelism.

    (Issue tracker: #28242)

  - Python API: add tctx to experimental DataCallbacks handler and improve
    support for leaf-list.

Corrections:

  - confd: When writing kicker monitors in XPath format, augmented
    namespaces were not always handled correctly. This has been fixed.

    (Issue tracker: #27939, #29180)

  - confd: Action including leaf-list could make the CLI crash on tab
    completion. This has now been fixed.

    (Issue tracker: #29471)

  - confd: Time to execute maapi_set_values() used to grow quadratically
    with the size of the value array. This has been fixed so the growth is
    now linear.

  - confd: If a list had a sub-list with a 'when' expression, and a list
    entry and sub-list entries were created, and an additional change made
    the 'when' evaluate to false, all in the same transaction, the sub-list
    entries were not actually deleted. This has been fixed.

  - AAA: When PAM authentication was used, and REST or RESTCONF requests
    were made continuously with an interval of less than 10 seconds, the
    amount of memory used by the PAM interface process 'epam' could grow
    without bounds. This has been fixed - the amount of memory used by
    'epam' is now limited in this scenario.

    (Issue tracker: #29648)

  - Building: confdc now allows a module to annotate statements defined in
    the same module.

    (Issue tracker: #29738)

  - Building: The ietf-yang-library-ann.yang module, which annotates a
    callpoint to ietf-yang-library.yang, was not included in the release.
    This has been fixed.

    (Issue tracker: #29856)

  - C-API: The confd_ha_connect() function could in some cases write a NUL
    character outside an array on the stack. This has been fixed.

    (Issue tracker: #26979)

  - CDB: Fix bug when setting an operational choice using MAAPI. Changing
    the case value did not work as intended when using an ordinary
    transaction (allowing writes to both config true and false data).
    Using an operational (config false) only transaction was not affected.

  - CDB: Fix a bug which might crash ConfD during upgrade (in `phase0`).
    Calling `cdb_get` on a non existing path could crash ConfD under
    certain circumstances when trying to format an error message including
    the non existent path.

    (Issue tracker: #29075)

  - CLI: Add missing <cr> for '?' when displaying completion for leaf-list
    type.

    (Issue tracker: #22307)

  - CLI: Combining lists with tailf:cli-sequence-commands and
    tailf:cli-compact-syntax the CLI could miss printing out some data
    nodes. This has been fixed.

    (Issue tracker: #25367)

  - CLI: When using leaf-refs in the data model and trying to get info
    using '?' or <TAB> in the CLI the CLI appears non-responsive. This has
    been fixed.

    (Issue tracker: #26727)

  - CLI: When combining the clispec-options noDuplicate and auditLogHide
    the CLI couldn't recognise if certain executions was or wasn't
    different. Thus it would block the launcher even when it wasn't
    necessary. This has been fixed.

    (Issue tracker: #24086)

  - Documentation: Improved documentation for Confd installation on a
    target system

    (Issue tracker: #21805, #21949, #26220, #26688, #26628, #26628, #27424,
     #23648, #28165, #28166)

  - Documentation: Removed a reference to the previously removed -x option
    to 'confdc' from the User Guide.

    (Issue tracker: #26792)

  - Documentation: Updated confd_lib_maapi(3) to reflect the fact that
    system sessions now are shown in 'confd --status' output.

    (Issue tracker: #28964)

  - Documentation: Changed the documentation to recommend that
    /confdConfig/logs/errorLog should be enabled.

  - Examples: Update ietf-system YANG model in linuxcfg example to latest
    version (RFC 7317).

  - Examples: couple of linuxcfg fixes - related to C compilation, broken
    "ietf-system" and "ipmibs" component transform, and YANG if-feature in
    "ietf-system"

  - Java API: Setting a leaf or leaf-list to a value containing unicode
    characters could fail with internal error. This has been fixed.

    (Issue tracker: #27066)

  - Java API: XML namespace declarations are now taken into account when
    producing ConfXMLParam array with NavuParser.

    (Issue tracker: #29637)

  - Java API: Fixed NavuParser in java to handle empty string value.

  - JSON-RPC: The JSON-RPC method "subscribe_cdboper" could not handle
    subscriptions to paths adorned when statements. This has been fixed.

    (Issue tracker: #23246)

  - JSON-RPC: When calling an action through the 'run_action' method and
    the action was broken in such a way that it returned something other
    than was specified in the yang file, the session would be terminated
    and all subsequent calls on that session would fail (in the WebUI you
    would be logged out). This has been fixed.

  - JSON-RPC: Nodes that contained a "when" expression were always
    displayed, no matter how the "when" expression evaluated. This has been
    fixed.

  - JSON-RPC: get_schema on an action augmented from a different namespace
    would fail. This has been corrected.

    (Issue tracker: #28976)

  - JSON-RPC: run_action now supports augmented input parameters. Use
    prefix:tag if disambiguation of tag is required.

    (Issue tracker: #29616)

  - JSON-RPC: Calling get_schema with insert_values = true on a tree with
    an augmented case failed if the augmented case was currently active.
    This has been fixed.

  - JSON-RPC: set_value incorrectly used create instead of update operation
    when verifying NACM rules in most cases. This has been corrected.

    (Issue tracker: #22865)

  - JSON-RPC: get_schema did not include qname for case entries. This has
    been corrected.

  - NED: Mandatory leaves could cause 'compare-config' to show a non-empty
    diff while in fact there is no diff. This has now been fixed.

  - NETCONF: If a leaf with a default value in the data model was deleted,
    the NETCONF server now generates a proper "netconf-config-change"
    notification.

  - Python API: _confd.maapi.diff_iterate() didn't report MOP_ATTR_SET and
    MOP_MOVED_AFTER correctly. This has been fixed.

  - Python API: When calling the function _confd.ha.status() the Python API
    could leak some memory. This has been fixed.

    (Issue tracker: #29666)

  - REST API: REST Query of an 'inline' empty leaf caused all config to be
    returned. This has been fixed.

    (Issue tracker: #28517)

  - RESTCONF: Authentication failures did not return a RESTCONF error
    response. This has been corrected.

    (Issue tracker: #29399)

  - RESTCONF: The RESTCONF basic example is now included in the release.

  - RESTCONF: If ConfD is configured to communicate with a ConfD subagent
    over SNMP, and the connection to the subagent is lost, querying with
    RESTCONF returns a correct HTTP 404 Not Found with error-tag
    'invalid-value' and also an explanatory error-message; instead of an
    HTTP 500 Internal Error.

    (Issue tracker: #27054)

  - RESTCONF: The YANG model 'ietf-restconf' is now available for retrieval
    over REST and RESTCONF.

    (Issue tracker: #29571)

  - Toolchain: pyang --tailf-sanitize crached if it found some
    tailf:symlinks.  This bug has been fixed.

  - Web Server: The default absolute timeout has now been extended to 16
    hours.

  - Web Server: When the docroot tag was not specified, the resulting file
    system path constructed in webui_appmod_hatchery was invalid, which
    caused the exception. This has been fixed.

  - Web UI: User could download files from virtual directories when not
    authenticated, e.g. the directory enabled by the customDir option in
    confd.conf. This has been fixed.

    (Issue tracker: #26176)

  - Web UI: WebUI Prime failed to initialize if amd.less or amd.js could
    not be loaded correctly. This has been fixed.

  - Web UI: Due to backend fixes lists was faulty makred as readonly. This
    has now been fixed.


ConfD-6.4.3.1 [September 13, 2017]
==================================

Enhancements:

  - RESTCONF: RESTCONF has a cache for AAA requests, previously the
    cache TTL was hard coded to 10 seconds. The configurable
    /confdConfig/aaa/rest/authCacheTTL enables custom cache TTL.

    (Issue tracker: #27563)


ConfD-6.4.3 [August 30, 2017]
=============================

Non-backwards compatible enhancements:

  - confd: Installing ConfD in a directory that had spaces in the path
    would result in confusing errors when trying to start ConfD. This has
    been fixed - now the installer rejects such installation directories
    with an appropriate error message.

    (Issue tracker: #27397)

  - CLI: Improved the 'clear history' command so that it is accessible in
    both operational and configuration modes in all CLI styles.

    (Issue tracker: #27486)

Enhancements:

  - confd: Allow not specifying 'tailf:cli-prefix-key' when deleting list
    instances in the CLI.

    (Issue tracker: #27887)

  - confd: Added ConfD binary for Linux on 64-bit PowerPC big endian
    architecture.

  - C-API: The amount of non-shared memory used when using shared memory
    for schema information for the C and Python APIs has been optimized.

    (Issue tracker: #27194)

  - C-API: Added support for passing a relative keypath to
    maapi_save_config(), i.e. the current position from previous
    maapi_cd(), maapi_pushd(), etc calls will be combined with the keypath
    passed to maapi_save_config().

    (Issue tracker: #27828)

  - C-API: Added the CONFD_DAEMON_FLAG_PREFER_BULK_GET daemon flag for the
    data provider API, to make it possible to request that the get_object()
    callback rather than get_elem() should be used whenever possible. See
    the confd_lib_dp(3) manual page for details.

    (Issue tracker: #28792)

  - C-API: Added the CONFD_DAEMON_FLAG_BULK_GET_CONTAINER daemon flag for
    the data provider API, to make it possible to indicate that the
    get_object() callback may be used for a toplevel container when there
    is no ancestor list node. See the confd_lib_dp(3) manual page for
    details.

    (Issue tracker: #29131)

  - CDB: Increased the buffer size used to load CDB. In many cases, this
    substantially decreases ConfD startup time.

    (Issue tracker: #29297)

  - CLI: Hide RESTCONF from CLI when RESTCONF is disabled.

  - CLI: A new confd.conf setting, 'defaultLeafListStyle', has been
    introduced. This setting will (globally) control how plain leaf-lists
    behave. The setting is optional, and can be configured as either
    'flat-list' or 'range-list'. The setting will make all plain leaf-lists
    behave either as 'tailf:cli-flat-list-syntax', or
    'tailf:cli-range-list-syntax'.

    (Issue tracker: #26076)

  - CLI: Implement to support XML or JSON format for action/rpc output by
    using the piped command "display".

    (Issue tracker: #27988)

  - CLI: If the notification log is corrupt the CLI reported internal error
    to operator before. The new behaviour reports a 'file corrupt' error
    which also refers to the actual corrupt (wrap log) file.

    (Issue tracker: #28507)

  - CLI: When setting leaf node data in the CLI that has many siblings,
    performance loss could be seen even when the sibling data wasn't
    modified. This performance has been improved.

    (Issue tracker: #28076)

  - CLI: A new CLI YANG extension has been added,
    'tailf:cli-only-in-autowizard'. This extension disallows entering leaf
    values outside of the autowizard.

    (Issue tracker: #27609, #28753, #29044, #28607, #29071)

  - Java API: Added C-API flag CS_NODE_IS_LEAFREF, Java-API methods
    MaapiSchemas.CSNode.isLeafref() and NavuNodeInfo.isLeafref(), and
    Python-API method CsNode.is_leafref(), for nodes that have YANG type
    'leafref'.

    (Issue tracker: #26245, #26686, #26870)

  - Java API: Cdb.triggerOperSubscriptions() has been added to artificially
    trigger operational data subscriptions in Cdb

    (Issue tracker: #27380)

  - Java API: Navu string representation of the bits YANG type as space
    separated list of bit names were possible in NavuNode.set() but not
    through NavuNode.setValues() (when embedded in an XML snippet). This
    has been fixed.

    (Issue tracker: #28651)

  - Java API: Error reporting has been improved. Previously some errors
    were not logged, or logged at low log levels, now they are logged at
    level ERROR.

    (Issue tracker: #26210)

  - JSON-RPC: Extend run_action method with json as a valid value for the
    format option.

  - JSON-RPC: New function get_module_prefix_map returning a map from
    module name to module prefix.

  - RESTCONF: A new configurable 'schemaServerUrl' has been added under
    restconf in order to set the schema url for all resources when getting
    schema information.

    This can be useful for dealing with proxies. Usage example:

    {{{ <restconf>

    <enabled>true</enabled>

    <rootResource>restconf</rootResource>

    <schemaServerUrl>https://www.example.com:7000</schemaServerUrl>
    </restconf> }}}

    (Issue tracker: #28438)

  - RESTCONF: RESTCONF will now always 'read' from the 'running' database,
    and always 'write' to the candidate unless
    /confdConfig/datastores/running/access is set to 'read-write'.

    (Issue tracker: #28629)

  - RESTCONF: If an invalid 'point' is used, i.e. a 'point' with a
    non-existing path, RESTCONF will now print an error message with this
    information.

    (Issue tracker: #28629)

Non-backwards compatible corrections:

  - confd: Several bugs related to key-less lists in the XPath string form
    of YANG instance-identifiers, where the "pseudo key" is mapped to/from
    an XPath positional index, have been fixed:

    ConfD-internal string -> value translation, and the
    maapi_xpath2kpath() function, produced a hkeypath where the "pseudo
    key" was a uint64 instead of int64.

    ConfD-internal value -> string translation incorrectly quoted the
    positional index.

    The C-API confd_str2val() and confd_val2str() functions rejected paths
    with a key-less list and positional index / "pseudo key" as invalid.

    The C-API confd_xpath_pp_kpath() function omitted the closing ']' for
    the positional index predicate.

    (Issue tracker: #29078)

  - CLI: When the "set" command is used to create the leaf which has
    default value, it was evaluated as NACM "update" operation which caused
    NACM authorization results in a different restriction. Instead it shall
    be evaluated as NACM "create" operation. This has now been fixed.

    (Issue tracker: #28701)

  - CLI: When completing during deletion of containers in the CLI, "<cr>"
    would not be displayed as an alternative. This has been fixed.

    (Issue tracker: #29197)

Corrections:

  - confd: When the "set" command is used to create a leaf with a default
    value, it was evaluated as a NACM "update" operation. This caused NACM
    "update" authorization but have now been corrected to evaluate to a
    NACM "create" authorization. Further, setting a leaf to the same value
    it already had now bypasses NACM authorization.

    (Issue tracker: #29073, #28939)

  - confd: Assigning a too large value to /confdConfig/netconf/idleTimeout
    caused an internal error. This has now been fixed by limiting the
    timeout to approximately 49 days.

    (Issue tracker: #25177)

  - confd: If invalid data was written to a data provider socket, ConfD
    could generate an extremely large entry in the error log, which would
    interfere with the error log rotation. This has been fixed.

    (Issue tracker: #27175)

  - confd: DP callback get_attr() was incorrectly called even though
    enableInactive was not enabled. This has now been fixed.

    (Issue tracker: #27145, #29321)

  - confd: Replies from external data providers to the get_case() callback
    were cached in the "object cache" and retrieved from there, even if no
    "bulk" callbacks (get_object()/get_next_object()) were issued, which
    could result in mismatch between case selection and actual data values.
    This has been fixed - the "object cache" is now only used for
    get_case() when the data is retrieved via get_object() or
    get_next_object().

    (Issue tracker: #27000)

  - confd: If the stream socket used for maapi_save_config() was closed
    before all the data had been read, ConfD could leak memory. This has
    been fixed.

    (Issue tracker: #28299)

  - confd: Values for mandatory leaves in a NP-container with a
    when-expression were lost when loading from a Juniper-style config
    file. This has now been fixed.

    (Issue tracker: #28618)

  - confd: Execution of custom cli commands through the cmdptywrapper or
    the cmdwrapper would at rare occasions loose data when large chunks of
    data were pasted to the commands, or written by the command. This has
    been fixed.

    (Issue tracker: #28514)

  - confd: Mandatory leafs were sometimes validated in inactive case
    branches, this has been fixed.

    (Issue tracker: #28875, #29028)

  - AAA: Authentication failures for external authentication when
    /confdConfig/aaa/auditUserName was not set to "always" would generate
    an error report in the error log instead of being logged in the audit
    log. This has been fixed.

    (Issue tracker: #29263)

  - CDB: Default values under 'choice' caused cdb_get to fail during CDB
    upgrade. This has been fixed.

    (Issue tracker: #24416)

  - CDB: The CDB API now calculates cdb_num_instances correctly for
    CDB_PRE_COMMIT_RUNNING.

    (Issue tracker: #26548)

  - CDB: Deleting a large number of operational nodes could cause a
    temporary increase in memory consumption, thereby triggering an
    internal error on systems with a limited amount of memory. This has now
    been fixed.

    (Issue tracker: #28015)

  - CDB: When the CLI is in non-interactive mode a conflicting modification
    would present information that is intended for a interactive CLI. This
    has been fixed.

    (Issue tracker: #29403)

  - CLI: Piping a command to "repeat X" and set the reallocateOperTrans
    confd.conf setting to true, the repeated command wouldn't create a new
    transaction although that was expected. This has been fixed.

    (Issue tracker: #22550)

  - CLI: Using the autowizard in the CLI and pressing return on mandatory
    leafs could result in a no-op. This has been fixed.

    (Issue tracker: #25476)

  - CLI: Changing the prompt for oper/configure mode when in configure mode
    in the CLI would fail to set the correct prompt. This has been fixed.

    (Issue tracker: #27636)

  - CLI: completion would sometimes fail on display-groups. This has been
    fixed.

    (Issue tracker: #27405)

  - CLI: Change to 'tailf:cli-show-no': Do not delete already non-existing
    leafs.

    (Issue tracker: #27991)

  - CLI: When the user enters an unknown stream name to the command 'show
    notification', it prints out "Error: internal error" message in the
    CLI. This has now been fixed by printing out a better error message
    "start replay failed: unknown_stream" instead of "Error: internal
    error".

  - CLI: When calculating table width, the CLI now evaluates when
    expressions to avoid including non-existing paths.

    (Issue tracker: #28436)

  - CLI: When using a mandatory leaf inside a choice/case element the CLI
    wouldn't present a diff for the leaf in J-style CLI. This has been
    fixed.

    (Issue tracker: #28661)

  - CLI: When using tailf:cli-key-format extension any ranges entered
    couldn't be identified on the keys. This has been fixed.

    (Issue tracker: #29017)

  - CLI: When /confdConfig/cli/transactions is disabled and
    /confdConfig/cli/autocommitLoad is enabled in confd.conf, it encounters
    internal error when doing compare file to running configuration in C
    style confd_cli. This has now been fixed.

    (Issue tracker: #28963)

  - CLI: The non-backwards compatible correction for RT:20936 with regards
    to 'allowAbbrevKeys' option in the confd.conf changes the completion
    behaviour when creating list entries. This has been fixed by adding a
    new parameter named 'bypassAllowAbbrevKeys' to the confd.conf to switch
    between the old and new completion behaviours.

    (Issue tracker: #28363)

  - Documentation: Python API HTML documentation was missing. This has been
    fixed.

    (Issue tracker: #28799, #28937)

  - Examples: The webui/extended example would fail to start due to invalid
    default values in a YANG module. This has been fixed.

    (Issue tracker: #29096)

  - Java API: ConfIPv6(String) constructor accepted any string value even
    if it was not a valid IPv6 address. As one of the consequences ConfPath
    constructor could not handle a domain-name value for a list key of type
    inet:host. This has been fixed.

    (Issue tracker: #28031)

  - Java API: NavuParser did not correctly handle leaf-lists of type
    enumeration. NavuParser could also sometimes drop whitespace characters
    in element values. Both issues have now been fixed.

    (Issue tracker: #29440)

  - JSON-RPC: The method 'get_leafref_values' didn't always return values
    when it should. This has been fixed.

    (Issue tracker: #28158)

  - JSON-RPC: get_leafref_values for action parameters is no longer limited
    to 100 values returned.

    (Issue tracker: #28852)

  - JSON-RPC: get_leafref_values did not filter the values on must
    expressions if the leaf parent was a list. This has now been corrected.

  - NETCONF: replayLogCreationTime was not preserved between restarts, this
    has been corrected.

    (Issue tracker: #26384, #27857)

  - NETCONF: NETCONF netconf-config-change notifications were emitted for
    changes in non-exported name-spaces, causing information leakage and a
    waste of resource usage. This has now been fixed.

    (Issue tracker: #28652)

  - NETCONF: NETCONF dry-run output did not properly format xmlns for list
    entries with ordering specified, this has now been corrected.

    (Issue tracker: #29272, #29628)

  - NETCONF: The :url capability for the NETCONF server did not support
    IPv6 for the ftp and sftp schemes. This has been fixed.

  - Python API: When using Maagic to call an action with a container in its
    input block and no values were set inside that container the action
    would fail with a message saying that the container is missing. This
    has been fixed.

  - Python API: Actions implemented using the high-level API failed to
    execute if the action name required namespace to be unique at the
    specified path. This has been corrected.

    (Issue tracker: #29103)

  - Python API: The method traceback.print_exc() was misspelled in some
    examples. This has been fixed.

    (Issue tracker: #29483)

  - REST API: annotations was not properly encoded when outputting XML,
    this has been fixed.

    (Issue tracker: #27781, #28041, #29330)

  - REST API: When running a query (JSON) and requesting result-type
    'inline' the produced response was sometimes incorrect due to a missing
    comma. This has been fixed.

    (Issue tracker: #28516)

  - RESTCONF: Errors in external data providers caused internal errors when
    displaying list data in XML format. This has been corrected.

    (Issue tracker: #27917)

  - RESTCONF: Field queries for non-existing children could lead to a
    broken JSON output. This has been addressed.

    (Issue tracker: #28728)

  - RESTCONF: If depths of 1 or more were used together with fields, the
    fields parameters were ignored leading to all siblings being selected.
    This has been addressed.

    (Issue tracker: #28730)

  - RESTCONF: Fields would not accept parameters with a module-name as
    prefix. This has been addressed.

    (Issue tracker: #28729)

  - RESTCONF: The top-tag 'ietf-restconf:data' was missing in JSON output
    for GET queries of the /restconf/data resource. This has been
    addressed.

    (Issue tracker: #28825)

  - RESTCONF: If the parameter 'nonconfig' was used on a GET request on
    /restconf/data, and rpcs were present, RESTCONF would crash. This has
    been addressed.

    (Issue tracker: #28727)

  - RESTCONF: 204 No Content was returned for leaf-creation. The correct
    behavior is to return '201 Created' if the leaf did not exist, and '204
    No Content' if the leaf was modified. This has been addressed.

    (Issue tracker: #29069)

  - RESTCONF: If a stream of data fails mid stream, for example if the data
    provider failed, RESTCONF would 'hang'. This has been addressed.
    RESTCONF will now output an error mid stream. The 'data' will still be
    broken, but now it is possible to identify the issue.

  - SNMP Gateway: If the snmpgw feature was enabled, and any snmpgw agent
    was set up without a subscriptionId, then 'confd --status' would print
    out <Internal error> instead of information about callback daemons
    (callpoints, validation points etc.). Also, there would be no data for
    /confd-state/internal in the confd-monitoring model. This has been
    fixed.

    (Issue tracker: #28165, #29575)

  - Toolchain: If a "config false" leaf had a tailf:link to a "config true"
    leaf, the "config false" leaf would incorrectly be accepted (but
    ignored) for the CLI 'delete' or 'no' command. This has been fixed.

    (Issue tracker: #28391)

  - Web Server: Assigning a too large value to
    /confdConfig/webui/idleTimeout caused an internal error. This has now
    been fixed by limiting the timeout to approximately 49 days.

    (Issue tracker: #25177)


ConfD-6.4.2.1 [June 30, 2017]
=============================

Corrections:

  - NETCONF: Huge amount of garbage in Netconf message could cause an
    internal error. Any returned error data larger then 1024 bytes
    will now be truncated.

    (Issue tracker: #26280)

  - Toolchain: If YANG module A augmented module B with choice/case nodes
    and descendant data nodes, and module C in turn augmented with the
    target being one of the data nodes augmented from module A,
    the YANG compiler would construct an invalid path for the augment
    from module C, causing the load of module C to fail with a
    "Missing augment path" error. This bug has been fixed.

    (Issue tracker: #28519)

  - CLI: CLI-spec commands with many optional parameters, each with
    completionpoint callback, were slow to process. This bug has been fixed.

    (Issue tracker: #28095)


ConfD-6.4.2 [June 14, 2017]
===========================

Removals:

  - Examples: The incomplete and thus non-working nginx_proxy example has
    been removed.

Non-backwards compatible enhancements:

  - Java API: JAPI has introduced ConfBitBig for YANG bits datatype with
    bits having position 64 or higher. In the same a ConfBits base class
    has been introduced with is base class for ConfBit32, ConfBit64 and
    ConfBitBig. The string representation for these types was wrong and has
    been changed to 'bin<0x...>' with the hexadecimal representation of the
    bitset in little endian order.

    (Issue tracker: #26649, #26983, #27343)

Enhancements:

  - confd: Added the MAAPI_CONFIG_OPER_ONLY flag for maapi_save_config(),
    to save only operational data and ancestors to operational data nodes.
    This functionality is also available via the -O option to 'confd_load'.

    (Issue tracker: #27797)

  - confd: Added ConfD binary for Linux on 64-bit ARMv8 architecture, also
    referred to as AArch64 or ARM64.

    (Issue tracker: #25806)

  - Examples: added logging_framework example (and header file)

  - Python API: The Python API is no longer dependent on the environment
    variable LD_LIBRARY_PATH.

    (Issue tracker: #27509)

Non-backwards compatible corrections:

  - NETCONF: ConfD would reply with an incorrect reply to NETCONF's
    <partial-lock> RPC.  This bug has been fixed.

    (Issue tracker: #26598)

  - NETCONF: The <rpc-reply> to an action invocation was not RFC 7950
    compliant.  This bug has been fixed.

    (Issue tracker: #27139)

  - NETCONF: NETCONF "file" url operations used to be done as the OS user
    running ConfD.  This is now changed so that the operations are done as
    the NETCONF user.

    (Issue tracker: #26087)

  - RESTCONF: Using PUT on ordered-by leaf-lists together with query
    parameters "insert" and "point" now works as intended. Previously, it
    was not possible to arbitrary insert elements into a leaf-list. Using
    "point" required the target resource to be prefixed with the RESTCONF
    root resource and "data", e.g. /restconf/data; this behaviour is no
    longer supported.

    (Issue tracker: #28149)

Corrections:

  - confd: A mandatory type 'empty' leaf inside a case will abort all
    transactions changing the active case. This has now been fixed.

    (Issue tracker: #26233)

  - confd: ConfD could not handle YANG 'bits' types with highest 'position'
    value above 63 (rejected by the compiler). This has been fixed, however
    the highest 'position' value is still limited to 8191, since the
    bitmask representation used for internal and API values of type 'bits'
    is not feasible for use with arbitrarily high 'position' values.

    (Issue tracker: #26649, #26983, #27343)

  - confd: NP-containers with when-expressions were not re-evaluated
    properly resulting in missed validation. This has now been fixed.

    (Issue tracker: #27521)

  - confd: 'load override' of a xml file could cause internal errors. This
    has now been fixed.

    (Issue tracker: #27733)

  - confd: When using MAAPI interface, check for existence of a
    non-presence container located directly under a choice could report
    incorrect result if this choice's selected case has been switched in
    this transaction. This has been fixed.

  - AAA: If transactions modifying AAA/NACM data were continuously
    committed, it was possible for the process of reloading the internal
    AAA cache to fall behind, causing an unrestricted growth of ConfD's
    memory usage. This has been fixed - now this AAA cache reload is done
    within the transaction commit.

    (Issue tracker: #26419)

  - CDB: Commited P and NP-containers were marked as not-existent in
    pre_commit_running. This has now been fixed.

    (Issue tracker: #27294)

  - CDB: When a slave was connected to the master, the master leaked a few
    file descriptors. This has been fixed.

    (Issue tracker: #27284)

  - CLI: CLI completion does not list the proper range where the leaf range
    restriction shall override the typedef range restriction. This has now
    been fixed.

    (Issue tracker: #21956)

  - CLI: CLI completion shows both old and new deviated type restriction
    description. This has now been fixed.

    (Issue tracker: #26164)

  - CLI: The extension tailf:cli-allow-join-with-key ignored the
    abbreviated command/keys configuration in the CLI. This has been fixed.

    (Issue tracker: #27382)

  - CLI: Command 'logout user' with a non-existing user sometimes causes an
    internal error. This has now been fixed.

    (Issue tracker: #27714)

  - CLI: When admin user applies command 'logout user all' when there is no
    such user logged in, CLI incorrectly sends logout message to all the
    other alive user sessions that are not supposed to receive the message.
    This has now been fixed.

    (Issue tracker: #27735)

  - CLI: Default values are not shown in the pipe command "show ... |
    details | display xml" or "show ... | details | display json". This has
    now been fixed.

    (Issue tracker: #27719, #28275, #19769, #28521)

  - CLI: Using xpath expressions and omitting keys to implicitly reference
    all keys would crash the CLI. This has been fixed.

  - CLI: The xpath eval command lists nodes in reversed system order. This
    has now been fixed.

  - CLI: CLI-spec commands with many optional parameters, where those
    parameters had default values, were slow to process. This has been
    fixed.

    (Issue tracker: #28095)

  - CLI: Caching mechanism used in the CLI could result in missing config
    entries during data alteration. This has been fixed.

    (Issue tracker: #28080, #28583)

  - Java API: ConfEnumeration.getEnumByLabel() failed when used with a path
    pointing to a leaf-list element. This has been fixed.

    (Issue tracker: #27963)

  - Java API: Maapi.getCase() failed with an Exception when used on a
    choice that has a default case defined in the YANG model when
    NO_DEFAULTS flag was in use. This has been fixed.

    (Issue tracker: #28218)

  - JSON-RPC: The method 'get_leafref_values' didn't work when providing
    the 'keys' parameter. Also the documentation was wrong. This has been
    fixed.

    (Issue tracker: #27506)

  - NETCONF: If an action invocation according to RFC 7950 contained
    unknown XML elements, the NETCONF session would crash instead of
    generating an error message.  This bug has been fixed.

    (Issue tracker: #27139)

  - Python API: It was  impossible to use negative enum values. This has
    been fixed.

    (Issue tracker: #27627)

  - Python API: It wasn't possible to call set_label() and set_comment() on
    a maapi.Transaction object. This has been fixed.

  - REST API: REST PUT added elements to a leaf-list instead of replacing
    them. This has now been fixed.

    (Issue tracker: #26613)

  - RESTCONF: The IETF RESTCONF YANG model is now up to date with RFC 8040
    The RESTCONF Protocol.

    (Issue tracker: #27424)

  - RESTCONF: A missing empty leaf in the Json Restconf reply has been
    fixed.

    (Issue tracker: #27782, #27976)

  - RESTCONF: Json syntax error in Restconf error replies is now corrected.

    (Issue tracker: #27826)

  - RESTCONF: Accept-Patch header is now sent in reply to a Restconf
    OPTIONS method call.

    (Issue tracker: #27875)

  - RESTCONF: Newline character in json Restconf error messages is now
    escaped.

    (Issue tracker: #27986)

  - RESTCONF: When using the 'fields' query parameter on deep nodes inside
    a list correct JSON is now emitted. Objects inside a list are no longer
    prepended with the list name.

    (Issue tracker: #27979)

  - RESTCONF: OPTIONS is now returned in the Allow Restconf header.

    (Issue tracker: #27875)

  - RESTCONF: Supplying the "content" query parameter with bad input data
    yielded an HTTP 500 Internal Error. Now it correctly responds with an
    HTTP 400 Bad Request and error-tag invalid-value.

    (Issue tracker: #28219)

  - RESTCONF: Supplying the "with-defaults" query parameter with bad input
    data yielded an HTTP 500 Internal Error. Now it correctly responds with
    an HTTP 400 Bad Request and error-tag invalid-value.

    (Issue tracker: #28152)

  - RESTCONF: Json strings are now encoding according to RFC 7159.

    (Issue tracker: #28332, #28398)

  - Toolchain: If the existence of the target node for an 'augment'
    statement was dependent on evaluation of 'if-feature' statements, the
    'augment' statement was required to have the same feature dependencies,
    in order to avoid errors when the target node didn't exist due to
    'if-feature' evaluation. This has been fixed - now the 'augment' is
    silently dropped if the target node has been removed due to
    'if-feature' evaluation. The same logic is also applied to 'deviation'
    and 'tailf:annotate'.

    Note: if the 'augment' and the target node are in different modules,
    both modules must be compiled with the same set of features for this
    logic to function correctly. (This is not an issue for 'deviation' and
    'tailf:annotate', since separate deviation and annotation modules must
    be compiled together with the target module, and thus the feature set
    is always the same for both modules.)

    (Issue tracker: #25936, #27441)

  - Toolchain: The YANG compiler would fail with "internal error" if a bits
    type exceeding the limit of supported 'position' values was defined in
    a typedef. This has been fixed.

    (Issue tracker: #26983)

  - Toolchain: If a YANG module had a leafref to another node in the same
    module, which in turn had a type that was defined as a leafref in a
    different module, ConfD could fail to start, claiming that the target
    of the first leafref didn't exist. This has been fixed.

    (Issue tracker: #27613)

  - Toolchain: If YANG module A augmented module B, and module A was
    compiled with --deviation giving a module that removed the augment
    target in B via 'deviate not-supported', the compiler would fail with
    "internal error". This has been fixed - now the "problematic" augment
    is dropped, i.e. not included in the generated A.fxs.

    (Issue tracker: #27865)

  - Toolchain: confdc and yanger now allows identifiers in YANG 1.1 modules
    to start with the characters 'xml'.

    (Issue tracker: #28338)


ConfD-6.4.1 [April 26, 2017]
============================

Removals:

Non-backwards compatible enhancements:

  - confd: Non-backwards compatible enhancement:

    Web Server: Support for EC (elliptic curve) cipher suites has been
    added for the SSL/TLS server, and suites using RC4 are no longer
    supported, since this algorithm is not considered secure.

Enhancements:

  - CDB: The [n] integer index form for list keys in the CDB API now also
    works in sessions towards PRE_COMMIT_RUNNING.

    (Issue tracker: #25630)

  - CLI: The southbound interfaces of the CLI are now started already in
    phase1. The northbound interfaces start in phase2 as before.

    (Issue tracker: #26023)

  - CLI: Increased performance during user interaction with the CLI.

    (Issue tracker: #27069)

  - Python API: Removed the undocumented limitation of only supporting
    implementation of validation callbacks in one Daemon per Python VM

    (Issue tracker: #26451)

Corrections:

  - confd: Previously, set-hooks weren't invoked for uncommitted nodes if
    they were deleted as a result of parent node deletion. Deleting the
    node with the set-hook explicitly invoked the set-hook. The behaviour
    is now consistent; regardless of why the node is deleted, set-hooks are
    invoked.

    (Issue tracker: #25655, #26971)

  - confd: Trying to create a mandatory empty leaf with
    tailf:cli-hide-in-submode would result in an error. This has been
    fixed.

    (Issue tracker: #25759, #681387776)

  - confd: If a data model had a symlink to a node that was augmented by
    another model, the augmented nodes would in some cases not appear under
    the symlink.  This bug has been fixed.

    (Issue tracker: #26689)

  - confd: An un-escaped caret (`^`) was incorrectly treated as negation in
    a regular expression "character group" also when it was not the first
    character in the group. This has been fixed.

    (Issue tracker: #26949)

  - confd: If an rpc or action was implemented via tailf:exec, and the
    input had a leaf augmented from another module into a 'choice',
    followed by non-augmented nodes, the invocation of the executable would
    fail. This has been fixed.

    (Issue tracker: #27138)

  - confd: If a YANG union (other than inet:ip-address) had both
    inet:ipv4-address and inet:ipv6-address member types, in that order,
    IPv6 addresses would be displayed with uppercase A-F instead of a-f.
    This has been fixed.

    (Issue tracker: #27718)

  - C-API: String <-> value conversion for the type inet:ipv6-prefix could
    fail incorrectly in the C and Python APIs if the prefix length was not
    a multiple of 4. This has been fixed.

    (Issue tracker: #27184)

  - CDB: If multiple existing list entries had modifications that only
    consisted of setting values for previously unset leafs,
    cdb_get_modifications_cli() could fail with CONFD_ERR_INTERNAL. This
    has been fixed.

    (Issue tracker: #27208)

  - CLI: There is inconsistent behavior when it comes to the tailf:info
    string with backslash. Display of '{{{\\}}}n' is rendered as '\n' or
    'n' in different possible completions in the CLI output. This has now
    been fixed by rendering them all to '\n'. So in order to display one
    backslash character in the tailf:info output, it needs to define either
    '{{{\\}}}' (single quoted string) or "{{{\\\\}}}" (double quoted
    string) for the tailf:info in the yang file.

    (Issue tracker: #12142)

  - CLI: When completing a CLI command and at the same time creating a list
    instance the completion would sometimes not pick up on specified
    tailf:info-tags in the yang model. This has been fixed.

    (Issue tracker: #24550)

  - CLI: Creating a list instance containing a unique statement referring
    to one of the keys, would in some cases not be reflected when
    displaying the C-style configuration diff (i.e. 'show configuration').
    This has been fixed.

    (Issue tracker: #24811)

  - CLI: Command "show running-config | extended" returns internal error.
    This has now been fixed.

    (Issue tracker: #26688)

  - CLI: The "repeat" command does not suppress pagination after ConfD 6.2
    release because inheritPaginate is set to true by default in the
    confd.conf. This has now been fixed by enforcing "repeat" command to
    always suppress pagination no matter what value inheritPaginate is set
    to.

    (Issue tracker: #27047)

  - CLI: Validation of leaf_list data nodes in the CLI has been added when
    processing parameters to actions.

    (Issue tracker: #27182)

  - CLI: Backslash character is always ignored in tailf:info output. This
    has now been fixed. So in order to display one backslash character in
    the tailf:info output, it needs to define either '{{{\\}}}' (single
    quoted string) or "{{{\\\\}}}" (double quoted string) for the
    tailf:info in the yang file.

    (Issue tracker: #27301)

  - CLI: The combination of using the extensions
    tailf:cli-sequence-commands and tailf:cli-incomplete-no would break the
    functionality of tailf:cli-incomplete-no extension. This has now been
    fixed.

    (Issue tracker: #27311)

  - CLI: TAB completion on enum with tailf:info terminates CLI connection
    abnormally. This has now been fixed.

    (Issue tracker: #27725)

  - JSON-RPC: The method 'get_schema' couldn't handle a node with multiple
    when statements (through tailf:annotate). This has been fixed.

    (Issue tracker: #27518)

  - NETCONF: A leaf of type empty augmented from another module into the
    'input' of an rpc caused the NETCONF session to terminate, and the same
    for an action was delivered to the callback as an empty container (i.e.
    with begin/end tags). These bugs have been fixed.

    (Issue tracker: #27057, #27068)

  - NETCONF: Invocation of an rpc or action where 'input' had a 'choice'
    child, and the first 'case' of that 'choice' was another 'choice',
    caused the NETCONF session to terminate. This has been fixed.

    (Issue tracker: #27058)

  - Python API: The implementation of events.NOTIF_COMMIT_DIFF was broken.
    It was impossible use the contained tctx to attach to the current
    transaction. This has been fixed.

    (Issue tracker: #26992)

  - Python API: When a ConfD data provider callback (e.g. an action) times
    out, ConfD disconnects the socket(s) to that data provider. When that
    happens you will need to re-initialize the connection to ConfD. This
    can now be handled automatically by passing in a dp.StateMananger
    instance when creating the dp.Daemon object.

    (Issue tracker: #27012)

  - Python API: Some of Maagic's components failed to check for an existing
    MAAPI backend when used as input and output parameters for an Action.
    In some cases this lead to a raised Exception. This has been fixed.

  - REST API: REST Query API fetch-query-result calls don't timeout after
    five seconds anymore, instead it adheres to the default timeout of 600
    seconds (10 minutes). Added timeout parameter to start-query and
    reset-query enabling a custom timeout.

    (Issue tracker: #26893)

  - REST API: An empty rollback file caused the REST(CONF) API to stop
    working. This has been fixed.

    (Issue tracker: #27520)

  - RESTCONF: If an action error response is customized by using
    confd_action_seterr_extended(), the error is now propagated by
    RESTCONF. Previously RESTCONF always responded with a HTTP 400 and
    error-tag "operation-failed".

    (Issue tracker: #27860, #27917)

  - RESTCONF: In some cases RESTCONF erroneously used the mediatypes
    text/xml and text/json. They have been replaced with the correct
    application/yang-data+xml and application/yang-data+json respectively.

  - SNMP Agent: When compiling yang modules augmenting other yang modules,
    the effective snmp-mib-module-name of any augment node was
    unconditionally inherited from the augment target node. This lead to
    MIB modules with no objects corresponding to the augment nodes, if the
    resulting fxs file was used with confdc --emit-mib. This has been
    fixed, so that snmp-mib-module-name is only inherited if the current
    module doesn't have a snmp-mib-module-name statement.

    (Issue tracker: #25677)

  - Toolchain: When there was a chain of identities defined in a YANG
    module like a <- b <- c, the confdc would sometimes not accept all
    derived identities in the "default" statement.  This bug has been
    fixed.


ConfD-6.4 [March 20, 2017]
==========================

Removals:

Non-backwards compatible enhancements:

  - CLI: Improved security of the sample clispec file included in the
    release ($CONFD_DIR/src/confd/cli/confd.cli /
    $CONFD_DIR/etc/confd/confd.ccl): The 'ssh' and 'telnet' commands have
    been removed, and the 'monitor' command is configured to run as the
    logged-in user instead of 'root'.

    (Issue tracker: #23386)

  - JSON-RPC: The default for /confdConfig/webui/audit has been changed to
    "false".

    (Issue tracker: #21655)

  - NETCONF: NETCONF over TCP is no longer enabled in the sample confd.conf
    files provided in $CONFD_DIR/etc/confd.

    (Issue tracker: #23711)

  - Python API: Python 3 support has been improved. ConfD now requires at
    least Python 3.4. In earlier releases only Python 3.3 was supported
    (even though the docs claimed otherwise).

    (Issue tracker: #24887)

  - Python API: Assigning binary leafs using maagic now requires the value
    to be in the same format as is  returned when reading the value.

  - Toolchain: The version of pyang that is included in the release no
    longer checks the tailf-specific statements.  Note that this does not
    affect the confdc compiler.

  - Toolchain: By default, the YANG source module and submodules files are
    now included in the .fxs file by the compiler, when the module is
    exported to NETCONF or RESTCONF.  This means that it is no longer
    necessary to copy the YANG files to the loadPath in order to use
    <get-schema>.  If a YANG file is found both in the loadPath and in the
    .fxs file, the file in the loadPath is used by the system.

    The command line flag --no-yang-source can be used to not store the
    YANG source in the .fxs file. Also, confdc --strip-yang-source can be
    used to remove the YANG source from an .fxs file.

  - Web Server: Support for EC (elliptic curve) cipher suites has been
    added for the SSL/TLS server, and suites using RC4 are no longer
    supported, since this algorithm is not considered secure.

Enhancements:

  - confd: Configurable range of allowed group size, the SSH server
    responds to the client during a "diffie-hellman-group-exchange". The
    range will be the intersection of what the client requests, if there is
    none the key exchange will be aborted.

    (Issue tracker: #18489, #22149)

  - confd: It is now possible to set the rollback "Label" and/or "Comment"
    via MAAPI. See maapi_set_label(), maapi_set_comment(),
    maapi_candidate_commit_info(), and
    maapi_candidate_confirmed_commit_info() in confd_lib_maapi(3) for
    details.

    (Issue tracker: #25510, #26378)

  - confd: The information returned by maapi_list_rollbacks() now includes
    the "Label" and/or "Comment" for each rollback.

    (Issue tracker: #26378)

  - CLI: Do not print 'tailf:cli-show-obu-comments' comments if a list is
    currently being created.

    (Issue tracker: #24734)

  - CLI: Optimization to tailf:cli-diff-dependency. Making deletions faster
    by not evaluating unnecessary dependencies.

    (Issue tracker: #25131)

  - CLI: The southbound interfaces of the CLI are now started already in
    phase1. The northbound interfaces start in phase2 as before.

    (Issue tracker: #26023)

  - Documentation: Clarified documentation on 'tailf:meta-data'.

    (Issue tracker: #26511)

  - Examples: python implementation of examples.confd/intro/9-c_threads in
    standalone intro/python subdirectory

  - Examples: intro/java/4-stats - example updated (added get_object,
    get_next_object)

  - Examples: New JSON-RPC API example: json_rpc/common_flow

  - JSON-RPC: The method 'set_value' didn't support native JSON types for
    the 'value' parameter. This is now supported.

    (Issue tracker: #26405)

  - Python API: It was not possible to e.g. call an action from inside
    another action if they were both registered to the same
    confd.dp.Daemon. This has been fixed.

  - Python API: It was possible to assign random attributes to a Maagic
    Node instance. This made it hard to spot code mistakes where attribute
    names were misspelled. Assigning an unknown attribute now results in a
    raised Exception.

  - RESTCONF: Updated RESTCONF documentation to reflect current
    implementation, based on RFC 8040. Also add sections briefly explaining
    capabilities, schema resource, and tailf extensions.

  - Toolchain: confdc now accepts deviation of unknown extension
    statements, and checks the grammar for validity of deviations of known
    extensions.

    (Issue tracker: #26728)

  - Web Server: The SSL server has been updated to use a stronger default
    prime number for Diffie-Hellman key exchange.

    (Issue tracker: #26779)

Non-backwards compatible corrections:

  - CLI: When setting 'enableDisplayLevel' in 'confd.conf' to 'true', it is
    no longer possible to show 'displaylevel' as a key value in lists in
    the CLI. This is in order to prevent ambiguous parsing of commands. If
    setting 'enableDisplayLevel' to 'pipe', it is still possible to show
    'displaylevel' as a key value in lists.

    (Issue tracker: #25979)

  - Java API: NavuList.elem() method used to throw a runtime
    StringIndexOutOfBoundsException when the argument was empty string.
    This has been changed, so now it throws a NavuException instead.

    (Issue tracker: #26621)

  - Java API: Japi - CdbSubscription.getModification() methods only
    accepted one CdbGetModificationFlag as an argument instead of an
    EnumSet<CdbGetModificationFlag> to be able to set several flags in
    combination. This has been fixed and the old methods have been
    deprecated.

    Also the result of getModification() did not correctly represent
    deleted list entries which should be represented as a
    ConfXMLParamStartDel instance followed by a ConfXMLParamStop in the end
    of the listelement. This constitutes the backward incompatible change.

    (Issue tracker: #26542)

  - Python API: Creating or accessing a maagic list element with a single
    string key when the key value contained a space character wasn't
    possible without escaping the space. This has been fixed.

    (Issue tracker: #25282)

  - Toolchain: The treatment of backslash in double quoted strings in YANG
    modules has changed.  In YANG 1.1, it is illegal to have any character
    except 'n' 't' '"' or '\' immediately after the backslash.  In YANG 1
    this is a warning (see
    https://www.rfc-editor.org/errata_search.php?eid=4911)

    The confdc compiler now detects this and gives a warning if such a
    string is found in a YANG version 1 module, and an error for a YANG
    version 1.1 module.

Corrections:

  - confd: A 'when'-expression could cause unsuccessful deletion of data
    during rollbacks. This has now been fixed.

  - confd: A corrupt candidate (read-write mode) DB caused an internal
    error during startup. This has now been fixed.

    (Issue tracker: #24878)

  - confd: The rename command could fail if a set-hook was invoked creating
    node(s) that are currently being created by the rename command itself.
    This has now been fixed.

    (Issue tracker: #25519, #26634)

  - confd: When connecting a new HA slave and at the same time doing a
    controlled shutdown (e.g. confd --stop) of the new to-be-slave, we
    could end up sending faulty synchronization data to the master node
    which could lead to a dead-lock in the master node. This has been
    fixed.

    (Issue tracker: #25908)

  - confd: A 'choice' statement with a mandatory 'case' located beneath a
    'when' statement could cause an internal error. This has now been
    fixed.

    (Issue tracker: #26397)

  - confd: If ConfD was started in a directory with frequently changing
    contents such as /tmp, it could eventually crash due to filling up its
    "atom table". This has been fixed.

    (Issue tracker: #26516)

  - confd: If a data model had a symlink to a node that was augmented by
    another model, the augmented nodes would in some cases not appear under
    the symlink.  This bug has been fixed.

    (Issue tracker: #26689)

  - confd: Removed spurious debug output from 'confd_cmd'.

    (Issue tracker: #26724)

  - confd: ConfD could sometimes fail during upgrade if there was inactive
    configuration to be upgraded. This has been fixed.

    (Issue tracker: #26794)

  - C-API: When deleting all but the last nodes in an active case
    notifications were omitted for CDB subscribers reading from an
    PRE_COMMIT_RUNNING session. This has now been fixed.

    (Issue tracker: #26398, #26399)

  - C-API: If tailf:meta-data was used on the first toplevel node in a YANG
    module, the loaded schema would have a pointer to invalid data for the
    meta-data. This has been fixed.

    (Issue tracker: #26839)

  - C-API: The confd_ha_connect() function could in some cases write a NUL
    character outside an array on the stack. This has been fixed.

    (Issue tracker: #26979)

  - CDB: Fix race condition for transactions involving *both* config true
    and false data.  Transactions involving only config true data were not
    affected. The race condition could lead to CDB ending up in a hung
    state and a transaction commit never returning.  A lock for the
    operational part of CDB was partially and prematurely removed and other
    transactions waiting for the lock were never processed.

    Another side effect of the race condition was that some combinations
    of transactions, e.g., starting a new transaction in a subscriber might
    actually succeed (due to a lock being released prematurely), where it
    should not. This might affect existing code.

    To decrease the risk of deadlock for transactions involving
    operational (config false) data, the lock taking for the operational
    part of CDB has been moved to the commit, resulting in the lock being
    held for a shorter duration. Locks for the operational part of CDB have
    also been made (somewhat) more fine grained, so that a transaction
    writing only in one namespace will not lock the whole operational part
    CDB. Previously this might have been the case, depending on where in
    the tree data was written.

    The typical use-case where this fix can have an effect is with CDB
    subscribers. It is known that writing config true data to CDB (using
    Maapi) will deadlock if executed before the CDB_SUBSCRIBE_DONE call.
    There is now a risk for the same deadlock for config false data (using
    CDB or Maapi). To be safe all data written by a CDB subscriber should
    be done after the CDB_SUBSCRIBE_DONE call and in an separate thread.
    The recommendation is to use Kickers instead of CDB subscribers. Kicker
    are safe in respect of this deadlock scenario.

  - CDB: Fix bug when setting an operational choice using MAAPI. Changing
    the case value did not work as intended when using an ordinary
    transaction (allowing writes to both config true and false data).
    Using an operational (config false) only transaction was not affected.

  - CLI: Auto completion in the CLI could miss displaying a <cr> or other
    leafs when combining empty leafs with sequence commands. This has been
    fixed.

  - CLI: Add missing <cr> for '?' when displaying completion for leaf-list
    type.

    (Issue tracker: #22307)

  - CLI: Fixed internal error in the CLI, that appeared when
    'tailf:cli-flatten-container' was used and then
    'tailf:cli-drop-node-name' was used in a child leaf.

  - CLI: Autocompletion would not work correctly for a custom command that
    was using the clispec element '/clispec/$MODE/cmd/options/hidden' and
    if the command was mounted on a non-existing path. This has been fixed.

    (Issue tracker: #22973)

  - CLI: It was possible to invoke an action with an empty leaf-list as an
    input parameter when the confd.conf option
    'confdConfig/cli/leafPrompting' was set to 'true' and then bypassing
    the auto-wizard by pressing enter without providing a value. This has
    been fixed so that an empty value for a leaf-list input parameter will
    result in an error message.

    (Issue tracker: #23528)

  - CLI: The confd.conf option cli/allowAbbrevParamNames wasn't adhered
    when completing params. This has been corrected.

    (Issue tracker: #23628)

  - CLI: Combining lists with tailf:cli-sequence-commands and
    tailf:cli-compact-syntax the CLI could miss printing out some data
    nodes. This has been fixed.

    (Issue tracker: #25367)

  - CLI: Providing a path containing a list but omitting the keys as a
    value for a parameter of the type 'pattern' in a custom command defined
    in a clispec would in some cases result in an 'internal error'. This
    has been fixed.

    (Issue tracker: #22374)

  - CLI: Running the command 'describe' on a node containing a callpoint
    would result in an internal error if tailf-confd-monitoring.fxs had not
    been loaded. This has been fixed.

    (Issue tracker: #25739)

  - CLI: Japanese characters in error-message got corrupted. This has now
    been fixed.

    (Issue tracker: #26764)

  - CLI: Disallow empty string as a command when using abbreviated commands
    in the CLI.

    (Issue tracker: #26755)

  - CLI: The performance of the CLI caching that was introduced has
    degraded the overall performance of the CLI. This has been fixed.

  - CLI: When giving a *leaf* in a list the same name as the parent list,
    the CLI pipe target 'display xml' would not work properly. This has
    been fixed.

    (Issue tracker: #27056)

  - Examples: Allow the linuxcfg example to be built (without SNMP support)
    for ConfD Basic.

  - Java API: Japi - Navu navigation over a choice with an empty case
    yielded a NullPointerException. This has been fixed.

    (Issue tracker: #26422)

  - Java API: Setting a leaf or leaf-list to a value containing unicode
    characters could fail with internal error. This has been fixed.

    (Issue tracker: #27066)

  - JSON-RPC: When a list had a key of type leafref the method
    'get_leafref_values' didn't always return the correct values. This has
    been fixed.

    (Issue tracker: #24557)

  - JSON-RPC: When calling "get_schema" with the option
    "evaluate_when_entries" set to true, the resulting
    "evaluated_when_entry" attribute was sometimes set to true when it
    shouldn't. This has been fixed.

    (Issue tracker: #25572)

  - JSON-RPC: When a list had a key of type leafref the method
    'get_leafref_values' didn't always return the correct values. This has
    been fixed.

    (Issue tracker: #26146, #26611)

  - JSON-RPC: Re-added possibility to receive "new_user" and "del_user"
    messages on the Comet channel when doing "subscribe_messages".

    (Issue tracker: #26668)

  - JSON-RPC: When calling an action through the 'run_action' method and
    the action was broken in such a way that it returned something other
    than was specified in the yang file, the session would be terminated
    and all subsequent calls on that session would fail (in the WebUI you
    would be logged out). This has been fixed.

  - NETCONF: A leaf of type empty augmented from another module into the
    'input' of an rpc caused the NETCONF session to terminate, and the same
    for an action was delivered to the callback as an empty container (i.e.
    with begin/end tags). These bugs have been fixed.

    (Issue tracker: #27057, #27068)

  - Python API: Iterating over a maagic container node didn't work and left
    the user with an error message that was hard to understand. This has
    been fixed by making all maagic nodes with children iterable.

    (Issue tracker: #26514)

  - Python API: A maagic Enum or Case could not be compared using the != or
    <> operators. This has been fixed.

    (Issue tracker: #26614)

  - REST API: If the candidate datastore is enabled and also the running
    datastore is writable (aka writable running), the candidate is a
    separate datastore which might be out-of-sync or empty. This would
    result in empty results or missing values from the unified datastore.

    To fix this, GET requests to the unified datastore now always query
    the running datastore even when candidate and writable running are
    enabled.

  - REST API: REST/RESTCONF may now return multiple error messages.

  - REST API: REST now returns more diversified error codes and messages at
    action failures.

    (Issue tracker: #26291)

  - REST API: If RESTCONF was enabled, but not the legacy REST API,
    accessing the resource /restconf/data/ietf-yang-library:modules-state
    would result in a 500 internal error.  This bug has been fixed.

  - REST API: After an in-service upgrade, the REST server would fail to
    correctly format some error responses.  This bug has been fixed.

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with containers.

  - RESTCONF: Correct media type in basic RESTCONF ConfD example.

  - RESTCONF: Add Makefile to ConfD RESTCONF basic example.

  - RESTCONF: Reloading ConfD configuration did not pick up RESTCONF
    configuration changes, this has now been fixed.

    (Issue tracker: #26371)

  - RESTCONF: The RESTCONF basic example is now included in the release.

  - Toolchain: The new YANG 1.1 functions "derived-from" and
    "derived-from-or-self" always returned false.  This bug has been fixed.

    (Issue tracker: #26264, #26927)

  - Toolchain: confdc did not reject some invalid command-line arguments.
    This has been fixed.

  - Toolchain: A newline has been added after printing comments in pyang.

    (Issue tracker: #26484)

  - Toolchain: YANG compilation with --subagent did not override callpoints
    and cdb-oper (explicit or default). This has been fixed.

    (Issue tracker: #26619)


ConfD-6.3.1.2 [March 7, 2017]
=============================

Enhancements:

  - confd: Memory usage and processing time when a large commit is done for
    a model with many 'when' expressions has been optimized.

    (Issue tracker: #27185)

Corrections:

  - confd: Default values with 'when' statements would not be properly
    recreated if deleted previously in a transaction. The result was then an
    erroneous diff for trim devices.

  - Toolchain: confdc would in some cases not expand nested groupings
    properly. This bug has been fixed.

    (Issue tracker: #26584)


ConfD-6.3.1.1 [February 14, 2017]
=================================

Enhancements:

  - CDB: Added CDB_GET_MODS_SUPPRESS_DEFAULTS flag for cdb_get_modifications(),
    see confd_lib_cdb(3) for details.

    (Issue tracker: #26542)

Corrections:

  - RESTCONF: If the candidate datastore is enabled and also the running
    datastore is writable (aka writable running), the candidate is a separate
    datastore which might be out-of-sync or empty. This would result in empty
    results or missing values from the unified datastore.

    To fix this, GET requests to the unified datastore now always queries the
    running datastore even when candidate and writable running are enabled.

    (Issue tracker: #26681)

  - Web server: It wasn't possible to connect to the Web UI over HTTPS with
    Firefox 51 and Chrome 56. This has been fixed.

    (Issue tracker: #26711, #26734, #26876, #26884)


ConfD-6.3.1 [January 24, 2017]
==============================

Non-backwards compatible enhancements:

  - confd: The file confd.conf is now described in a YANG file,
    confd_cfg.yang.

    In confd.conf, the following elements used to be specified as one
    space-separated element:

    * /confdConfig/snmpAgent/contexts

    * /confdConfig/subagents/subagent/mount/node

    * */extraIpPorts

    These elements are now specified as leaf-lists, which means that
    multiple XML elements are used to specify multiple values. For example,
    if confd.conf used to have:

    <extraIpPorts>:::88 [::]</extraIpPorts>

    this is now written as:

    <extraIpPorts>:::88</extraIpPorts>

    <extraIpPorts>[::]</extraIpPorts>

    In confd.conf, enums are now checked more strict, specifically leading
    and trailing whitespace is no longer allowed.

    * confdc --check-deps was broken and has been removed

    * confdc --confm-emit-java has been removed

    * confdc -x or --xmlcheck has been removed

    The various XSD files that used to be delivered under src/confd/schema
    are no longer delivered. In order to validate confd.conf or clispec
    files, the RNC files in src/confd/emacs/relaxng can be used.

Enhancements:

  - confd: The commit log produced when /confdConfig/logs/auditLogCommit is
    set to "true" now also includes the "comment" and "label" for the
    commit, if any.

    (Issue tracker: #22355)

  - confd: The builds for PowerPC-SPE contained code which relied on an
    "illegal instruction signal" being generated if an lwsync instruction
    was executed on a platform where lwsync was not supported by the CPU.
    There are some linux kernel patches, intended to make general PowerPC
    software run, which makes the kernel not generate an illegal
    instruction signal but instead emulating lwsync. When running with such
    a kernel, ConfD would make use of lwsync instructions and therefore
    suffer bad performance. This has been fixed, so that the PowerPC-SPE
    builds do not make use of lwsync instructions regardless of what kernel
    it is running with.

    (Issue tracker: #24927)

  - confd: Using a db_operational cdb session and doing get_case on a
    config choice resulted in an error. This restriction has been loosened
    and is now allowed.

  - confd: Added event notification CONFD_NOTIF_REOPEN_LOGS, indicating
    that ConfD will close and reopen its log files.

    (Issue tracker: #26358)

  - AAA: PAM authentication now supports a combined length of username and
    password up to 63 kB (was 8 kB).

    (Issue tracker: #25663)

  - C-API: If confd_mmap_schemas() had been used, it was not possible to
    call the function again, and calling confd_load_schemas() or
    maapi_load_schemas() without a preceding call of
    confd_mmap_schemas_setup() would cause a crash. This has been fixed.

    (Issue tracker: #20218)

  - C-API: Added a new return value, ITER_SUSPEND, to the iterator function
    that maapi_diff_iterate()/maapi_keypath_diff_iterate()/maapi_iterate()
    invokes. This provides a way of breaking out to the "main loop" when in
    a long iteration. When the caller is ready to continue, a new function
    maapi_diff_iterate_resume() or maapi_iterate_resume() must be called.
    See the confd_lib_maapi(3) manual page for details.

    (Issue tracker: #22798)

  - C-API: Added confd_free_schemas(), see the confd_lib_lib(3) manual
    page.

    (Issue tracker: #25229)

  - CLI: A new set of YANG extensions has been added. They are called:

    * tailf:cli-diff-before

    * tailf:cli-diff-set-before

    * tailf:cli-diff-create-before

    * tailf:cli-diff-modify-before

    * tailf:cli-diff-delete-before

    * tailf:cli-diff-after

    * tailf:cli-diff-set-after

    * tailf:cli-diff-create-after

    * tailf:cli-diff-modify-after

    * tailf:cli-diff-delete-after

    and can be used to control the output when displaying C-style
    configuration diffs (e.g. show configuration).

  - CLI: A new YANG extension has been added. It is called
    tailf:cli-reset-full and is a sub-statement to
    tailf:cli-show-long-obu-diffs. If used, the list will be displayed in
    the configuration diff (e.g. show configuration) as it will look like
    when transaction is committed, rather than the commands that would lead
    to the configuration change. This extension will only have effect in
    the C-style configuration diffs.

  - CLI: Building up the CLI menu was slow when using many clispec and fxs
    files. The performance of this has been improved.

    (Issue tracker: #24927)

  - CLI: The difference calculation of long lists has been optimized.

    (Issue tracker: #26077)

  - Examples: move the python implementation of
    examples.confd/intro/7-c_actions into standalone intro/python
    subdirectory

  - Examples: new Java example intro/java/8-stats_no_key

  - NETCONF: Added /confdConfig/netconf/writeTimeout, to make it possible
    to terminate a NETCONF session if the client does not consume the data
    sent (e.g. notifications).

    (Issue tracker: #22955)

  - NETCONF: Added support for running NETCONF/TCP sessions via the IPC
    port, making it possible to use the "IPC Access Check" to restrict the
    unauthenticated access that is needed by (e.g.) 'netconf-subsys'. See
    $CONFD_DIR/src/confd/netconf/netconf-subsys.c for details.

    (Issue tracker: #25704)

  - Python API: _confd.xpath_pp_kpath available in the Python API.

  - REST API: Added RESTCONF API according to
    draft-ietf-netconf-restconf-18. As a result, the existing REST API has
    got an improved json encoding, which may cause backward incompatible
    changes.

  - REST API: Memory usage has been decreased when large amounts of data is
    returned from an action.

    (Issue tracker: #21569)

Non-backwards compatible corrections:

  - CLI: Deleting a mandatory leaf (from the CLI) in a list, would cause
    the entire list to be deleted. Instead, now it is possible to delete
    the leaf itself, but not to commit that change set.

    (Issue tracker: #25423)

  - CLI: The Cisco style CLI would sort container and list children without
    taking 'tailf:sort-priority' into account. This has been fixed.

    (Issue tracker: #25723)

  - REST API: GET and HEAD produce same headers.

    (Issue tracker: #25243)

  - RESTCONF: Disabled old-style REST key format for RESTCONF.

  - Toolchain: The YANG compiler would compile faulty paths without
    complaining. This has been fixed. The compiler will now emit an error
    in the case that a prefix is missing on a node located in an external
    module. This correction makes faulty tailf:link, tailf:symlink and
    leafref definitions impossible to compile. The fix is therefore non
    backwards compatible.

    (Issue tracker: #25210)

Corrections:

  - confd: NACM rules were ignored when loading CLI config using "load
    override". This has been fixed.

    (Issue tracker: #21748, #21952)

  - confd: After having received the start of an SSH message, the SSH
    server would wait for more data from the client until a complete
    message was received or the TCP connection was closed. This has now
    been changed, so that if /confdConfig/ssh/clientAliveInterval is not
    "infinity", the SSH server waits for at most clientAliveInterval *
    clientAliveCount for more data to be received.

    (Issue tracker: #22142, #25652)

  - confd: If an invalid dependency for a 'must', 'tailf:validate',
    'tailf:cli-diff-dependency', or 'when' statement was encountered when
    loading a YANG module, ConfD would either ignore the problem or fail
    the loading (for 'when'). This has been fixed - now an error message is
    logged in confd.log.

    (Issue tracker: #21409, #22103, #21892, #25649)

  - confd: In very rare cases ConfD could crash with a segmentation fault
    during garbage collection. This has been fixed.

    (Issue tracker: #25565)

  - confd: The YANG compiler did not detect circular dependencies between
    modules that were caused by annotation or deviation modules, resulting
    in an "internal error" at load time. This has been fixed.

    (Issue tracker: #25796, #25823, #25638)

  - confd: If the XPath compiler detects that a kicker monitor expression
    will always fail (e.g., on the form
    /mylist[name=unquoted-string]/status), an internal error was generated.
     This type of error is now logged in the devel log.

  - C-API: If a container or a leaf of type empty that was augmented from
    another module was returned via confd_data_reply_value_array(),
    confd_data_reply_next_object_array(), or
    confd_data_reply_next_object_arrays(), ConfD would incorrectly reject
    the reply with a "Bad tag value" error. This has been fixed.

  - C-API: If a data provider replied to get_next_object() using
    confd_data_reply_next_object_arrays() or
    confd_data_reply_next_object_tag_value_arrays() with zero objects, an
    "internal error" would occur in ConfD. This has been fixed - such reply
    calls will now return CONFD_ERR with confd_errno ==
    CONFD_ERR_PROTOUSAGE.

    (Issue tracker: #25512)

  - C-API: The CONFD_PROTO_TRACE output would print "large" positive
    integers in certain ranges as negative numbers. This has been fixed.

    (Issue tracker: #25807)

  - CDB: cdb_get_modifications_cli() got incorrect results when using deep
    models with choice statements. This has now been fixed.

    (Issue tracker: #23998, #24943)

  - CLI: CLI tries to interpret 378 as octal. Everything bigger than 378
    gives "Error: internal error", e.g. \378 or \750. The correct error
    message for this case shall be "syntax error" where any octal bigger
    than 378 (actually should be 400) shall not be accepted in the CLI
    input and "syntax error" shall be prompted instead of "internal error".
    This has now been fixed.

  - CLI: If one escapes the backslash (i.e. where one actually wants a \ in
    the value), it will fail to rollback this setting because the saved
    string in the rollback file is not escaped, i.e. it has one backslash,
    resulting in 'internal error' when reading the same string written by
    ConfD. This has now been fixed.

  - CLI: The CLI would experience an internal error when piping to the
    append command. This has been fixed.

    (Issue tracker: #25955)

  - JSON-RPC: When calling get_schema on node with augmented leafrefs the
    resulting field leafref_target didn't always point to the correct
    location. This has been fixed.

  - JSON-RPC: Transaction hooks throwing exceptions didn't fail commits
    when using candidate. This has been fixed.

    (Issue tracker: #23475, #24967)

  - NETCONF: If a "delete" operation in an edit-config was present on a
    list's key element, ConfD would fail to report this as an error.  This
    bug has been fixed.

    (Issue tracker: #25881)

  - NETCONF: The built-in YANG modules "ietf-netconf" and
    "ietf-netconf-with-defaults" are now properly advertised in NETCONF
    <hello> and in the /netconf-state/schemas/schema list.  This also means
    that these modules can be downloaded with the <get-schema> RPC.

    (Issue tracker: #25931, #22654)

  - Python API: In _confd.dp the calls trans_seterr_extended(),
    trans_seterr_extended_info(), action_seterr_extended(),
    action_seterr_extended_info(), db_seterr_extended(),
    db_seterr_extended_info(), notification_seterr_extended() and
    notification_seterr_extended_info() didn't honor the 'code' argument.
    This has been fixed.

    (Issue tracker: #25154)

  - Python API: Using Maagic to iterate over a list where at least one key
    was a union where one of the types was an enumeration didn't work. This
    has been fixed.

  - REST API: REST/RESTCONF API will not timeout due to slow content being
    produced.

    (Issue tracker: #26096, #26256)

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with lists.

  - RESTCONF: Possible to POST identityref as leaf-list.

    (Issue tracker: #25358)

  - SNMP Agent: Objects mapped to leafs under np-containers with false
    'when' expressions in the YANG model would be returned by SNMP
    walk/get. This has been fixed.

    (Issue tracker: #23661)

  - SNMP Agent: Objects mapped to leafs or lists under np-containers with
    false 'when' expressions in the YANG model could be set/created by SNMP
    set. This has been fixed.

    (Issue tracker: #26117)

  - Toolchain: 'confdc --emit-xxx' could not handle file/path arguments
    longer than 255 characters. This has been fixed.

    (Issue tracker: #20638)

  - Toolchain: The YANG compiler would fail with "internal error" if
    tailf:annotate was used to annotate a non-tailf-extension. This has
    been fixed.

    (Issue tracker: #25758)

  - Toolchain: If nodes augmented from a different YANG module were
    deviated, the deviating module was not recorded for the augmenting
    module, and thus not reported in NETCONF capabilities or the
    ietf-yang-library module. This has been fixed.

    (Issue tracker: #25770)

  - Toolchain: ConfD would fail to start when certain combinations of
    leafrefs with "deref()" was used.  This bug has been fixed.

  - Toolchain: If a deviation or annotation module imported a module that
    augmented a 'choice', 'case', or 'input' statement in the module being
    compiled, loading of the compiled module would fail with "internal
    error". This has been fixed.

    (Issue tracker: #26120)

  - Toolchain: If a module augmented a keyless list within a keyless list,
    ConfD would fail to load the module with an error: "The module A was
    compiled with a different version of module B - recompilation is
    needed.".   This bug is now fixed.

    (Issue tracker: #26183)

  - Toolchain: If a deviation used a typedef defined in the deviating
    module, the YANG compiler would fail with "internal error". This has
    been fixed. Note that in this case the deviating module must also be
    compiled and loaded.

    (Issue tracker: #26401)

  - Toolchain: The YANG compiler did not allow mandatory config false nodes
    in 'augment' for YANG-1.1 modules (new in 1.1). This has been fixed.

    (Issue tracker: #26462)

  - Web Server: If a large number of connection attempts with invalid
    SSL/TLS parameters were made by clients, the HTTPS server could
    eventually start dropping all new connections. This has been fixed.


ConfD-6.3.0.1 [December 30, 2016]
=================================

Corrections:

  - confd: If a YANG union type had member types imported both from
    ietf-inet-types or ietf-yang-types and from another module, ConfD would
    fail to load the module defining the union type, claiming that a type
    from ietf-inet-types/ietf-yang-types could not be found. This bug was
    introduced in ConfD-6.3 and has now been fixed.

    (Issue tracker: #26151, #26157, #26258)


ConfD-6.3 [November 22, 2016]
=============================

Removals:

Non-backwards compatible enhancements:

  - confd: The file confd.conf is now described in a YANG file,
    confd_cfg.yang.

    In confd.conf, the following elements used to be specified as one
    space-separated element:

    * /confdConfig/snmpAgent/contexts

    * /confdConfig/subagents/subagent/mount/node

    * */extraIpPorts

    These elements are now specified as leaf-lists, which means that
    multiple XML elements are used to specify multiple values. For example,
    if confd.conf used to have:

    <extraIpPorts>:::88 [::]</extraIpPorts>

    this is now written as:

    <extraIpPorts>:::88</extraIpPorts>

    <extraIpPorts>[::]</extraIpPorts>

    In confd.conf, enums are now checked more strict, specifically leading
    and trailing whitespace is no longer allowed.

    * confdc --check-deps was broken and has been removed

    * confdc --confm-emit-java has been removed

    * confdc -x or --xmlcheck has been removed

    The various XSD files that used to be delivered under src/confd/schema
    are no longer delivered. In order to validate confd.conf or clispec
    files, the RNC files in src/confd/emacs/relaxng can be used.

  - CLI: Introduced compiler warnings for incompatible
    tailf:cli-extensions, and introduced recommendations for when certain
    combinations should be used.

  - CLI: Added ConfD config parameter "allowImplicitWildcard". Setting this
    parameter to false makes the CLI not accept implicit wildcards as keys
    to lists.

  - CLI: A new CLI command has been added to the C-, I- and J-style CLI.

    timecmd <command>

    Time command. It measures and displays the execution time of
    <command>.

    Note that this command will only be available if devtools has been set
    to true in the CLI session settings.

  - CLI: It was not possible to have a leaf containing a when statement,
    where the when statement referenced another leaf with
    'tailf:cli-prefix-key' on it, if these two leafs were in the same list.
    This has been fixed.

    (Issue tracker: #24794)

  - Python API: Assigning binary leafs using maagic now requires the value
    to be in the same format as is returned when reading the value.

Enhancements:

  - confd: Configurable range of allowed group size, the SSH server
    responds to the client during a "diffie-hellman-group-exchange". The
    range will be the intersection of what the client requests, if there is
    none the key exchange will be aborted.

    (Issue tracker: #18489, #22149)

  - confd: The ConfD installation now generates an RSA SSH host key instead
    of DSA. The DSA algorithm is considered weak, and is e.g. not enabled
    by default by the current OpenSSH client (see
    http://www.openssh.com/legacy.html). If a DSA key is desired, the
    OpenSSH 'ssh-keygen' command can be used to generate one.

    (Issue tracker: #23389)

  - confd: An error message reporting that ConfD is locked has been
    improved. More detailed information about user sessions and locks is
    included in the output of confd --status.

  - confd: The cache performance when an external data provider returns
    many list entries in response to the get_next_object callback has been
    improved.

  - confd: The calls to get_elem() in the data provider API have been
    optimized.  get_elem() used to be called for leafs in newly created
    list entries, but this is not really necessary, and is no longer done.

    (Issue tracker: #24378)

  - confd: Added simple kicker debug target for commit details.

  - confd: The built-in SSH server now accepts connections from clients
    that announce version "1.99" in their hello message, treating it as
    version 2.0.

    (Issue tracker: #24838)

  - AAA: The source IP address of the connection is now set via PAM_RHOST
    when PAM authentication is used.

    (Issue tracker: #24715)

  - C-API: maapi_load_config(db=operational) is now able to load config
    false data. No initial delete of already existing config false data is
    performed, i.e. the client is responsible for deleting, if applicable,
    before invoking maapi_load_config().

    (Issue tracker: #23997)

  - CDB: Improved error logging for disk-related errors encountered during
    CDB upgrade.

    (Issue tracker: #22934)

  - CLI: A new set of YANG extensions has been added. They are called:

    * tailf:cli-diff-before

    * tailf:cli-diff-set-before

    * tailf:cli-diff-create-before

    * tailf:cli-diff-modify-before

    * tailf:cli-diff-delete-before

    * tailf:cli-diff-after

    * tailf:cli-diff-set-after

    * tailf:cli-diff-create-after

    * tailf:cli-diff-modify-after

    * tailf:cli-diff-delete-after

    and can be used to control the output when displaying C-style
    configuration diffs (e.g. show configuration).

  - CLI: A new CLI command has been added to the C-, I- and J-style CLI.

    xpath [ctx <path>] (eval | must | when) <expression>

    Evaluate an XPath expression. A context-path may be given to be used
    as the current context for the evaluation of the expression. If no
    context-path is given, the current sub-mode will be used as the
    context-path. The pipe command 'trace' may be used to display
    debug/trace information during execution of the command.

    Note that this command will only be available if the CLI session
    setting 'devtools' has been set to 'true'.

    eval - Evaulate an XPath expression.

    must - Evaluate the expression as a YANG 'must' expression.

    when - Evaluate the expression as a YANG 'when' expression.

  - CLI: Lists using 'tailf:cli-key-format' caused rollback files to be
    difficult to parse, resulting in syntax error at rollback. This has
    been fixed.

    (Issue tracker: #23283, #23211)

  - CLI: Custom commands with an explicit working directory (wd) outside
    the home directory could not be accessed when
    /confdConfig/cli/restrictedFileAccess was set to 'true'. This has been
    fixed.

    (Issue tracker: #24021)

  - CLI: More caching of data provider interaction from the CLI should
    result in less redundant reads from a data provider.

  - CLI: Optimization to tailf:cli-diff-dependency. Making deletions faster
    by not evaluating unnecessary dependencies.

    (Issue tracker: #25131)

  - Examples: new Java example intro/java/1-2-3-start-query-model

  - Examples: new Java example intro/java/9-java_threads

  - Examples: move the examples.confd/intro/4-java_stats into standalone
    intro/java subdirectory

  - Examples: move the python implementation of
    examples.confd/intro/1-2-3-start-query-model into standalone
    intro/python subdirectory

  - Examples: move the python implementation of
    examples.confd/intro/5-c_stats into standalone intro/python
    subdirectory

  - Examples: move the python implementation of
    examples.confd/intro/7-c_actions into standalone intro/python
    subdirectory

  - Examples: move the python implementation of
    examples.confd/intro/8-c_stats_no_key into standalone intro/python
    subdirectory

  - Examples: move the python implementation of
    examples.confd/intro/6-c_config into standalone intro/python
    subdirectory

  - Examples: new Java example intro/java/7-actions

  - Examples: new Java example intro/java/6-config

  - Examples: new Java example intro/java/8-stats_no_key

  - JSON-RPC: The "new_trans" JSON-RPC method now takes an extra parameter
    "on_pending_changes". This parameter decides what to do if the
    candidate already has been written to, e.g. a CLI user has started a
    shared configuration session and changed a value in the configuration
    (without committing it). If this parameter is omitted the default
    behavior is to silently reuse the candidate (as before). If "reject" is
    specified the call to the "new_trans" method will fail if the candidate
    is non-empty. If "discard" is specified the candidate is silently
    cleared if it is non-empty.

    (Issue tracker: #23392)

  - JSON-RPC: With candidate disabled in confd.conf, starting a new
    transaction with "db":"candidate" indicates no error, as would be
    expected. Instead, a new transaction seems to be started. This has been
    fixed.

    (Issue tracker: #24471)

  - JSON-RPC: max_elements and min_elements fields have been added to the
    result from the get_schema JSON-RPC method when relevant.

    (Issue tracker: #24638)

  - REST API: Added RESTCONF API according to
    draft-ietf-netconf-restconf-18. As a result, the existing REST API has
    got an improved json encoding, which may cause backward incompatible
    changes.

  - Toolchain: The confdc compiler now gives a warning if a "when"
    expression refers to any descendant nodes.

    (Issue tracker: #25130)

  - Web Server: A new confd.conf parameter has been added, i.e.
    webui/X-Frame-Options. By default the HTTP header X-Frame-Options is
    set to DENY for the /login.html and /index.html pages. With this header
    it can be set to SAMEORIGIN or ALLOW-FROM instead.

    (Issue tracker: #24672)

Non-backwards compatible corrections:

  - confd: Corrected encoding of empty NP-containers in action callback.
    If an action had a NP-container as input parameter, and no children to
    that container were present when the action was invoked, the
    NP-container would incorrectly be encoded as an empty leaf.  This bug
    has been fixed, and the container is encoded as a container without any
    children.

    (Issue tracker: #22916)

  - confd: If a non-presence container had must-expressions, these
    expressions would not be evaluated properly. This has been fixed.

    (Issue tracker: #24414)

  - SNMP Gateway: If a MIB had an object that used a TEXTUAL-CONVENTION
    with a DISPLAY-HINT, the SNMP gateway would fail to handle such values.
    This bug has been fixed.

    (Issue tracker: #24353)

  - Toolchain: The confdc compiler would incorrectly accept a "must"
    statement within a "case" statement, but it would not have any effect.
    The compiler now gives an error in this case.

Corrections:

  - confd: In setups involving multiple nodes, operational data was not
    accessible in write transactions involving both config and operational
    data. This has been fixed.

    (Issue tracker: #21429)

  - confd: Action including boolean leaf could make the CLI crash. This has
    been fixed.

    (Issue tracker: #21965)

  - confd: If a list within a list had a leafref that used deref to another
    leafref that used a deref, ConfD would fail to start. This bug has been
    fixed.

  - confd: A partial recreate of a subtree consisting of at least two
    choice statements interleaved by a list could cause delete operations
    for nodes to be dropped, i.e. nodes could incorrectly be resurrected.
    This has now been fixed.

    (Issue tracker: #23518)

  - confd: When /confdConfig/logs/auditLogCommit is enabled, the values for
    elements annotated with tailf:suppress-echo would be printed to
    audit.log in clear text. This has been fixed so now the values are
    masked.

    (Issue tracker: #24698)

  - confd: Continuously active user sessions did not handle a subagent
    rotation. This has been fixed.

    (Issue tracker: #24724)

  - confd: When using maapi_diff_iterate with ITER_WANT_P_CONTAINER flag,
    if an attribute has been set or deleted on a presence container at the
    same time as one of its children is modified, then only the
    MOP_ATTR_SET operation but not MOP_MODIFIED was generated. This has
    been fixed so that MOP_MODIFIED operation is generated as well.

    (Issue tracker: #24868)

  - confd: If a connection to the HA subsystem via confd_ha_connect()
    coincided with the closing of an already existing connection, the HA
    subsystem could hang, blocking further requests and CDB replication.
    This has been fixed.

    (Issue tracker: #24704)

  - confd: Data provider callback invocation for a daemon would fail when
    2147483647 invocations had been done for that daemon. This has been
    fixed.

    (Issue tracker: #25330)

  - confd: Fix bug where setting commitRetryTimeout to infinity could crash
    ConfD.

  - C-API: The confd_dp.h header file for the C API exposed a 'struct
    hashtable' that could conflict with the class 'hashtable' in the
    standard C++ library. This has been fixed.

    (Issue tracker: #25344)

  - CDB: Confirming commit could crash if CDB compaction was in progress,
    this has been fixed.

  - CDB: A HA-transition from none -> slave, which caused an initial sync
    to be performed, followed by a slave -> none transition, could cause an
    internal error in CDB. This has now been fixed.

    (Issue tracker: #24620)

  - CDB: Fix bug where writing a choice in an operational transaction could
    crash ConfD.

  - CLI: When the device hostname is changed, it is not updated immediately
    in the CLI prompt if connecting to the CLI via SSH. The user has to
    logout and login again to get the new CLI prompt. This has now been
    fixed.

    (Issue tracker: #18180, #25169, #18783)

  - CLI: Dependencies, as defined by tailf:cli-diff-dependency, within a
    list that was annotated with tailf:cli-recursive-delete would not be
    triggered if the list was deleted. This has been fixed.

    (Issue tracker: #22700)

  - CLI: In the CLI, piping to display XML (using the show command) would
    crash, causing information leakage, when using implicit wildcard in
    list keys. This has been fixed.

    (Issue tracker: #24955)

  - CLI: When the CLI used CAPI for customer defined CLI completion,
    wildcards would be formatted in a way CAPI could not handle. This has
    been fixed.

    (Issue tracker: #22630)

  - CLI: Internal error in the CLI evaluating AAA rules for default values
    has been fixed.

    (Issue tracker: #22794)

  - CLI: The line "This line doesn't have a valid range expression" should
    not be printed when allowRangeExpression is turned off. This has now
    been fixed.

    (Issue tracker: #23582)

  - CLI: The CLI could enter an infinite loop when users deleted a list
    instance. This has been fixed.

  - CLI: When mixing taif:cli-diff-dependency with
    tailf:cli-recursive-delete extensions the recursive delete would
    sometimes be used more extensive than expected but without the correct
    ordering. This has been fixed.

  - CLI: Configuring a list annotated with tailf:cli-allow-join-with-key
    would in some cases not work correctly if there were other lists on the
    same level that were also annotated with tailf:cli-allow-join-with-key.
    This has been fixed.

  - CLI: The Cisco C-style CLI would crash if the "compare file" command
    was used in oper mode. This has been fixed.

    (Issue tracker: #24865)

  - CLI: Notifications that are augmented with list data are not getting
    displayed in ncs_cli. The show notification stream <stream-name>
    command throws internal error. This has now been fixed.

    (Issue tracker: #25030)

  - CLI: Hidden data nodes in lists could still appear in change sets
    without using unhide. This has been fixed.

    (Issue tracker: #24693)

  - CLI: Recently started CLI sessions crashed during upgrade. This has
    been fixed.

    (Issue tracker: #24577)

  - CLI: When loading config using maapi it always defaulted to allowing
    abbreviated commands. This has been modified so the confd.conf setting
    for this is adhered.

    (Issue tracker: #24795)

  - CLI: It was not possible execute a command rendered from a leaf
    containing a when statement, where the when statement referenced
    another leaf with 'tailf:cli-prefix-key' on it, if these two leafs were
    in the same list. This has been fixed.

  - CLI: An internal error was encountered when using the CLI for leafrefs
    as action params. This has been fixed.

  - CLI: The CLI sometimes produced faulty rollback files when working with
    'ordered-by user' lists.

  - CLI: The "commit abort" command was badly configured and didn't
    function in the CLI. This has been fixed.

    (Issue tracker: #25577)

  - Documentation: Documented that the NETCONF server only supports <url>
    with scheme "file" as <target> for <delete-config>.

    (Issue tracker: #25426)

  - Examples: Ensure that running the linuxcfg example doesn't overwrite
    global SNMP/YANG directories.

  - Java API: Navu method getName() could not correctly handle the case of
    a NavuList with a key containing an embedded '/' char. This has been
    fixed.

  - Java API: Added missing Maapi method authenticate2 to Java and Erlang
    API.

    (Issue tracker: #23509)

  - JSON-RPC: Error messages containing keypaths replaced the keypath part
    with an empty string, e.g. " is not configured" instead of "/foo/bar is
    not configured". This has been fixed.

    (Issue tracker: #22405)

  - JSON-RPC: An "Invalid configuration mode" error occurred in the
    "new_write_trans" method when the candidate was enabled. This has been
    fixed.

    (Issue tracker: #22821, #22841, #23043)

  - JSON-RPC: The get-schema JSON-RPC method fails if leafref statements
    contain a call to a xpath current() function. This has been fixed.

    (Issue tracker: #22726)

  - NETCONF: YANG modules with restricted visibility through tail-f:export
    statement were accessible in the NETCONF interface. This has now been
    fixed.

    (Issue tracker: #22654)

  - NETCONF: The CONFD_MAAPI_USID environment variable was not set when the
    executable for an rpc defined with tailf:raw-xml was invoked. This has
    been fixed.

    (Issue tracker: #24363)

  - NETCONF: The NETCONF gateway would not properly handle identity values
    in some get requests. This bug has been fixed.

  - NETCONF: The NETCONF gateway now reads data from ietf-yang-library, if
    this module is advertised.

  - REST API: Allow PUT for collections.

    (Issue tracker: #22015)

  - REST API: Correct JSON output when select query parameter is used on
    nested lists.

  - REST API: When evaluating actions via the JSON-RPC "action" method the
    order of input parameters was significant for presence containers.
    This has been fixed.

    (Issue tracker: #24992)

  - REST API: Correct JSON module prefix encoding for leaf-list.

    (Issue tracker: #25358)

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with lists.

  - RESTCONF: Fixed erroneous JSON output when depth query parameter was
    used together with containers.

  - SNMP Gateway: If /confdConfig/snmpgw/agent/forwardNotifStream was
    configured in confd_dyncfg, ConfD would crash with "internal error".
    This has been fixed.

    (Issue tracker: #24867)

  - Toolchain: If an import was defined and used in a submodule, and also
    defined but not used in the main module, no dependency on the imported
    module would be recorded in the .fxs file for the module, which could
    cause loading of the module to fail. This has been fixed.

  - Toolchain: Leafs with default values could get marked as created when
    the leaf has a validation  dependency to another leaf. This has been
    fixed.

    (Issue tracker: #22297)

  - Toolchain: If the target of a leafref path was removed by a deviation,
    the YANG compiler would fail with "internal error" instead of reporting
    the problem. This has been fixed.

    (Issue tracker: #23893)

  - Toolchain: If a YANG module augmented multiple other modules, and some
    but not all of them were found, the compiler would fail with "internal
    error" instead of reporting the problem. This has been fixed.

    (Issue tracker: #24279)

  - Toolchain: If an annotation or deviation module defined an import that
    wasn't used, and the target module defined and used the same import in
    a submodule but not in the main module, no dependency on the imported
    module would be recorded in the .fxs file for the target module, which
    could cause loading of the target module to fail. This has been fixed.

    (Issue tracker: #24637)

  - Toolchain: The YANG compiler could experience an internal error when
    comparing absolute path leafrefs with relative path leafrefs. This has
    been fixed.

    (Issue tracker: #24590)

  - Toolchain: If a "config false" leaf had a tailf:link to a "config true"
    leaf, the "config false" leaf would incorrectly be shown in CLI
    configure mode. This has been fixed.

    (Issue tracker: #25162)

  - Toolchain: The confdc compiler would fail to compile certain
    combinations of leafrefs in action input, when the leafrefs used the
    'deref' syntax. This has been fixed.

    (Issue tracker: #25209)

  - Toolchain: The YANG compiler did not allow mandatory nodes in 'augment'
    with 'when' for YANG-1.1 modules (new in 1.1). This has been fixed.

  - Toolchain: confdc now handles multiple "base" statements in identityref
    leafs.

  - Web UI: The built-in web server could not generate IPv6 host headers.
    This has been fixed.

    (Issue tracker: #23843)

  - Web UI: "No data available" message when using filter in lists. This
    has been fixed.

    (Issue tracker: #23964, #23962)


ConfD-6.2.1.1 [September 22, 2016]
==================================

Enhancements:

  - confd: Added ConfD binary for Linux on MIPS n32 ABI compiled for Cavium
    Octeon3.


ConfD-6.2.1 [August 26, 2016]
=============================

Removals:

  - Documentation: Removed documentation of confd_cli socket protocol

    (Issue tracker: #21903)

Non-backwards compatible enhancements:

  - CLI: A new CLI template operator '??' has been added. This operator
    checks for explicit exists of a reference, i.e. it does not evaluate to
    true if a leaf has a default value, but has not been explicitly
    configured. The previously existing operator '?' evaluates to true in
    the case of a default leaf.

  - NETCONF: ConfD now implements ietf-yang-library from RFC 7895.

Enhancements:

  - confd: Reading of /confd-state/ha and generation of HEALTH_CHECK event
    notifications was blocked while a new HA slave was doing a full CDB
    copy to become synchronized with the master. This has been fixed. Note:
    retrieving HA status via the HA API, i.e. using confd_ha_status() in
    the C API, is still blocked during the CDB copy, since the HA subsystem
    processes API requests and HA events in a strictly serial manner.

    (Issue tracker: #16766, #20610, #20754, #22449, #22706, #23382)

  - confd: The confdConfig/webui/audit configuration parameter is now
    configurable via the http://tail-f.com/ns/confd_dyncfg/1.0 namespace.

    (Issue tracker: #23204)

  - confd: It is now possible to control the audit logging of user names
    for failed authentication attempts. See /confdConfig/aaa/auditUserName
    in the confd.conf(5) manual page for details.

    (Issue tracker: #23390)

  - CLI: Optimisations have been made regarding the calculation of leafrefs
    when displaying configuration diffs (e.g., show configuration). In
    particular, this should reduce the time it takes to display the
    configuration diff in situations where the configuration is large and
    contains a large number of leafrefs.

    (Issue tracker: #22205)

  - CLI: Performance when resolving data changes and using the
    tailf:cli-diff-dependency extension has been increased.

  - Java API: Added NavuNode.encodeValues() method which produces
    ConfXMLParam[] array populated with values from the current transaction

    (Issue tracker: #22951)

  - JSON-RPC: WEB UI idle and absolute timeouts are now logged in the audit
    log.

    (Issue tracker: #23120)

  - JSON-RPC: jsonrpc did not mask leaves with tailf:suppress-echo in the
    audit log. This has been fixed for run_action requests.

    (Issue tracker: #23750)

Non-backwards compatible corrections:

  - confd: It was possible to invoke actions via MAAPI with a path that
    didn't exist. This has been fixed.

  - confd: A transform F1 at node N1 was unable to trigger a transform F2
    located at node N2 if N2 is a descendant to N1. This has now been
    fixed.

    (Issue tracker: #22133)

  - NETCONF: NETCONF <edit-config> did not obey NACM rules in some cases:
    operation "replace" would replace a subtree regardless of NACM rules
    for descendant nodes, and setting a leaf value as part of a "merge"
    operation was considered an "update" regardless of whether the leaf
    existed previously or not. These bugs have been fixed.

    (Issue tracker: #22590)

  - Python API: It was impossible to create a leaf of type
    instance-identifier using the high level Python API. This has been
    fixed. Also, when reading such a leaf we used to return a HKeypathRef
    object - now a string is returned.

    (Issue tracker: #23958)

  - Toolchain: It was not possible to use
    tailf:annotate-module/tailf:annotate-statement in an annotation module
    to make annotations (e.g. tailf:link) that used prefixes that weren't
    defined in the target module. Using tailf:annotate to make such
    annotations succeeded at compile time, but did not create the needed
    fxs dependencies for the target module, which could cause fxs loading
    to fail (depending on loading order). A deviation module that made
    analogous changes (e.g. changing the type to 'leafref') did also not
    create the needed fxs dependencies for the target module. These bugs
    have been fixed.

    The fixes for annotations require that the annotation module's imports
    and prefixes are made available in the target module (this was already
    done for deviations), which can have non-backwards compatibility
    issues:

    - For both tailf:annotate and tailf:annotate-module, this can generate
    a prefix conflict error if a given prefix is used for different modules
    in the annotation and the target module. This can be avoided by
    changing the prefix used in the annotation module.

    - For tailf:annotate-module only: if the annotation module imports a
    module that also (directly or indirectly) imports the target module, a
    cyclical dependency error is generated. Since actually using imports
    that are not present in the target module was not possible with
    tailf:annotate-module before the fix, the import in the annotation
    module may actually be redundant and possible to remove. In case the
    import is used for a toplevel tailf:annotate in the same annotation
    module, the annotation module needs to be split up into one module for
    tailf:annotate and another for tailf:annotate-module.

    (Issue tracker: #23568)

Corrections:

  - confd: If a YANG module had a default value for a leaf of type
    tailf:aes-cfb-128-encrypted-string or tailf:des3-cbc-encrypted-string,
    ConfD would deadlock when loading the module. This has been fixed.

    (Issue tracker: #22160)

  - confd: The configSession limits were not enforced correctly when the
    candidate was enabled: a "shared" or "exclusive" session was counted as
    2 sessions, and with running writable-through-candidate, every commit
    from a "private" session reduced the count by 1. This has been fixed.

    (Issue tracker: #22315)

  - confd: In some rare cases rollback pend2 files were not repaired when
    restarting. This has been fixed.

    (Issue tracker: #22708)

  - confd: Format of paths in XPath trace file has changed. The path is now
    printed in XPath syntax.

  - confd: If the target list entry for maapi_move() already existed, the
    function would fail with confd_errno CONFD_ERR_INTERNAL instead of
    CONFD_ERR_ALREADY_EXISTS. This has been fixed.

    (Issue tracker: #23385)

  - confd: tailf-kicker.yang file was missing from the YANG src directory.
    This has been fixed.

    (Issue tracker: #20917)

  - confd: If successful authentications for users not defined in
    /aaa/authentication/users were done from multiple sources at a high
    rate, and ConfD was running in SMP mode, ConfD could crash due to use
    of a C library function that was not thread safe. This has been fixed.

    (Issue tracker: #23212)

  - confd: Rollbacks were not created correctly when historySize was set to
    0. This has been fixed.

    (Issue tracker: #23653)

  - confd: If /confdConfig/logs/auditLogCommit was enabled, and a
    modification caused the selection of a 'case' in a 'choice' where no
    'case' was currently selected, and a sibling 'case' had another
    'choice' as the topmost node, ConfD would crash. This has been fixed.

    (Issue tracker: #23771)

  - confd: Validation of mandatory statements were not performed in nodes
    with when-statements transitioning from false to true. This has now
    been fixed.

    (Issue tracker: #23934)

  - confd: Leafs with tailf:hidden at the top level, or with only
    np-container ancestors, were not preserved when maapi_load_config() was
    used with MAAPI_CONFIG_HIDE_ALL but without either of
    MAAPI_CONFIG_MERGE and MAAPI_CONFIG_REPLACE. This has been fixed.

    (Issue tracker: #23981)

  - C-API: The confd_decrypt() function did not return error info via
    confd_lasterr(). This has been fixed.

    (Issue tracker: #22683)

  - C-API: Several functions in the CDB and MAAPI C APIs would in some
    cases return CONFD_ERR without setting confd_errno/confd_lasterr().
    This has been fixed.

    (Issue tracker: #22869)

  - C-API: confd_pp_value() for values of type instance-identifier
    (C_OBJECTREF), confd_pp_kpath(), confd_format_keypath(), and
    confd_xpath_pp_kpath() could write a NUL character outside the given
    buffer if the buffer size was insufficient. This has been fixed.

  - C-API: The confd_val2str() and confd_str2val() functions did not
    support the YANG instance-identifier type. This has been fixed.

  - CDB: Fix a bug where evaluating a must or when expression on a slave
    might crash.

  - CDB: Fix bug causing deadlock in CDB

  - CDB: A crash in a CDB subscriber could bring down ConfD. This has now
    been fixed.

    (Issue tracker: #24117)

  - CLI: Using tailf:cli-key-format with multiple keys for one list could
    result in a internal error. This has been fixed.

    (Issue tracker: #22240)

  - CLI: In some cases when expressions evaluating to false made default
    values not initializing properly. This has been fixed.

    (Issue tracker: #22611)

  - CLI: Filtering of internal CLI data structure, when other parts of the
    system ask the CLI for a list of the nodes that are dependent on a
    certain node.

  - CLI: The CLI sometimes printed two no commands instead of one, in Cisco
    mode, when performing a diff between two transactions. This has been
    fixed.

    (Issue tracker: #23163)

  - CLI: When using current() in an xpath expression for the
    tailf:cli-diff-dependency expression an error might be reported. This
    has been fixed.

  - CLI: An XPath expression for tailf:cli-diff-dependency that was
    conditional might be triggered even when it wasn't supposed to. This
    has been fixed.

  - CLI: The CLI crashed when a leaf node and a choice node were within a
    parent choice node and the leaf node was set to a value and committed
    first. This has been fixed.

    (Issue tracker: #23005)

  - CLI: When using tailf:cli-diff-dependency and not using any
    trigger-on-set option the dependency would sometimes still trigger
    during value modification (no deletes). This has been fixed.

    (Issue tracker: #23557)

  - CLI: When modifying data and switching case on a choice on the same
    level some lines might be ignored when looking at the configuration
    change. This has been fixed.

  - CLI: The CLI would show non existing leafs with tailf:cli-show-no, even
    when the parent node did not exist. So that in some cases, the parent
    node was created as a result of showing the leaf. This has been fixed.

  - CLI: Switching cases in a choice, when using a CDB subscriber,  would
    in some cases bring down the CLI session. This has been fixed.

    (Issue tracker: #24117)

  - CLI: When listing oper data mixed with config data in a table
    structure, data rows could be omitted even when it shouldn't. This has
    been fixed.

    (Issue tracker: #23885)

  - Java API: Namespace declarations were missing in some cases when
    generating XML from ConfXMLParam array on Java side. This has been
    fixed.

  - Java API: List keys of type enumeration were not properly resolved to
    their values in the String representation of ConfObjectRef or based on
    it ConfPath. This has been fixed.

    (Issue tracker: #23953)

  - Java API: NavuParser used to remove line breaks in provided XML. Now
    the line breaks are preserved.

    (Issue tracker: #24166)

  - JSON-RPC: Augmentations with top-level choice statements did break the
    get_schema jsonrpc method. This has been fixed.

    (Issue tracker: #22937)

  - JSON-RPC: The JSON-RPC method get_trans_conflicts was broken. It has
    been fixed.

    (Issue tracker: #23247)

  - JSON-RPC: The JSON-RPC method "subscribe_cdboper" could not handle
    subscriptions to paths adorned when statements. This has been fixed.

    (Issue tracker: #23246)

  - JSON-RPC: commit no-out-of-sync did not work using JSON RPC. This has
    been fixed.

    (Issue tracker: #24328)

  - JSON-RPC: Method set_value did not handle AAA rule create true and
    update false. This has been fixed.

    (Issue tracker: #22865)

  - NETCONF: The NETCONF server would terminate the session if an rpc or
    action that had a 'choice' without 'case's (e.g. due to all 'case's
    having been removed by deviations) in the 'input' was invoked. This has
    been fixed.

    (Issue tracker: #22358)

  - NETCONF: If a subagent model augmented another subagent model, ConfD
    would in some case not read the augmenting nodes properly from the
    subagent. This bug has been fixed.

    (Issue tracker: #22363)

  - NETCONF: If a create-subscription request is received with stopTime
    earlier than startTime, an error is now generated, as defined in RFC
    5277.

    (Issue tracker: #22439, #23803)

  - NETCONF: Fixed bug where a NETCONF remove on a leaf-list returned an
    error rather than ok.

    (Issue tracker: #23276)

  - Python API: When using the high level Python-API it was not possible to
    set the value of an instance-identifier. This has been fixed.

  - Python API: When implementing actions using the confd.dp.Action.action
    decorator and the action was modeled inside a list, it was not possible
    to invoke the action outside of a transaction. This has been fixed.

  - Python API: Using Maagic to iterate over a list where at least one key
    was of type enumeration didn't work. This has been fixed.

    (Issue tracker: #24413)

  - REST API: Fix JSON bug where lists within lists with the same name were
    mixed up.

  - REST API: Configured custom-headers would not appear in oper data REST
    responses. This has been fixed.

    (Issue tracker: #23039)

  - REST API: Fix REST JSON Rollback format error.

    (Issue tracker: #23275, #24189)

  - REST API: The REST 'deep' query parameter no longer returns empty
    non-presence containers.

    (Issue tracker: #24032)

  - REST API: For a REST POST request, a list key value represented in json
    with a module prefix was not decoded correctly. This has now been
    fixed.

    (Issue tracker: #24004)

  - SNMP Agent: When processing get requests, the SNMP Agent would not
    validate key values derived from the OIDs in the request varbinds. This
    could lead to external data providers being invoked with invalid key
    values. This has been fixed.

    (Issue tracker: #22481)

  - SNMP Agent: If several updates were committed to the SNMP Agent's
    configuration (SNMP-COMMUNITY-MIB, SNMP-VIEW-BASED-ACM-MIB and
    SNMP-TARGET-MIB) in moderately quick succession, ConfD could enter a
    state where the last transaction never finished, while being constantly
    runnable and slowly allocating memory until stopped. This has been
    fixed.

    (Issue tracker: #23057)

  - SNMP Agent: It wasn't possible to use
    tailf:ipv4-address-and-prefix-length and inet:ipv4-prefix as list keys
    together with snmp. This has now been fixed.

    (Issue tracker: #23674)

  - Toolchain: When using lists where all keys were leafrefs, it was
    possible to have some of those leafrefs pointing to non existing
    configuration. ConfD would then accept list instances that were faulty,
    because it skipped validation. This has been fixed.

    (Issue tracker: #20645)

  - Toolchain: Due to incomplete type information from the YANG compiler,
    the SNMP Agent, as well as the SNMP Gateway, could not handle value
    translation between non-local index objects in a MIB and a leafref in
    YANG when the types were enumerations. This has been fixed.

    (Issue tracker: #21184)

  - Toolchain: For leafref type leafs (and leaf-lists), pointing to other
    leafrefs, the YANG compiler did not properly validate default values to
    the final leaf's or leaf-list's type. This has been fixed.

    (Issue tracker: #21453)

  - Toolchain: If more than one 'must' or 'when' statement was annotated in
    one annotate statement, only the last one would apply.  This bug has
    been fixed.

    (Issue tracker: #22262)

  - Toolchain: Added new statement tailf:override-auto-dependencies,
    optionally used in 'must' and 'when' expressions.

    (Issue tracker: #22510)

  - Toolchain: The CLI-extension related compiler warnings for the
    combination cli-sequence-commands + cli-compact-syntax were too strict,
    and has been relaxed.

  - Toolchain: The YANG compiler did not allow 'grouping', 'if-feature',
    and 'typedef' as substatements to 'tailf:action'. This has been fixed.

    (Issue tracker: #23221)

  - Toolchain: The YANG compiler did not apply the result of evaluating the
    'if-feature' substatement for 'augment', i.e. the augment was done
    regardless of which features were supported. This has been fixed.

    (Issue tracker: #23411)

  - Toolchain: The combination of tailf:cli-custom-range-enumerator and
    tailf:cli-suppress-mode resulted in an unnecessary compiler warning.
    This warning has been removed.

    (Issue tracker: #23326)

  - Toolchain: The YANG compiler would allow a deviation to remove the
    default 'case' in a 'choice', or change the default to a 'case' that
    did not exist, causing runtime errors in some cases of data retrieval.
    This has been fixed - now such deviations are rejected by the compiler.

    (Issue tracker: #23611)

  - Toolchain: The XML input to an rpc defined with tailf:raw-xml was
    restricted to have at most one toplevel element. This has been fixed.

    (Issue tracker: #23703)

  - Toolchain: If a node below the target of a tailf:symlink had a
    tailf:hidden substatement, the corresponding node in the symlink source
    tree was not hidden. This has been fixed. Note: tailf:symlink is
    deprecated since ConfD-4.3.

    (Issue tracker: #23819, #23707)

  - Toolchain: If a leaf in a YANG module was defined with a type imported
    from another module, and had a tailf:info substatement for the type
    statement, the type information for the leaf would be incomplete,
    causing e.g. 'confdc --emit-mib' to generate an incorrect SYNTAX of
    ConfdString. This has been fixed.

    (Issue tracker: #23860)

  - Toolchain: The YANG compiler did not allow 'reference' and
    'description' as substatements to 'import' and 'include' for YANG 1.1
    (new in 1.1). This has been fixed.

  - Toolchain: An 'augment' statement with a valid path but invalid
    semantics, e.g. augmenting a leaf or a leaf-list, or augmenting
    something other than a 'choice' with a 'case', would cause the YANG
    compiler to fail with "internal error" instead of reporting the
    problem. This has been fixed.

  - Toolchain: The YANG compiler would fail with "internal error" if
    multiple revisions of a module were imported (directly or indirectly).
    This has been fixed.

  - Toolchain: The yanger tree plugin has been fixed so that it prints
    empty action output the same way as the pyang tree plugin does.

  - Web UI: Did not display access denied error message. This has been
    fixed.

    (Issue tracker: #22865)

  - Web UI: The JSONRPC method get_leafref_values failed when lists with
    multiple keys were referred to in combination with 'must' statements.
    This has been fixed.

    (Issue tracker: #20299)

  - Web UI: Clicking a link a second time did not open a new tab if the tab
    had been closed once before. This has been fixed.

    (Issue tracker: #22473)

  - Web UI: Key less lists did not load data. This has been fixed.

    (Issue tracker: #23165)

  - Web UI: CLI widget did not support the exit command. This has been
    fixed.

    (Issue tracker: #23708)


ConfD-6.2.0.1 [August 4, 2016]
==============================

Corrections:

  - JSON-RPC: The JSON-RPC get_case method would fail with "internal error"
    if the current 'case' was augmented from a different YANG module. This
    has been fixed.

    (Issue tracker: #23878)


ConfD-6.2 [May 26, 2016]
========================

Removals:

  - Documentation: Removed documentation of confd_cli socket protocol

    (Issue tracker: #21903)

Non-backwards compatible enhancements:

  - confd: The tailf:aes-cfb-128-encrypted-string and
    tailf:des3-cbc-encrypted-string YANG types now use a random initial
    vector for the encryption. Existing CDB data of these types will be
    upgraded (i.e. re-encrypted) automatically. Once upgraded, automatic
    downgrade is possible to ConfD-6.1.2 or later in the 6.1 branch, or
    ConfD-6.0.4 or later in the 6.0 branch.

    NOTE: The "prefix" of the encrypted value for these types has been
    changed, to reflect the new implementation and to make it possible to
    support upgrade/downgrade: tailf:aes-cfb-128-encrypted-string now uses
    "$8$" and tailf:des3-cbc-encrypted-string now uses "$7$".

    (Issue tracker: #18291, #19898, #20182, #21695)

  - CLI: Introduced compiler warnings for incompatible
    tailf:cli-extensions, and introduced recommendations for when certain
    combinations should be used.

  - Python API: The str() function of _confd.HKeypathRef didn't handle
    mixed namespaces. This has been fixed.

Enhancements:

  - confd: Kicker, a declarative notification mechanism, is now available.
    For more info see the YANG model tailf-kicker.yang and the example.

  - confd: Changes to logging behaviour:

    * Start and stop of logging is logged

    * Changes to logging configuration, e.g., enabling/disabling of log
    streams, changes of log stream targets, are logged.

  - confd: If enabled, ConfD is starting a C program that loads the schema
    into shared memory. This is done in the background while the system is
    starting up. C/Python code can then make use of the maapi function
    get_schema_file_path() to get hold of the file path leading to the
    shared memory, and then use the mmap_schemas() function to load the
    schema from the shared memory.

  - confd: It is now possible to start transactions toward the
    PRE_COMMIT_RUNNING datastore in MAAPI.

  - CDB: The semantics of transactions have changed so that it is possible
    to write both config true and config false data in the same
    transaction.

  - CLI: A new CLI command has been added to the C-, I- and J-style CLI.

    xpath [ctx <path>] (eval | must | when) <expression>

    Evaluate an XPath expression. A context-path may be given to be used
    as the current context for the evaluation of the expression. If no
    context-path is given, the current sub-mode will be used as the
    context-path. The pipe command 'trace' may be used to display
    debug/trace information during execution of the command.

    Note that this command will only be available if the CLI session
    setting 'devtools' has been set to 'true'.

    eval - Evaulate an XPath expression.

    must - Evaluate the expression as a YANG 'must' expression.

    when - Evaluate the expression as a YANG 'when' expression.

  - CLI: Using large ordered-by-user lists and applying any operation (add,
    delete, modify) would take exponentially long time to execute. The
    performance surrounding this has been increased.

    (Issue tracker: #21905)

  - CLI: The C-style now  doesn't produce comments similar to /* */ but
    rather !-comments as is expected by normal Cisco-IOX CLI. It can still
    handle the type comments.

  - CLI: New CLI extension called tailf:cli-suppress-quotes added. Forces
    data nodes to not add any wrapping quotes even if special characters
    such as white space or quote marks are used. Instead all "special"
    characters are just escaped.

  - CLI: When using large data sets that have a lot of
    tail:cli-diff-dependency extensions, or when using leafref:s towards
    big lists, it is possible to get timeouts when displaying configuration
    changes or performing commits. The performance surrounding this has
    been improved.

    (Issue tracker: #22205)

  - Documentation: Clarified that cdb_mandatory_subscriber() must be called
    before the first call of cdb_subscribe2().

    (Issue tracker: #22340)

  - Java API: When the getNextObjectList callback returns all remaining
    objects in a list, the library code will now mark the response to ConfD
    as 'complete'. This will save one round-trip at the end of the list in
    the general case, and more importantly, if the entire list is returned
    in one call, it will now stay in the object cache until it times out.
    Also, the data provider can now override the object cache timeout for
    an individual response, by returning an NextObjectList<ConfValue[]>
    object from the getNextObjectList callback.

    (Issue tracker: #22177)

  - Java API: NavuContext(Cdb) and NavuContext(CdbSession) has been
    deprecated. Full support for writable-oper transaction via MAAPI has
    been introduced in Maapi. All NavuCdbXXXSubscriber functionality has
    been deprecated, instead plain Cdb subscribers together with
    KeyPath2NavuNode.getNode() to obtain the Navu tree is recommended.
    Cdb(String name, SocketChannel channel) has been deprecated, instead
    Cdb using java.io.Socket is promoted.

  - Java API: CdbSubscription - a new Flag type CdbSubscrConfigFlag has
    been added to control the CDB subscription. See javadoc for more
    information.

  - Python API: New high-level Python API. For more information, run pydoc
    confd.

  - REST API: Added feature to set rollback labels and comments using the
    REST URI. Note that rollbacks must be enabled for this feature.

    (Issue tracker: #21868)

  - Toolchain: The contents of compiled MIB files (.bin files) are now
    compressed, in order to reduce disk space utilization.

    (Issue tracker: #12800, #17607)

  - Toolchain: ConfD now supports YANG 1.1, with some exceptions.  See the
    man page confdc(1) for details.

Non-backwards compatible corrections:

  - confd: It was possible to invoke actions via MAAPI with a path that
    didn't exist. This has been fixed.

  - CLI: The setting inheritPaginate used to be default set to false. Thus
    pipe commands didn't automatically inherit the pagination from the
    originating command by default. This has been modified to default to
    true since it was more intuitive from most users. Remember to set this
    setting to false in case this is specifically the behaviour that is
    expected.

  - Toolchain: If a 'bit' statement had a 'position' substatement that
    assigned a lower value than the current highest, the YANG compiler
    would assign incorrect values for any subsequent 'bit' statements that
    did not have a 'position' substatement. This has been fixed.

Corrections:

  - confd: In some APIs e.g. JAPI there exist a Maapi.attach without an
    USid argument. In certain circumstance this could deadlock. This has
    been fixed.

  - confd: If two or more transactions were committed at the same time, and
    one of the transactions had the global lock on 'running', there was a
    race condition that could lead to a deadlock.  This bug has been fixed.

  - confd: The Web UI would in some cases generate audit event
    notifications with usid 'undefined' instead of an integer value. This
    has been fixed.

    (Issue tracker: #22554)

  - confd: The command 'confd --cli-c-dump' would abort whenever it
    processed a hidden node (tailf:hidden). This has been fixed.

  - AAA: A race condition in PAM authentication could cause ConfD to crash
    when a PAM-authenticated user session terminated. This has been fixed.

  - C-API: If a C data provider using the CONFD_DAEMON_FLAG_STRINGSONLY
    flag sent a notification with invalid data, the devel log would only
    report "Internal error" instead of the details of the problem. This has
    been fixed.

    (Issue tracker: #22923, #22273)

  - CDB: If a CDB client started a session using LOCK_WAIT during CDB
    compaction the client would hang forever, and prevent any further write
    transactions. This has been fixed.

    (Issue tracker: #21643)

  - CDB: Fix bug where synchronous synchronisation of operational data in
    an HA setting did not work.

    (Issue tracker: #22153)

  - CLI: Buffer overflow (pasting in more than 1024 characters) when
    executing an osCommand from the CLI for every time but the first would
    lead to the CLI hanging. This has been fixed.

    (Issue tracker: #19555)

  - CLI: Combining tailf:cli-multi-word-key extension with
    tailf:cli-expose-key-name extension would result in bad tab-completed
    lines in the CLI. This has been fixed.

    (Issue tracker: #21804)

  - CLI: When using tail:cli-key-format extension and combining keys the
    table header when displaying the data as a table wouldn't reflect that
    multiple keys are involved. This has been corrected by showing all key
    names applicable to one row separated by slashes.

    (Issue tracker: #22480)

  - CLI: Deleting a case in a choice containing a default case would in
    some cases not result in 'no' command when running the command 'show
    configuration'. This has been fixed.

  - CLI: Data nodes mounted at same location from different yang modules
    could strip out their namespace although it was necessary to access
    them. This has been fixed.

  - CLI: After deleting a list annotated with tailf:cli-recursive-delete
    and tailf:cli-diff-dependency,  the command 'show configuration' would
    display the configuration diff in an incorrect sequence of commands.
    This has been fixed.

  - CLI: Reordering instances in an 'ordered-by user' list would in some
    cases, and when dependencies were triggered, result in an incorrect
    output from the C-style command 'show configuration'. This has been
    fixed.

    (Issue tracker: #20709, #20675, #20698)

  - CLI: Sometimes when using rollbacks the diff for the configuration
    change produced in the CLI didn't notice if a change was a
    non-modification. This could result in bad diff-sets. This has been
    fixed.

  - CLI: When listing information on lists or accessing a list elements
    using range expressions the CLI would sometimes not verify if the
    actual elements existed. This has been corrected.

    (Issue tracker: #22379)

  - CLI: Dependencies, as defined by tailf:cli-diff-dependency, within a
    list that was annotated with tailf:cli-recursive-delete would not be
    triggered if the list was deleted. This has been fixed.

    (Issue tracker: #22700)

  - CLI: When using a dp, and doing a show command on lists with partial
    keys in the CLI, the CLI would crash. This has been fixed.

    (Issue tracker: #22774)

  - Documentation: Documented that C_LIST can not be used as user-defined
    type for a key leaf.

    (Issue tracker: #20984)

  - Erlang API: If the fun passed to one of the functions
    econfd_maapi:diff_iterate/4,5, econfd_maapi:keypath_diff_iterate/5,6,
    econfd_maapi:iterate/6, or econfd_cdb:diff_iterate/5 crashed, the crash
    report did not include the relevant stack trace. This has been fixed.

  - Java API: In CdbSubscriber the method with signature
    subscribe(CdbSubscriptionType, int, int, fmt, Object ...args) did not
    handle the args parameter. This has been fixed.

  - Java API: NavuParser did not correctly handle the case when a child
    node had the same name as its parent. This has been fixed.

    (Issue tracker: #21174)

  - Java API: registerAnnotatedXXXCallback did not support of registration
    of a default range (null value). This is fixed.

    (Issue tracker: #22306)

  - Java API: It was not possible to return a value for a leaf in a
    container in a list entry from a GET_NEXT_OBJECT callback in an
    external data provider in Java. This has been fixed.

    (Issue tracker: #22129)

  - JSON-RPC: The 'get_schema' method behaved badly when cross module
    leafref statements pointed to top level list statements. This has been
    fixed.

    (Issue tracker: #22246)

  - JSON-RPC: The method 'subscribe_cdboper' should have worked with
    keypaths that contained lists with missing keys, but instead it
    required them. This has been fixed.

  - JSON-RPC:  Fixed support for typeless leafs in action output params.

    (Issue tracker: #22325)

  - JSON-RPC: The method delete_trans did not work properly. This has been
    fixed.

    (Issue tracker: #22304)

  - JSON-RPC: An "Invalid configuration mode" error occurred in the
    "new_write_trans" method when the candidate was enabled. This has been
    fixed.

    (Issue tracker: #22821, #22841, #23043)

  - JSON-RPC: If a leaf is being polled in the Web UI (through the
    'subscribe_poll_leaf' method), and then deleted via e.g. the CLI, the
    session crashes and an "invalid_sessionid" error is written to the
    developer log. This has been fixed.

    (Issue tracker: #22556)

  - NETCONF: Under certain circumstances timezones with half offsets, such
    as Indian Standard Time, was not handled correctly. This has been
    fixed.

    (Issue tracker: #22518, #22513)

  - NETCONF: Deletion of the last node in a non-default case in a choice
    with a default case did not emit a deleted operation for the node. This
    has now been fixed.

  - REST API: Fixed error for parsing of escaped characters such as \ and /
    in JSON.

    (Issue tracker: #22356)

  - REST API: When having a 'comma' as a key-value, or part of a key-value,
    you could not differentiate a key-value and key delimiter in the URI,
    leading to issues with the method GET, PUT and PATCH on key instances
    with commas as keys. This has been fixed. NOTE: in the URL, use ',' as
    a delimiter and "%2C" if a comma is part of the key-value; e.g. a list
    with key1 value 'foo,bar' and key2 value "volvo" has the URI
    '/path/to/list/foo%2Cbar,volvo'.

    (Issue tracker: #22411)

  - REST API: Passwords, sent over HTTP via the Authorization header, may
    now contain colon characters.

    (Issue tracker: #22553)

  - REST API: Fix bug where the 1st request was lost from the trafficLog.

    (Issue tracker: #21489)

  - REST API: Fixed problem where JSON input containing double quotes (")
    were incorrectly handled.

    (Issue tracker: #22356)

  - REST API: Using the /api/transaction resource, the transaction was
    committed which it should not be. This has been fixed so that there is
    no commit when using the resource /api/transaction, and it is up to the
    caller to validate and commit the transaction.

  - REST API: Default values are now shown via the Query API for result
    type 'inline' by using the query argument: with-defaults=report-all

    (Issue tracker: #21969)

  - REST API: Fix JSON bug where lists within lists with the same name were
    mixed up.

  - REST API: Fix for problem in handling namespaces for JSON array.

    (Issue tracker: #19599)

  - REST API: Newlines in some JSON error messages has been removed.

    (Issue tracker: #22601)

  - SNMP Gateway: If the standard translation of MIB to yang is used, by
    means of confdc --mib2yang-std, any object with the
    HCNUM-TC::CounterBasedGauge64 syntax will be represented by a
    yang:gauge64 leaf in the resulting yang module. ConfD's SNMP Gateway as
    well as its SNMP Agent would fail to map between the "yang value" and
    the MIB value. This has been fixed.

    (Issue tracker: #21187)

  - Toolchain: yanger -f yang now handles multiple imports of the same
    module with different prefixes.

    (Issue tracker: #22088)

  - Toolchain: When using lists where all keys were leafrefs, it was
    possible to have some of those leafrefs pointing to non existing
    configuration. ConfD would then accept list instances that were faulty,
    because it skipped validation. This has been fixed.

    (Issue tracker: #20645)

  - Toolchain: ConfD needs to have a unique prefix for each loaded YANG
    module, which is used e.g. in the CLI and in the APIs. By default the
    prefix defined in the YANG module is used, but this prefix is not
    required to be unique across modules. This has been fixed by adding a
    -p/--prefix option to 'confdc' for YANG compilation, making it possible
    to give a different prefix, or request that the module name is used as
    the prefix. See the confdc(1) manual page for details.

    (Issue tracker: #21427, #21591)

  - Toolchain: If a YANG module had a leafref to another node in the same
    module, which in turn was a leafref to a different module, ConfD could
    fail to start, claiming that the target of the first leafref didn't
    exist. This has been fixed.

    (Issue tracker: #20566, #20615)

  - Toolchain: If a circular dependency was detected in a leafref path
    inside an augment to a different module, the YANG compiler would fail
    with "internal error" instead of reporting the problem. This has been
    fixed.

  - Toolchain: The CLI-extension related compiler warnings for the
    combination cli-sequence-commands + cli-compact-syntax was too strict,
    and has been relaxed.

  - Toolchain: If a leaf had a type that was derived with a restriction
    from a typedef in another module, the default (if any) for the typedef
    was not applied to that leaf. This has been fixed.

  - Toolchain: The compiler could not compile tailf:cli-boolean-no
    statements inside top-level leafs. This has been fixed.

  - Web Server: Using Chrome 50 it was not possible to login to the ConfD
    web server. The reason for this was
    https://developers.google.com/web/updates/2016/03/chrome-50-deprecation
    s?hl=en#remove-insecure-tls-version-fallback which removes Insecure TLS
    Version Fallback. This has been fixed.

    (Issue tracker: #22605, #22719, #22723, #22889, #22944)


ConfD-6.1.2.4 [May 16, 2016]
============================

Corrections:

  - CLI: When using a dp, and doing a show command on lists with partial
    keys in the CLI, the CLI would crash. This has been fixed.

    (Issue tracker: #22774)

  - JSON-RPC: If a leaf is being polled in the Web UI (through the JSON-RPC
    'subscribe_poll_leaf' method), and then deleted via e.g. the CLI, the
    session crashes and an "invalid_sessionid" error is written to the
    developer log. This has been fixed.

    (Issue tracker: #22556)

  - Web Server: Using Chrome 50 it was not possible to login to the ConfD
    web server. The reason for this was
    https://developers.google.com/web/updates/2016/03/chrome-50-deprecations
    ?hl=en#remove-insecure-tls-version-fallback
    which removes Insecure TLS Version Fallback. This has been fixed.

    (Issue tracker: #22605, #22719, #22723, #22889, #22944)


ConfD-6.1.2.3 [April 20, 2016]
==============================

Corrections:

  - Web Server: The CGI support in the web UI crashed if only a read
    transaction had been created, i.e. no write transactions. This has been
    fixed.

    (Issue tracker: #22504)


ConfD-6.1.2.2 [April 14, 2016]
==============================

Corrections:

  - NETCONF: Additional cases where an augmented node had to be sent after
    all non-augmented nodes in NETCONF have been fixed.

    (Issue tracker: #22425)


ConfD-6.1.2.1 [April 7, 2016]
=============================

Corrections:

  - JSON-RPC: The get_schema JSON-RPC method behaved badly when cross module
    leafref statements pointed to top level list statements. This has been
    fixed.

    (Issue tracker: #22246)


ConfD-6.1.2 [April  2, 2016]
============================

Non-backwards compatible enhancements:

  - CLI: Introduced compiler warning for the case when
    tailf:hide-in-submode is used in a container without also using
    tailf:flatten-container.

    (Issue tracker: #20733)

  - JSON-RPC: for security purposes, rate limiting has now been added to
    each and every JSON-RPC session. By default only 1 million JSON-RPC
    requests are allowed within the hour, but this is configurable under
    /confdConfig/webui/rateLimiting. Set it to 0, if you want to turn it
    off.

  - NETCONF: If the idle timeout in NETCONF is changed, existing sessions
    are no longer terminated.  Instead they keep their existing timeout.

    (Issue tracker: #21953)

Enhancements:

  - confd: When using the query api and requesting the results in tag-value
    format, the query api would issue an extra lookup of key leaf elements
    towards the dataprovider. This extra request has been optimized away.

  - confd: Attempting to perform state changing operations, e.g., apply, on
    attached transactions via MAAPI is now caught and an error is returned
    rather than causing an internal error.

    (Issue tracker: #20781)

  - confd: The new YANG extensions tailf:meta-data and sub-statement
    tailf:meta-value values are now accessible via the schema API:s in C,
    Java, Erlang, Python and JSON-RPC.

  - C-API: Schema loading for modules with many type definitions has been
    optimized.

  - CLI: The speed of 'show configuration' has been improved in situations
    where there is an extensive usage of leafrefs.

    (Issue tracker: #21564)

  - CLI: Tags can now be displayed for non-presence and presence
    containers. To activate this for non-presence containers change the
    confd.conf setting displayNonPresenceAttributes from its default value
    false to true.

    (Issue tracker: #19008)

  - CLI: The speed of 'show configuration' has been improved in situations
    where there is an extensive usage of the YANG extension
    tailf:cli-diff-dependency.

    (Issue tracker: #21440)

  - CLI: The CLI (Juniper, XR and IOS) has been improved to allow piping
    data from the show command to the display command in several places
    previously not possible. For instance, it is now possible to use
    display targets for statistics as well as configuration data. In
    addition to json, xml and xpath, the new target keypath has been added.

  - Erlang API: CDB_DONE_OPERATIONAL subscription synchronization reply was
    missing in the econfd API. It has been added.

    (Issue tracker: #21697)

  - JSON-RPC: calling set_value with value null acts as a replacement of a
    delete call.

  - JSON-RPC: the developer log will now contain entries for JSON-RPC
    requests with method names that are either deprecated or non-canonical,
    where by canonical we understand the method name used in the JSON-RPC
    documentation.

  - JSON-RPC: the "abort" method will now return an error if trying to
    abort an ongoing "run_action" method related to an action which is not
    interruptible.

  - JSON-RPC: start_query and query methods now accept a keypath as the
    "path" parameter instead of the "xpath_expr" parameter.

  - JSON-RPC: a new method "copy_list_entry" is now available, as a
    counterpart to remame_list_entry, taking a "from_path" and "to_keys"
    input parameters. See JSON-RPC documentation for a complete
    description.

    (Issue tracker: #20750)

  - JSON-RPC: the set_value method can now take a boolean parameter
    "dryrun" in order to try to set the value of the leaf, but in case of
    success revert the value. This can be used to check if a value is valid
    or not, before actually setting it.

  - JSON-RPC: you can now create a transaction within a read-write
    transaction, by passing a th parameter.

  - JSON-RPC: a new method "append_list_entry" is now available for
    leaf-lists as a convenient way to append rather than get and set
    leaf-lists' contents. See JSON-RPC documentation for a complete
    description.

    (Issue tracker: #20086)

  - REST API: a /api/logout resource has been added that will always reply
    with status code "401 Unauthorized", thus triggering browsers to reset
    credentials for the REST API realm.

    (Issue tracker: #20670)

  - SNMP Agent: The SNMP Agent now keeps up to 16 (up from 4) iterators for
    mapping table getnext requests to lists. This improves performance in
    scenarios where more than 4 tables are being walked in parallel.

    (Issue tracker: #21604)

  - SNMP Gateway: The SNMP Gateway now supports automatic forwarding of
    SNMP notifications from subagents to a notification stream as a "yang
    notification".

    (Issue tracker: #19174)

  - Web Server: JSON-RPC and CGI reguests can be audited (i.e. logged in
    the audit log via a configurable) and controlled by the
    /confdConfig/webui/audit boolean switch. The default value is true.

    (Issue tracker: #21655)

  - Web Server: when calling a CGI script from a JSON-RPC client, e.g.
    browser, that has authenticated successfully, the environment of the
    CGI script will be able to access more information about the JSON-RPC
    session such as username, groups, open transactions, timestamp of when
    the session started, etc. For a full list of environment variables,
    read the documentation chapter on "The web server" - section "CGI
    support"

Non-backwards compatible corrections:

  - confd: ConfD now correctly rejects illegal instance-identifers, e.g.,
    on the form /x/y[name=foo].

  - CLI: It was not possible to enter list sub-modes in the I- and C-style
    CLI by entering configuration commands containing abbreviated keys.
    This has been fixed so that when the  confd.conf option
    '/confdConfig/cli/allowAbbrevKeys' is set to 'true' abbreviated keys
    can be used to enter list sub-modes . Note that this makes it
    impossible to create new keys that are abbreviations of existing keys.
    As to make this behaviour optional, the default setting for
    '/confdConfig/cli/allowAbbrevKeys' has been changed from 'true' to
    'false'.

    (Issue tracker: #20936)

Corrections:

  - confd: If an event notification subscriber using the Erlang API
    internally in ConfD didn't read its notifications, all existing
    subscriptions would be terminated when the event manager attempted to
    close the problematic subscriber's socket. This has been fixed.

    (Issue tracker: #21778)

  - confd: Validation was not performed for top-level nodes with default
    values. This has now been fixed.

    (Issue tracker: #18594)

  - confd: In some cases rollback files did not respect OBU (order by
    user). This has been fixed.

    (Issue tracker: #21402)

  - confd: If an SSH client tried to send an optimistic key-exchange
    package and guessed wrong about the algorithm, ConfD's built-in SSH
    server would not properly discard the optimistic package, and the key
    exchange would fail. This has been fixed.

    (Issue tracker: #21485)

  - confd: A non-default value for a default leaf could be reincarnated
    when 'hidden' by a when-expression evaluating to false while the
    ancestor node being recreated. This has now been fixed.

    (Issue tracker: #20242)

  - confd: Delete of a NP container did not delete tags for the node. This
    has now been fixed.

  - confd: A list with a single key that was a union between a string and
    another non-integer type, could, for certain combinations of key values
    cause confd to crash. This has been fixed.

  - confd: ConfD would fail to start if the string ".ez" was found in the
    path to the installation directory. This has been fixed.

    (Issue tracker: #18760)

  - confd: Incorrect handling of nested choices with mandatory statements
    caused validation to fail. This has now been fixed.

    (Issue tracker: #21022)

  - confd: Loading a J-style CLI file with syntactic errors could (for some
    type of errors) result in the error message "internal error" instead of
    a proper error message. This has been fixed.

  - confd: A data-provider was invoked for leafs with default value even
    though an ancestor node with a when-condition evaluates to false. This
    has now been fixed.

    (Issue tracker: #21268)

  - confd: Elements in a MAAPI path after a key element in an augmented
    subtree were rejected as invalid if the namespace prefix was given.
    This has been fixed.

    (Issue tracker: #21986)

  - AAA: Web UI authentication would fail when external authentication was
    used, unless /confdConfig/aaa/expirationWarning was set to "ignore".
    This has been fixed.

  - CDB: cdb_num_instances() could return an incorrect value when used in a
    CDB_PRE_COMMIT_RUNNING session. This has now been fixed.

    (Issue tracker: #20993)

  - CDB: When defaultHandlingMode in confd.conf is set to trim the CDB
    upgrade code now correctly handles leafs that have a new default value
    and makes sure that when a leaf is upgraded and its value is the same
    as the new default, that it is appropriately trimmed.

    (Issue tracker: #21602)

  - CDB: Operational data written via the maapi operational_write api was
    not properly replicated to slaves in HA mode. This has been fixed.

    (Issue tracker: #22153)

  - CDB: Fix bug where moving elements inside an ordered-by user list
    within an operational transaction caused an internal error.

  - CLI: When using tailf:cli-show-config together with the config:false
    option data was sometimes still not displayed when listing the current
    running configuration. This has been fixed.

    (Issue tracker: #20496)

  - CLI: Allow users to press enter when in a cli-incomplete-command tagged
    statement that has a type empty leaf with drop-node-name. In this case
    we auto complete with the empty leaf that exists.

    (Issue tracker: #20641)

  - CLI: Fixed faulty printing.

  - CLI: When using the '| save' command the CLI could hang for external
    commands. This has been fixed.

    (Issue tracker: #21486)

  - CLI: running the command 'show parser dump' when using an external data
    provider would in some cases lead to get_next() being invoked on the
    external data provider with the ikeypath argument containing dummy
    keys. This has been fixed.

    (Issue tracker: #21209, #22172)

  - CLI: In the CLI (both C-style and J-style), when invoking a command
    with empty string as parameter, the parameter was ignored. The problem
    occurred when invoking osCommands implemented in clispec(5). This has
    been fixed.

    (Issue tracker: #19969)

  - CLI: The table rendering output of filtering 'show' commands would in
    some cases not correlate to the filters. This has been fixed.

    (Issue tracker: #21127)

  - Java API: Japi - ConfXMLParamToXML.doXML() made recursive calls over
    the list of parameters which could cause a StackOverflowError for large
    parameter arrays.

    (Issue tracker: #21436)

  - Java API: Japi - Dp data provider callback existsOptional() had a
    broken implementation that created internal error when reporting false.

  - Java API: Japi - ConfKey.toString() did not correctly quote
    ConfObjectRef objects containing whitespace chars.

    (Issue tracker: #21451)

  - JSON-RPC: a regression made it so that actions in augmented trees would
    be run with input parameters from all namespaces i.e. duplicate input
    parameters. This has been fixed.

    (Issue tracker: #21839, #21976)

  - JSON-RPC: the flags parameter of the commit method can also be a
    bitmask for backwards compatibility reasons, but it should not accept
    invalid bits. This has been fixed.

    (Issue tracker: #21810)

  - JSON-RPC: validation might have failed with reasons that were not
    trimmed. This has been fixed.

    (Issue tracker: #20669)

  - JSON-RPC: an OPTIONS HTTP request should have returned the allowed
    methods in the Allow header to fulfill the standards, but didn't. This
    has been fixed.

  - JSON-RPC: delete_trans with an invalid th parameters was failing. It
    now acts a successful noop method.

    (Issue tracker: #20197)

  - JSON-RPC: running actions with leaf-list parameters sent as arrays with
    items that had whitespaces e.g. ["one two", "three"], resulted in a
    leaf-list parameter decoded as all whitespace separated values e.g.
    ["one", "two", "three"]. This has been fixed.

    (Issue tracker: #21406)

  - JSON-RPC: If PAM or external authentication gives a warning that the
    user's password is about to expire, the warning is passed on to the
    user, and the user might need to acknowledge reading the warning. The
    login method then should have expected the ack_warning param to be set
    to true for a successful login, but instead it would throw an error
    complaining that the ack_warning parameter is not allowed. This has
    been fixed, and documentation has been updated.

  - JSON-RPC: subscriptions, except those started via subscribe_poll_leaf,
    were not properly stopped. This has been fixed.

    (Issue tracker: #21882)

  - JSON-RPC: stopping a command/subscription did not trigger a "stopped"
    notification on the comet channel. This has been fixed.

    (Issue tracker: #19659)

  - JSON-RPC: an internal error was triggered when upgrading and a JSON-RPC
    session had open write transactions. This has been fixed.

    (Issue tracker: #21802, #22019)

  - JSON-RPC: the cli/confd_cli builtin command would run with
    inappropriate uid and gid. This has been fixed.

    (Issue tracker: #21830)

  - JSON-RPC: set_value might have crashed the session when removing all
    entries in a "ordered-by user" leaf-list and adding entries within the
    same transaction. This has been fixed.

    (Issue tracker: #21224)

  - JSON-RPC: a bug in creating and destroying command/subscription handles
    may have lead to handles for two different command/subscriptions to
    overlap, creating the impression of a race condition and giving errors
    such as "Command already started". This has been fixed.

    (Issue tracker: #20026, #20983, #21151, #21882)

  - JSON-RPC: the get_value, get_values and set_value methods were
    incorrectly returning "data not found" errors, instead of "access
    denied". This has been fixed.

    (Issue tracker: #22008)

  - JSON-RPC: the db methods (copy_running_to_startup_db,
    reset_candidate_db, lock_db, unlock_db) methods were failing with
    internal error. This has been fixed.

    (Issue tracker: #22167)

  - JSON-RPC: set_value calls would succeed even for nodes with their when
    statement evaluating to false. This has been fixed.

    (Issue tracker: #21676)

  - NETCONF: If an identityref was used in a subtree filter with a
    different prefix than the prefix defined in the YANG module, the
    subtree filter would not match.  This bug has been fixed.

    (Issue tracker: #21351)

  - NETCONF: When reopening the netconf trace log, for instance in the case
    of a reconfiguration of the filename in confdConfig, or if
    maapi_reopen_logs() was run, ConfD would not close the file handle to
    the old file - leaking a file descriptor. This has been fixed.

    (Issue tracker: #21237)

  - Python API: The API calls _confd.maapi.close and _confd.cdb.close
    didn't correctly clean up the Python socket object. This has been
    fixed.

  - Python API: The maapi function get_object() could in certain cases
    segfault or produce random result. This has been fixed.

  - Python API: The MAAPI functions diff_iterate() and
    keypath_diff_iterate() could segfault in certain situations. This has
    been fixed.

  - Python API: The method val2str() of _confd.Value truncated the returned
    string to 255 chars. This has been fixed.

    (Issue tracker: #21618)

  - REST API: Fixed so that YANG Module name is used in JSON REST Response
    where identityref is used.

    (Issue tracker: #21493)

  - REST API: Module names are now included for top-level elements in the
    GET output of the /api/config resource

    (Issue tracker: #20975)

  - REST API: Fix for handling of JSON containing identityrefs where prefix
    was let through even though YANG module name is required.

    (Issue tracker: #21493)

  - SNMP Agent: If the SNMP agent was configured to listen on a specific IP
    address and the loopback address, but not on the wildcard address, it
    could cause sending of PDUs to non-loopback destinations to fail. This
    has been fixed.

    (Issue tracker: #22016)

  - SNMP Agent: The vacmViewTreeFamilyMask object was not properly
    implemented. The bits in each byte were interpreted in reverse order.
    This bug has been fixed.

    (Issue tracker: #21684)

  - SNMP Agent: The SNMP Agent did not support mappings between the
    recently added yang types, tailf:ip-address-and-prefix-length,
    tailf:ipv4-address-and-prefix-length,
    tailf:ipv6-address-and-prefix-length and MIB objects of OCTET-STRING
    types of proper lengths. This has been fixed.

    (Issue tracker: #21744)

  - Toolchain: The YANG compiler did not give an error if a list without
    keys was defined in a grouping, and the grouping was used in config.
    This has been fixed.

  - Toolchain: If a deviation did 'deviate not-supported' for a toplevel
    node in an augment of a different module, ConfD would fail to load the
    deviated module. This has been fixed.

    (Issue tracker: #21563)

  - Toolchain: It is now possible to define tailf:unique-selector
    statements at the top-level of YANG modules. These
    tailf:unique-selector statements will be moved to the top level list
    that they refer to. tailf:unique-selector can also be placed in level
    defined groupings.

    (Issue tracker: #22118)

  - Toolchain: If the argument to deref() in a leafref path had more than
    one "up" (../), and the node referenced by deref() was a leafref with a
    relative path, ConfD would fail to load the module. This has been
    fixed.

  - Toolchain: The YANG compiler would fail with "internal error" instead
    of reporting the problem if two modules processed in one invocation had
    the same namespace. This has been fixed.

    (Issue tracker: #21790)

  - Toolchain: The YANG compiler did not detect that a deviation caused an
    illegal augment of a mandatory node. This has been fixed.

    (Issue tracker: #21790)

  - Toolchain: confdc would fail if the same feature was passed twice with
    -f

    (Issue tracker: #21857)

  - Toolchain: If the node given by a YANG 'deviation' statement could not
    be found, the compiler would fail with "internal error" instead of
    reporting the problem. This has been fixed.

    (Issue tracker: #21591)

  - Toolchain: The tailf:unique-selector statement had no effect when used
    in a YANG submodule. This has been fixed.

    (Issue tracker: #21524)

  - Web Server: using unsupported HTTP/1.0 requests on paths that required
    authentication would end up crashing the web server. This has been
    fixed.

  - Web Server: a crash occurred when the rate limiting was reset to zero.
    This has been fixed.

    (Issue tracker: #21488)

  - Web UI: In the auto-rendered webui, entries in a list directly in a
    module did not show up. This has been fixed.

    (Issue tracker: #22014)

  - Web UI: The List component couldn't handle '/' in a key string. This
    has been fixed.

    (Issue tracker: #21769)

  - XPath: XPath ignored when-expressions in NP-containers when descending
    a path to a leaf node. This has now been fixed.

  - XPath: The builtin XPath function deref() now correctly only follows
    the first node in the node-set given as argument. Also leaf-list nodes
    are now correctly dereferenced.


ConfD-6.1.1.1 [March 15, 2016]
==============================

Corrections:

  - SNMP Agent: In ConfD version 5.4 and onwards, an SNMP MIB would not link
    properly if some or all objects in the MIB were implemented by YANG
    nodes augmented into a foreign module, and those YANG nodes were tied to
    the MIB objects by means of relative tailf:snmp-oid statements, such as
    ".1". Warnings about missing associations would be thrown by the
    compiler, and the objects would be unusable in runtime. This has been
    fixed, by resolving such relative OIDs via the OID associated with the
    augment target node.

    (Issue tracker: #21574)


ConfD-6.1.1 [January 21, 2016]
==============================

Non-backwards compatible enhancements:

  - JSON-RPC: for security purposes, each and every JSON-RPC session is now
    limited to an absolute timeout. Previously, only an idle timeout was in
    place, terminating the session if the user was idle for longer time.
    Now the session can be limited to a certain time window, regardless of
    the user being idle or not. By default this is set to 1 hour, but this
    is configurable under /confdConfig/webui/absoluteTimeout. Set it to 0,
    if you want to turn it off.

Enhancements:

  - confd: Starting a new transaction would inadvertently scan ConfD load
    directories, which caused extra overhead (especially on systems with
    slow disk and cpu) for every transaction. This has been improved.

    (Issue tracker: #20908)

  - confd: Certain rare internal errors were caught by calling assert().
    This led to the ConfD daemon aborting (and possibly dumping core). This
    has now been changed so that the internal error is logged in the error
    log instead (making it easier to find these types of errors).

    (Issue tracker: #20445)

  - confd: When instructed to become slave (via the be_slave() api call)
    ConfD will now use a timeout on the connect() call to the master. The
    timeout is (3 * tickTimeout) long, or 10 seconds (whichever is
    longest).

    (Issue tracker: #16766, #20610, #20754)

  - C-API: Added maapi_set_next_user_session_id(), which can be used to
    ensure that session ids for user sessions started by northbound agents
    or via MAAPI are unique across a ConfD restart. See the
    confd_lib_maapi(3) manual page. Also available via "confd_cmd -c
    'set_next_usessid <usessid>'"

    (Issue tracker: #20764)

  - CLI: Tags can now be displayed for non-presence and presence
    containers. To activate this for non-presence containers change the
    confd.conf setting displayNonPresenceAttributes from its default value
    false to true.

    (Issue tracker: #19008)

  - CLI: Increased upper limit of rollback id to 4294967295.

    (Issue tracker: #21285)

  - CLI: A new pipe target has been added in C-, I- and J-style CLI called
    'display json'. When used together with a show configuration command
    the configuration will be displayed in json format.

    (Issue tracker: #18484)

  - Documentation: The --emit-xsd compiler options has been removed

    (Issue tracker: #20797)

  - Documentation: HTML documentation for _confd.maapi was missing. This
    has been fixed.

    (Issue tracker: #21038)

  - Documentation: In order to be able to run executables invoked via
    actions as another user, the executable cmdwrapper needs to have
    changed permissions. This has now been documented. This is very similar
    as the handling of cmdptywrapper which is used for pure CLI commands.

    (Issue tracker: #20830)

  - Java API: Japi - Cdb.setTimeout has been introduced to control timeout
    of Client Cdb actions. See javadoc for more information.

    (Issue tracker: #21311)

  - JSON-RPC: The "deref" JSON-RPC method can now take an additional
    "result_as" parameter called "list-target". This parameter derefs a
    path but omits uninitiated list keys instead of returning an error.

    (Issue tracker: #20650)

  - JSON-RPC: the deref method now takes a result_as parameter that can be
    paths (default) or target. When it is set to target, the method return
    only the target keypath of the dereferenced leafref.

    (Issue tracker: #20650)

  - JSON-RPC: tail:hidden elements in YANG modules are now kept
    unhidden/hidden in between transactions, i.e. per user session.

    (Issue tracker: #20620)

  - JSON-RPC: get_list_keys now takes in a start_with parameter, in order
    to filter out keys that do not start with a specific prefix.

    (Issue tracker: #19392)

  - Python API: Added support for creating a _confd.Value of type
    C_OBJECTREF.

  - Python API: Added support for creating a _confd.Value of type C_LIST

  - REST API: Updated errors for REST to displays key names when available.

  - Toolchain: It was not possible to emit a proper mib from a module
    augmenting leafs or containers into a list of a different module. This
    has been improved, so that some cases are now handled - a sequence of
    leafs or a single container with a sequence of leafs that are augmented
    into a list will lead to a table that AUGMENTS the table object emitted
    from the augmented list.

    (Issue tracker: #20876)

  - Toolchain: Added tailf:no-leafref-check to make it possible to avoid
    validating leafrefs.

    (Issue tracker: #19942)

  - Web Server: The Web UI traffic log files no longer contains < and >
    characters

    (Issue tracker: #19721)

  - Web Server: The Web UI traffic log no longer contain payload for image
    files.

    (Issue tracker: #19009)

Non-backwards compatible corrections:

  - confd: Values for hidden mandatory leafs were not preserved when a list
    entry was deleted and re-created within a transaction. This has been
    fixed.

    (Issue tracker: #20771)

  - JSON-RPC: get_list_keys defaulted to chunk_size 10 in an inconsistent
    way with regards to other JSON-RPC methods, and also required an
    arbitrarily high number if the client required all list entries' keys.
    This has been fixed by defaulting to an undefined chunk_size, with
    infinity semantics, and letting the client decide if and how the
    chunk_size should be defined.

    (Issue tracker: #20544)

  - Toolchain: When emitting a MIB from a module augmenting another module,
    some objects should be imported from the MIB that is supposedly emitted
    from the augmented module. This requires a tailf:snmp-mib-module-name
    statement to be inserted or annotated into the augmented module.

    (Issue tracker: #20876)

Corrections:

  - confd: The combination of "tailf:call-once true" and "tailf:dependency"
    caused the validaion point not to be called at all. This has now been
    fixed.

    (Issue tracker: #17514, #20616)

  - confd: The tailf:priority YANG extension could cause validation points
    to be ignored during validation. This has now been fixed.

    (Issue tracker: #17514)

  - confd: ConfD refused to start without a DSA key in the SSH server's key
    directory, and the documentation incorrectly stated that only DSA keys
    are supported, although ConfD's built-in SSH server supports DSA and
    RSA keys. This has been fixed.

    (Issue tracker: #21023, #21217)

  - confd: If a "unique" statement referred to a list key, and the list had
    more than one key, the unique constraint would not be enforced.  This
    bug has been fixed.

    (Issue tracker: #20925)

  - confd: I some circumstances with move of order-by-user lists and
    candidate commit without a previous validate, the transaction could
    cause an internal error. This has been fixed.

  - confd: In some cases, setting a leafref to a bad value could result in
    an internal error instead of a proper error message.  This bug has been
    fixed.

    (Issue tracker: #20584)

  - confd: If a leafref referred to a key in an ancestor list, the leafref
    would not be validated.  This bug has been fixed.

    (Issue tracker: #19145)

  - confd: Changing active case followed by recreation of the already
    commited case could lead to mandatory constraints not being uphold,
    thereby permitting invalid configuration to be commited. This has now
    been fixed.

    (Issue tracker: #20304)

  - confd: An "invalid tagpath" error occurs while issuing an augment
    notification. This has been fixed

    (Issue tracker: #20977)

  - confd: Attempting to load XML config with
    maapi_load_config()/confd_load  using the default mode, i.e. neither
    merge nor replace, in start phase 0, would fail with an internal error.
    This has been fixed.

    (Issue tracker: #17936)

  - confd: If an SSH client sent the non-standard opcode IUTF8 (42) in a
    pty-req channel request towards the built-in SSH server, the connection
    would go down. This has been fixed.

    (Issue tracker: #21317)

  - C-API: If the transaction/validation init() callback had not been
    registered, the library would only print an error message at the point
    of invocation, and only if the debug level was above CONFD_SILENT. This
    has been fixed - now the missing registration is detected by
    confd_register_done(), which in this case returns CONFD_ERR with
    confd_errno set to CONFD_ERR_PROTOUSAGE, and confd_lasterr() providing
    an appropriate error message.

    (Issue tracker: #21069)

  - C-API: If maapi_init_cursor() was passed the path for a list entry
    instead of the path for a list, the subsequent call of maapi_get_next()
    could result in a crash. This has been fixed, now the maapi_get_next()
    call fails with the appropriate CONFD_ERR_BADPATH error in this case.
    This bug also affects the Python API, as its implementation is based on
    the C API.

    (Issue tracker: #20276)

  - C-API: If confd_serialize() was used for a confd_tag_value_t where the
    .tag.ns value was 0, confd_deserialize() of the resulting buffer would
    fail with an internal error. This has been fixed.

    (Issue tracker: #18867)

  - CDB: ConfD failed to detect missing mandatory choice during start with
    empty database. This has now been fixed.

  - CDB: If a leaf was deleted, the old value was not provided in the
    MOP_DELETED invocation of the iter() function for cdb_diff_iterate().
    This has been fixed.

    (Issue tracker: #21124)

  - CLI: The extensions tail:incomplete-no and tailf:sequence-command would
    not always work in combination. This has been corrected.

    (Issue tracker: #19778)

  - CLI: tailf:info was lost for augmented actions. This has been fixed.

    (Issue tracker: #20935)

  - CLI: Deleting data in the J-CLI could fail when using wildcards and
    specifying specific leafs to delete. This has been fixed

    (Issue tracker: #20741)

  - CLI: The tailf:cli-reset-container also had effect in the J-style CLI,
    which it should not. This has been fixed.

    (Issue tracker: #20959)

  - CLI: When combining tailf:cli-no-value-on-delete and
    tailf:cli-reset-all-siblings extensions the delete command could end up
    in an endless loop. This has been fixed.

  - CLI: It was not possible to mount an action defined in YANG on a custom
    command defined in a clispec, by using tailf:cli-mount-point . This has
    been fixed.

    (Issue tracker: #19989)

  - CLI: In the C- and I-style CLI; deleting a leaf in a list-instance
    containing a prefix leaf (a leaf annotated with tailf:cli-prefix-key),
    would in some cases cause the entire list-instance to be removed. This
    has been fixed.

  - CLI: When standing in a CLI sub-mode and entering a different sub-mode
    the CLI sometimes didn't switch sub-mode. This has been fixed.

    (Issue tracker: #21011, #21389)

  - CLI: Displaying a notification where some of the leafs had been
    augmented from another namespace would result in an 'internal error'.
    This has been fixed.

    (Issue tracker: #20977)

  - CLI: Do only prompt for action parameter values when the autoWizard is
    enabled.

    (Issue tracker: #20412)

  - CLI: When entering edit mode in J-Style CLI the prompt-banner could
    include no-keyword nodes. This has been fixed.

    (Issue tracker: #21051)

  - Documentation: Updated documentation, WebUI does not have to be enabled
    in order for REST to be enabled.

    (Issue tracker: #19771)

  - Java API: Japi - the NavuParser that parses XML to ConfXMLParams did
    not correctly handle the case of leaflist when the underlying type of
    the leaflist was strings that contained whitespace characters.

    (Issue tracker: #21160)

  - JSON-RPC: get_list_keys was terminating on the first list entry that
    didn't match the starts_with condition, although sequent list entries
    might pass the condition. This has been fixed.

    (Issue tracker: #21248)

  - JSON-RPC: running actions inside of augmented nodes would crash the
    session due to the incorrect namespace detection. This has been fixed.

  - JSON-RPC: an action with invalid results would end up crashing the
    session. This has been fixed.

  - JSON-RPC: setting /confdConfig/webui/absoluteTimeout to PT0M would
    crash the login method. This has been fixed.

    (Issue tracker: #21326)

  - NETCONF: Annotations containing '<' was not correctly quoted in NETCONF
    which rendered an illegal XML. These are now quoted as '$lt;'

    (Issue tracker: #20519)

  - NETCONF: In some cases, an augmented node had to be sent after all
    non-augmented nodes in NETCONF.  This bug has been fixed.

    (Issue tracker: #20822)

  - Python API: The _confd.Value type C_IDENTITYREF was missing. This has
    been fixed.

  - Python API: Empty strings could not be handled by the Python API when
    using certain versions of Python. This has been fixed.

    (Issue tracker: #20280)

  - REST API: Fixed problem when using JSON with a YANG model with multiple
    levels of "output".

    (Issue tracker: #20548)

  - REST API: Updated handling of identityref:s in JSON, module-name must
    be used.

    (Issue tracker: #20094)

  - REST API: One-line error message related to "unique" is now printed
    only with ReST interface instead of all interfaces.

  - Toolchain: Deviation target module can now look at imports defined in
    validation module.

    (Issue tracker: #20525)

  - Toolchain: When emitting (fxs) load_augment records (from augmenting a
    schema node with a input/choice/case node ancestor), select the closest
    ancestor that is not input/case/choice as augment target from which to
    pick required-flags to the load_augment record.

    (Issue tracker: #20976)

  - Toolchain: It was not possible to emit a MIB from a module with a
    typedef of type leafref. This has been fixed.

    (Issue tracker: #21086, #20876)

  - Toolchain: When using "unique" statement, but without "key" in a list,
    yang compiler reports "internal error". This has been fixed with a
    better error printout

    (Issue tracker: #20791)

  - Toolchain: If a tailf:link leaf was referenced in a unique statement,
    confdc would fail with internal error.  This bug has been fixed.

    (Issue tracker: #19440)

  - Toolchain: When confdc found incorrect dependencies in a YANG module,
    it would format the bad paths incorrectly. This bug has been fixed.

  - Toolchain: confdc --emit-h/--emit-hrl from a YANG file would use an
    obsolete version of the compiler. This has been fixed.

    (Issue tracker: #19324)

  - Toolchain: It was not possible to compile a MIB where an object of type
    OCTET STRING was implemented by a yang leaf of type identityref. This
    should work, and has been fixed.

    (Issue tracker: #20876)

  - Toolchain: If a leaf given in the argument list for the YANG 'unique'
    statement didn't exist, the compiler would fail with "internal error"
    instead of reporting the problem. This has been fixed.

    (Issue tracker: #20791, #19582)

  - Web Server: operational data was cached indefinitely per transaction,
    ending in stale values. This has been fixed.

    (Issue tracker: #20019)


ConfD-6.1 [November 25, 2015]
=============================

  - Toolchain: As part of an effort to remove less used options to the
    confdc(1) command line tool we are deprecating the '--xmlcheck'
    option with this release. The purpose of this option was to
    validate XML instance documents with the help of compiled YANG
    modules, i.e. fxs files. The deprecated option will be removed in
    ConfD-6.3.


Removals:

  - REST API: Make sure that tailf:hidden actions are hidden in the
    responses.

    (Issue tracker: #19745)

Non-backwards compatible enhancements:

  - AAA: If PAM or external authentication gives a warning that the user's
    password is about to expire, the warning can now be passed on to the
    user. Refer to /confdConfig/aaa/expirationWarning in the confd.conf(5)
    manual page and the "External authentication" section in the AAA
    chapter of the User Guide for details.

    The JSON-RPC server implements the above by replying to the login
    method, either with a successful result and "warning" information, or
    with an error and "warning" information. The latter happens if the user
    needs to also confirm seeing the warning, upon which the login method
    must be called with "ack_warning" set to true, in order to succeed.

  - C-API: Debug level CONFD_TRACE for libconfd would print an
    uninformative string " (0)  (0) " for every data provider callback
    invocation that returned CONFD_OK without a previous call of a reply
    function. This has been removed.

  - CLI: A new option has been added to confd_cli. It is called
    --stop-on-error and causes the CLI to exit (with status code 8) at the
    first error. It is intended to make it easier to script the CLI.

    This new feature has implied a change in the protocol between
    confd_cli and the Confd backend. For users with an own customized
    version of clistart.c this means that it must be upgraded.

    (Issue tracker: #19606)

  - CLI: Copying a sub-tree by using the 'copy' command in the CLI will now
    exclude hidden data from the copy operation.

  - Java API: NavuList implemented an Iterator<NavuContainer> that made it
    possible to iterate over the elements of an list. However the NavuList
    elements are actually NavuListEntry which is a subclass of
    NavuContainer.

    The iterator is changed to Iterator<NavuListEntry> which makes the
    getKey() method accessible on the iterated elements without casting.

    Code that manipulates the iterator() directly (not implicitly in a for
    loop) need to refer to Iterator<NavuListEntry>. All other user code
    will work without change.

    (Issue tracker: #18692)

  - JSON-RPC: for security purposes, each and every JSON-RPC session is now
    limited to an absolute timeout. Previously, only an idle timeout was in
    place, terminating the session if the user was idle for longer time.
    Now the session can be limited to a certain time window, regardless of
    the user being idle or not. By default this is set to 1 hour, but this
    is configurable under /confdConfig/webui/absoluteTimeout. Set it to 0,
    if you want to turn it off.

  - JSON-RPC: for security purposes, rate limiting has now been added to
    each and every JSON-RPC session. By default only 1 million JSON-RPC
    requests are allowed within the hour, but this is configurable under
    /confdConfig/webui/rateLimiting. Set it to 0, if you want to turn it
    off.

Enhancements:

  - CDB: Improve error reporting when disk fails during CDB compaction.

    (Issue tracker: #18623)

  - CLI: The CLI command "show configuration commit changes" is now also
    available in oper mode.

    (Issue tracker: #19398)

  - CLI: If the setting confdConfig/cli/commitRetryTimeout and
    confdConfig/commitRetryTimeout are set a warning will be issued when a
    commit is done in the cli and only the confdConfig/commitRetryTimeout
    will be adhered.

    (Issue tracker: #19451)

  - CLI: Abbreviating a top-level, named parameter in a choice, when the
    confd.conf option /confdConfig/cli/allowAbbrevParamNames is set to
    'true', will now lead to an ambiguous error if there are other
    top-level, named parameters that could match the entered token.

    (Issue tracker: #18521)

  - CLI: File names may now start with "..".

    File names may now begin with "/" (absolute filenames) even when
    restrictedFileAccess is enabled as long as the file is residing within
    the home directory.

    The "cd .." command is now allowed as long as it does not violates the
    restrictedFileAccess setting.

    "cd" without argument changes directory to the home directory.

    (Issue tracker: #19106)

  - Java API: Japi NavuContext class has been reworked to use writable
    operational data transactions via Maapi. This implies that it is
    possible to write either configuration and operational data over a
    Maapi socket. A new constructor NavuContext(Maapi) has been introduced
    for this purpose. See javadoc for more on this.

  - JSON-RPC: the get_system_setting method learned the ttl operation,
    which will give information about different ongoing timers.

  - JSON-RPC: subscribe_changes method now supports two additional
    parameters: 1) hide_changes will only generate a subscription message
    on the comet channel with no changes information at all, making the
    subscription act similar to a ping-pong communication 2) hide_values
    will generate a subscription message on the comet channel with no
    values, but still with partial changes information like keypath and
    operation.

    These parameters will allow for different degrees of granularity in
    subscription events, useful in scenarios with many changes, or with
    changes that contains big data, which suffocate the comet channel, on
    the server side, on the network and on the client side.

    (Issue tracker: #18376)

  - REST API: Added a commit-flag, 'force-put'. When present, it bypasses
    the restriction to use PUT on the datastore resource.

    (Issue tracker: #20085)

  - REST API: Added support for rollback using JSON over REST

Non-backwards compatible corrections:

  - CDB: In-service upgrade is from now on only possible while in state
    none. HA-nodes in state slave or master will fail with confd_errno
    CONFD_ERR_HA_WITH_UPGRADE when trying to upgrade.

    (Issue tracker: #19938)

  - Java API: NavuLeaf.set(String) no longer accepts/try to interpret the
    string as xml and in that case use NavuLeaf.setValues(). Also
    NavuContainer.set() and NavuList.set() is deprecated and the respective
    setValues() should be used for xml input.

    The rationale for this is that in the underlaying Maapi/CDB api:s the
    setElem() is a single valued leaf function. While setValues() are used
    to set multiple values.

  - Java API: Japi - the Navu PreparedXMLStatement no longer supports the
    Serializable interface. The reason is that if the model change the
    serialized object is rendered unusable.

    The workaround is to store the initial XML snippet persistently
    instead and creating the PreparedXMLStatement from the XML when needed.

Corrections:

  - confd: Remove <CRIT> messages regarding dying daemons in the log when
    we have requested a shutdown.

  - confd: Fixed support for using a non-default prefix for a namespace in
    templates.

  - confd: Remove potentially confusing log messages regarding a validation
    phase for operational data in CDB. There is no validation for
    operational data.

  - C-API: If confd_cs_node_cd() was passed an absolute path for a
    top-level list entry, that included the namespace prefix and a key
    element, it would always return the schema node for the list, ignoring
    the rest of the path. This has been fixed.

    (Issue tracker: #20800)

  - CDB: Fix a rare case where a transaction against the operational
    database might not return any reply and the call to commit thus be left
    hanging.

  - CLI: Using completion points and leaf-lists didn't always resolve
    correctly. This has been fixed.

    (Issue tracker: #18717)

  - CLI: Using tailf:cli-multi-value and tailf:cli-max-words without
    patterns could treat node keywords as part of the current value being
    set. This has been fixed. Restriction on tailf:cli-multi-value and
    tailf:cli-multi-word-key has been clarified in the documentation.

    (Issue tracker: #19162)

  - CLI: Reordering instances in an 'ordered-by user' list would in some
    cases, and when dependencies were triggered, result in an incorrect
    output from the C-style command 'show configuration'. This has been
    fixed.

    (Issue tracker: #20709, #20675, #20698)

  - CLI: Combining tailf:cli-expose-key-name and tailf:key-default
    extension could result in "unknown argument"-errors. This has been
    fixed.

    (Issue tracker: #20528)

  - Examples: misc/maapi_cli - added -c to CLIAPP_FLAGS in Makefile so that
    example would run OK with "make start".

  - Java API: Japi - The error reporting from Dp DB callbacks was wrong
    preventing DB callbacks to handle error cases correctly.

  - Java API: Japi - The Maapi QueryResult classes was not threadsafe. This
    has been fixed.

  - Java API: Japi ConfBool value class did not have a first class String
    constructor, but used Boolean.valueOf() instead. This was a bug in the
    sense that string values other than "true" or "false" was interpreted
    as boolean false. Now such other string values throws an Exception.

  - JSON-RPC: subscribe_cdboper should have worked with keypaths that
    contained lists with missing keys, but instead it required them. This
    has been fixed.

  - REST API: Multiple HTTP parameters with the same name is now rejected
    by the REST API.

  - REST API: Fixed a bug when using REST interface and external data
    providers where get_next was used instead of get_next_object.

    (Issue tracker: #18905)

  - Toolchain: The YANG compiler applied annotations twice, which could
    cause e.g. validation callbacks to be invoked twice for each
    validation. This has been fixed.

    (Issue tracker: #19608)

  - Toolchain: If a show template had bad escape characters, confdc would
    fail with internal error.  This bug has been fixed, and a proper error
    message is printed.

    (Issue tracker: #19548)

  - Web Server: the traffic log was not reopened (kept the same file
    descriptor) along with the other logs. This has been fixed.

    (Issue tracker: #20487)


ConfD-6.0.3 [November 16, 2015]
===============================

Non-backwards compatible enhancements:

  - confd: When traversing lists provided by an external data provider,
    ConfD would unnecessarily do multiple get_case requests for each
    'choice' in the data model. This has been fixed by caching the get_case
    replies in the "object cache".

    (Issue tracker: #18463)

  - confd: The crypto.so shared object had a built-in runtime library
    search path that could in some cases cause loading of an incompatible
    build of libcrypto. This has been fixed, by removing the built-in path.

  - AAA: PAM authentication now also calls the pam_setcred() function,
    required for e.g. the Linux pam_tally2 module to work.

    (Issue tracker: #19225)

  - AAA: CLI completion would list a key for which a matching 'deny' rule
    existed if the rule was preceded by more specific rules, even if those
    rules also were 'deny' rules. This has been improved such that the key
    is excluded from the completion in this case.

    (Issue tracker: #19768)

Enhancements:

  - confd: The query api now uses the "bulk hint" flag when reading data.
    This has the effect that when a dataprovider implements get_*object()
    it will be used.

    (Issue tracker: #20434)

  - CLI: When configuring a leafref the CLI would try to match the leafref
    against existing leafref targets. This has been optimised so that no
    search for a match will be made during configuration for regular
    leafrefs and leafrefs defined by the extension
    tailf:non-strict-leafref. Note that leafrefs defined by the extension
    tailf:cli-strict-leafref will still be subject to a search for a match
    during configuration.

    (Issue tracker: #17042)

  - CLI: Accessing data between CLI and actions has been optimised a bit to
    be more memory efficient.

    (Issue tracker: #20098)

  - CLI: The persistent CLI history is now encrypted provided some
    encryption keys are configured in the confd.conf file, otherwise
    the history is stored in clear text.

  - Examples: the docroot of each webui example will now symlink to
    examples.confd/webui/basic/docroot in order to minimize redundancy and
    size in the ConfD examples package.

  - Java API: Japi added Maapi.getObjects(...) method to retrieve multiple
    list instances in one request.

    (Issue tracker: #20503)

  - Java API: Japi - new ConfXMLParamStartDel() class. This class is used
    when deleting a list entry e.g using Maapi.setValues(). For more see
    javadoc for ConfXMLParam.

    (Issue tracker: #20316)

  - Java API: Japi Dp - completion action callbacks has been introduced.
    see Javadoc for more information.

    (Issue tracker: #20753)

  - JSON-RPC: get_list_keys now takes in a start_with parameter, in order
    to filter out keys that do not start with a specific prefix.

    (Issue tracker: #19392)

Non-backwards compatible corrections:

  - confd: A carriage return character in a string value, must be
    represented by a character entity reference in XML, or it will be
    replaced by a newline character by any XML parser. This has been fixed,
    by rendering those characters as &#13; in the XML stream.

    (Issue tracker: #17747)

  - confd: The in-service data model upgrade procedure would attempt to
    take the global locks, and thus fail immediately in
    maapi_init_upgrade() if a transaction commit was in progress. This has
    been fixed - the procedure no longer takes the global locks.

    (Issue tracker: #20002)

Corrections:

  - confd: A debug printout from the 'epam' program that could occur when
    using PAM authentication has been removed.

    (Issue tracker: #19752)

  - confd: the audit.log entries now escapes new line characters, in order
    to prevent manipulation of the log through carefully engineered
    requests that contain log-entry-like content, which get logged.

  - confd: It was not possible to configure subagents when using
    confd_dyncfg. This has been fixed.

    (Issue tracker: #20448)

  - confd: Integrity check failure in the SSL/TLS server was in some cases
    not handled correctly, resulting in abrupt termination of the
    connection instead of the proper alert processing. This has been fixed.

    (Issue tracker: #20560)

  - AAA: If a PAM module passed PAM_TEXT_INFO messages in the conversation
    function, PAM authentication would eventually stop working, with all
    attempts failing with timeout. The 'epam' program had a memory leak on
    failed authentications, due to not releasing PAM resources in these
    cases. These bugs have been fixed.

    (Issue tracker: #19225)

  - C-API: When maapi_load_schemas_list()/confd_load_schemas_list() was
    used with the CONFD_LOAD_SCHEMA_TYPES flag, the recursive loading of
    type info from other modules was incomplete in some cases. This has
    been fixed.

    (Issue tracker: #19100)

  - CDB: In very rare cases upgrade of cdb operational data could fail with
    the node crashing. This has been fixed.

    (Issue tracker: #18764)

  - CDB: Reading from pre_commit_running (from a CDB subscriber context)
    could return incorrect value for nodes with modified annotations.
    This have now been fixed.

    (Issue tracker: #20298)

  - CLI: When displaying configuration using startup-config the CLI
    sometimes didn't display data from the correct transaction. This has
    been fixed.

    (Issue tracker: #20055)

  - CLI: Displaying operational data in a table could result in empty rows.
    This has been fixed.

    (Issue tracker: #20087)

  - CLI: When using lists that augments in leafs from other namespaces the
    CLI could sometimes crash when using sort_by pipe-targets. This has
    been fixed.

    (Issue tracker: #20677)

  - CLI: It was possible to bypass the tailf:cli-incomplete-command
    constraint by not entering a trailing leaf value when the autowizard
    prompted for it. This has been fixed.

    (Issue tracker: #18841)

  - CLI: When combining tailf:cli-no-value-on-delete and
    tailf:cli-reset-all-siblings extensions the delete command could end up
    in an endless loop. This has been fixed.

  - CLI: If omitting a path when using "show | display xml" the xml would
    use the root level path. This has been fixed to use the current
    relative path.

    (Issue tracker: #18881)

  - CLI: set-path in the J-style CLI didn't always work as intended. This
    has been fixed.

    (Issue tracker: #19686)

  - CLI: When using tailf:alt-name the node tags sometimes included
    unnecessary namespace prefixes. A new evaluation of tags is now done to
    possibly remove unnecessary prefixes.

    (Issue tracker: #17525)

  - Documentation: Documentation update, correcting faulty examples

    (Issue tracker: #20396)

  - JSON-RPC: when passing invalid values to set_value on a leaf-list path,
    a crash would occur instead of a invalid value error being returned.
    This has been fixed.

  - JSON-RPC: get_values was treating the path parameter as mandatory. The
    regression has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: running simultaneous commits would crash the JSON-RPC server,
    rather than just replying with an error message. This has been fixed.

  - JSON-RPC: action parameters defined as list were being sent in reverse
    order, thus making the response of the action partially reversed. This
    has been fixed.

    (Issue tracker: #20229)

  - JSON-RPC: reset_candidate_db method would respond with an error,
    although the candidate_db was successfully reset. This has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: The run_action method was returning "resource denied: action
    already executing" when running an action under the same keypath more
    than once. This has been fixed by queuing up subsequent run_action
    calls on the same keypath.

  - JSON-RPC: set_value was incorrectly checking not only if the user has
    update permissions, but also create and delete. Failing to have on of
    those three, would fail the method call. This has been fixed.

    (Issue tracker: #20482)

  - SNMP Agent: The synchronization of snmpEngineTime between HA nodes did
    not work unless the system clocks of the involved nodes were
    synchronized before the ConfD instances were started. This has been
    fixed.

    (Issue tracker: #20217)

  - Toolchain: The YANG compiler did not handle tailf:key-default correctly
    when the type of the key was not a YANG built-in type, causing errors
    at runtime. This has been fixed.

    (Issue tracker: #20536)

  - Toolchain: The YANG compiler would lose tailf:info/description for
    'enum' and 'bit' statements in types defined within an augment to a
    different module. This has been fixed.

    (Issue tracker: #20480)

  - Toolchain: 'confdc --mib2yang-std' produced invalid YANG modules for
    some MIBs. This has been fixed.

    (Issue tracker: #19835)

  - Toolchain: If a YANG module had a leafref to another node in the same
    module, which in turn was a leafref to a different module, ConfD could
    fail to start, claiming that the target of the first leafref didn't
    exist. This has been fixed.

    (Issue tracker: #20566, #20615)

  - Toolchain: MIB generation and compilation did not give a proper error
    message for missing fxs dependencies. This has been fixed.

    (Issue tracker: #20155)

  - Toolchain: Attempting to add a 'must' statement via a deviation module
    would cause the compilation to fail with "internal error", This has
    been fixed.

    (Issue tracker: #19943, #20144)


ConfD-6.0.2 [October 5, 2015]
=============================

Enhancements:

  - JSON-RPC: get_schema method would not give information about read access.
    This has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: The sessionid cookie has been renamed to sessionid_<hostport>,
    thus becoming port specific. This will enable running multiple ConfD
    instances behind a proxy, on different proxy ports. Example: running ConfD
    on 127.0.0.2:8008, exposed via a proxy on 127.0.0.1:82 will use cookie
    sessionid_82 running ConfD on 127.0.0.3:8008, exposed via a proxy on
    127.0.0.1:83 will use cookie sessionid_83

    (Issue tracker: #20009)

  - SNMP Agent: For performance reasons, the SNMP Agent caches user sessions
    (and read transactions started using those sessions) allocated when
    processing a request and reuses it if additional requests arrive from the
    same IP address and UDP port (and using the same security name). The size
    of this cache effectively limits the number of SNMP Agent user sessions,
    and has been increased from 16 to 32.

    (Issue tracker: #19882)

  - Toolchain: It is now possible to override the prefix, automatically
    derived by the confdc --mib2yang-std command, by means of a --prefix
    flag.

    (Issue tracker: #19408)

  - XPath: The XPath engine now optimizes path expressions that has predicates
    with the compare() and string-compare() functions; in a similar fashion to
    the way comparison operators are optimized for numerical keys. I.e.
    whenever possible the XPath engine will try to use the predicates to
    perform a find_next() when looking for the first entry, and if possible
    stop iterating.

    (Issue tracker: #19614)

Non-backwards compatible corrections:

  - Java API: japi ConfPath.toString() would in all circumstances present keys
    containing enumerations with its canonical toString value "Enum(i)". This
    is now changed so the corresponding label is presented if possible. As such
    this is an backward incompatibility but it makes the resulting string
    eligible(valid) for other calls and causes less problems.

    (Issue tracker: #20153)

Corrections:

  - confd: A combination of confirmed commit and HA state transition
    could cause an internal error. This has now been fixed.

    (Issue tracker: #20039)

  - CLI: Buffer overflow (pasting in more than 1024 characters) when executing
    an osCommand from the CLI for every time but the first would lead to the
    CLI hanging. This has been fixed.

    (Issue tracker: #19555)

  - CLI: In the C-style CLI; leaf-prompting did not work as expected for input
    parameters to a tailf:action. This has been fixed.

    (Issue tracker: #19993)

  - CLI: When an ambiguous error was received in the CLI this could result in
    an internal error. This has been fixed.

    (Issue tracker: #19735)

  - CLI: The extensions tail:incomplete-no and tailf:sequence-command would not
    always work in combination. This has been corrected.

    (Issue tracker: #19778)

  - Java API: Japi - ConfXMLParam.toXMLParams() and the underlying
    XMLtoConfXMLParam parser was broken. The old parser is now replaced with
    the NavuParser. The interface is still backward compatible.

    (Issue tracker: #19566)

  - JSON-RPC: the commit method takes in a timeout parameter, but it was always
    set internally to 0, thus making a confirmed commit impossible. This has
    been fixed.

    (Issue tracker: #19491)

  - JSON-RPC: the query and start_query methods were out-of-sync with the
    documentation which stated that result_as is an optional parameter that
    defaulted to "string". That was not the case. This is now fixed.

  - NETCONF: If a netconf notification contains an identityref leaf, and is
    sent with a value from a different namespace than the notification itself,
    it was not properly prefixed by the Netconf server. This has been fixed.

    (Issue tracker: #18248)

  - REST API: Fix for problem in handling namespaces for JSON array

    (Issue tracker: #19599)

  - REST API: Fix formatting of error when operation is blocked by NACM rule

    (Issue tracker: #18718)

  - REST API: The maxValidationErrors setting now affect error count in REST
    responses. Using the value 'unbounded' translates to max 32 errors.

    (Issue tracker: #18718)

  - REST API: When setting the same value to unique leaf using ReST, the
    content of the error-message field contains the newlines which cause
    parsing error to some external JSON validator. This has been fixed

    (Issue tracker: #20307)

  - REST API: When using JSON payload, action input parameters were not
    correctly validated. This has been fixed.

  - SNMP Agent: When an SNMP SET operation with several variabels failed with
    error-status genErr, the wrong variable was returned as the cause of the
    failure in the error message. This has been fixed.

    (Issue tracker: #19852)

  - Toolchain: Having tailf:snmp-oid on config false nodes could lead
    to internal error in confdc. This bug has been fixed.

    (Issue tracker: #19502)

  - Toolchain: If a "must" statement was annotated to an augmented node, confdc
    would fail with an internal error. This bug has been fixed.

    (Issue tracker: #19758)

  - Toolchain: If a leafref had a reference to a list key in another module,
    but the refrence did not have the correct module prefix, confdc would fail
    to detect this, and ConfD would crash at startup. This bug has been fixed.

    (Issue tracker: #19950)

  - Toolchain: If an snmpgw YANG module augmented another YANG module, ConfD
    would fail to start. This bug has been fixed.

    (Issue tracker: #19834)

  - Toolchain: It is now possible to annotate a tailf statement.

    (Issue tracker: #19583)


ConfD-6.0.1 [August 27, 2015]
=============================

Enhancements:

  - CLI: The CLI history can now be saved between CLI sessions. A new
    confd.conf option, /confdConfig/cli/historySave{true/false}, has been
    added to control this behavior. The history is saved in the state
    directory (/confdConfig/stateDir). Default set to true. The
    'clear history' command can be used to reset the history.

    (Issue tracker: #19867)

  - CLI: The format of the timestamp in the CLI can now be customized. See
    /confdConfig/cli/timestamp/format in confd.conf(5) for further details.

    (Issue tracker: #16353)

  - CLI: The YANG extension tailf:cli-expose-key-name can now be used in the
    J-style CLI.

    (Issue tracker: #14963)

  - CLI: During auto completion it is now possible to press question mark
    (?) key and the CLI will provide information if an expression is
    currently a valid or invalid range-expression. This only happens if the
    current keyword supports range-expressions.

  - CLI: When just pressing return when prompted for an enumeration field,
    the CLI used to re-prompt for a value. This has been modified so that
    just pressing return means no modification, a behavior similar to other
    data entry points in the CLI.

    (Issue tracker: #16483)

  - confd: ConfD now uses dedicated threads for file I/O, to minimize the
    risk that blocking I/O operations completely block the ConfD process.
    This enhancement is not available on NetBSD or QNX, due to issues with
    the pthreads implementation on those operating systems.

  - confd: Added support for embedded Erlang applications. The applications
    can make use of the same econfd API regardless of they are running in
    the same Erlang VM as ConfD or if they are running in a separate VM.

  - Erlang API: econfd:log function has been added to the Erlang API.

  - Java API: The Java class Conf.java now has a flag DB_OPERATIONAL that
    can be used in Maapi.startTransaction() to create writable operational
    data transactions.

  - Java API: The NavuCdbSubscriptionXXXContext classes now have a
    getSubscriptionFlags() method so that the CDB subscription flags can be
    read from inside an iterator.

    (Issue tracker: #19236)

  - JSON-RPC: In order to prevent denial of service attacks, the JSON-RPC
    now limits the number of ongoing commands/subscriptions to 10000.

    (Issue tracker: #19157)

Non-backwards compatible corrections:

  - Java API: CdbSubscriber.getLatestSubscriptionFlag() is deprecated since
    it wrongfully assumes that there is only one flag set for the
    subscription. Use the new CdbSubscriber.getFlags() instead.

    (Issue tracker: #19236)

  - Web Server: SSL renegotiation disabled to fix a security problem
    (CVE-2009-3555).

    (Issue tracker: #19224, #19698)

Corrections:

  - CDB: If cdb_diff_iterate() processing for operational data required the
    evaluation of a YANG 'when' statement, an internal error would terminate
    the iteration and close the subscription socket. This has been fixed.

  - CLI: When using a candidate database and executing the command
    'commit save-running <file_name>' the CLI could crash. This has been
    fixed and the save-running option handling has been clarified.

    (Issue tracker: #19182)

  - CLI: The presence of a zone index attached to the IP address in
    the environment variable SSH_CONNECTION would cause the confd_cli
    program to terminate. This has been fixed.

  - CLI: When modifying choice element in the configuration the check for
    switching of a case could result in an internal error. This has been
    fixed.

    (Issue tracker: #19056)

  - CLI: The YANG extension tailf:cli-key-format will now be considered when
    auto-completing in configuration mode in the C- and I-style CLI.

    (Issue tracker: #18145)

  - CLI: Auto completion of lists with tailf:cli-flat-list-syntax could
    result in requests for brackets even though none are expected for this
    extension, and on older versions an internal error would occur. This has
    been fixed.

    (Issue tracker: #19193)

  - CLI: Using "insert X before/after Y" on list elements didn't work when
    using the tailf:cli-multi-word-key extension. This has been fixed.

  - CLI: Leaf prompting the user in non-interactive CLI mode has been
    disabled.

    (Issue tracker: #19696)

  - confd: If an event notification subscriber was slow enough to read its
    notifications to make ConfD consider the notification delivery blocked,
    in rare cases a race condition could make ConfD crash. This has been
    fixed.

    (Issue tracker: #18987)

  - confd: If a hash collision with a 'case' or a 'choice' node in a
    different YANG module was detected at load time, ConfD would terminate
    with "internal error". This has been fixed, now a proper error message
    is given in this case.

    (Issue tracker: #18961)

  - confd: Empty choice statements accessed with NETCONF gateway caused an
    internal error. This has been fixed.

    (Issue tracker: #19361)

  - confd: If a symlink had tailf:inherit-set-hook, set-hooks further down
    in the symlink target tree would not be invoked. This has been fixed.

    (Issue tracker: #18662)

  - confd: Streams with replay support set to false didn't work properly
    when HA was enabled. This has been fixed.

    (Issue tracker: #19327)

  - confd: If a list had a 'when' expression that referred to a leaf, and
    the leaf was set and deleted in the same transaction, the list instances
    would not be properly deleted. This has been fixed.

    (Issue tracker: #19209)

  - confd: If an entry in an 'ordered-by user' list was created at a
    position other than the last one (e.g. via the CLI 'insert' command), or
    created and moved in the same transaction, the move_after() data
    callback was not invoked for transforms and transaction hooks. This has
    been fixed.

    (Issue tracker: #19045)

  - confd: ConfD rejected all replies to the get_case() data callback for a
    'case' in an augmented 'choice' with "Bad case value" in the developer
    log. This has been fixed.

    (Issue tracker: #19401)

  - confd: Made rollback independent of the CLI subsystem.

    (Issue tracker: #19512, #19714)

  - confd: confd_dyncfg.yang lacked a tailf:dependency statement for
    tailf:validate, resulting in a warning if it was recompiled. This has
    been fixed.

    (Issue tracker: #19367, #19380)

  - Documentation: Some REST examples were not displayed in the user guide.
    This has been fixed.

    (Issue tracker: #19783)

  - Java API: Creating/updating list elements on operational data lists
    without keys were not possible using XML. Such lists needs a pseudo-key
    to be specified. This is now possible using a synthetic tag
    "tailf-navu-pseudo-key" in the XML data. See the JavaDoc on
    NavuContainer.set() or NavuList.set().

  - Java API: NavuNode.getChange() did not handle deleted nodes when
    creating diffset as NavuNodes. A NullpointerException was thrown. This
    has been fixed.

    (Issue tracker: #15902)

  - Java API: NavuChoice did not correctly handle nested choices where the
    subchoice was augmented. This has been fixed.

    (Issue tracker: #18874)

  - Java API: ConfPath.toXPathString() did throw NullPointerException for
    augmented paths. This has been fixed.

    (Issue tracker: #18616)

  - Java API: NavuLeaf.set() did NullpointerException instead of the
    correct error message in attempting to set duplicated values on a
    leaflist. This has been fixed.

    (Issue tracker: #19404)

  - Java API: For NavuContext(CDB) the lock control of sessions was
    inadequate and resulted in unexpected behavior. NavuContext now have
    three methods to control Navu CdbSession locks: setReadOperLocks(),
    setReadConfLocks() and setWriteOperLocks(). Normally the default lock
    should be sufficient and none of these need to be used.

    Also the old setLockingMode() has been deprecated as well as all the old
    getCdbSession() methods(). These are normally not used other than
    internally by Navu. These are now replaced by new equivalents.

    For more on this see JavaDoc for NavuContext class.

    (Issue tracker: #14198)

  - JSON-RPC: Elements that were not conditionally not displayed, or hidden,
    could still be accessed through JSON-RPC. This has been fixed for all
    the methods, except the get_schema which will be fixed in a future
    release.

    (Issue tracker: #19129)

  - JSON-RPC: Login passwords were logged in the developer log. This has
    been fixed.

    (Issue tracker: #19645)

  - JSON-RPC: Running an action that had a leaf-list as an argument would
    crash the JSON-RPC server. This has been fixed.

  - JSON-RPC: Creating a leaf poller (stats subscription) and then stopping
    its transaction would end up in a crash. This has been fixed.

    (Issue tracker: #17417, #18777)

  - JSON-RPC: Running a named command with a wd (working directory) option
    (/confdConfig/cli/namedCommands/exec/options/wd in confd.conf) would
    crash the JSON-RPC session. This has been fixed.

    (Issue tracker: #19429)

  - JSON-RPC: Augmented nested choice statements could produce a crash in a
    call to the get_case JSON-RPC method. This has been fixed.

  - JSON-RPC: get_leafref_values would fail due to an internal error. This
    has been fixed.

  - JSON-RPC: Hidden groups were not handled properly when loading a
    rollback. This has been fixed.

  - JSON-RPC: An error in subscribe_cdboper would cause the subscriber to
    fail silently. This has been fixed.

  - JSON-RPC: init_cmd did not start automatically when a client handle was
    given. This has been fixed.

  - JSON-RPC: The show_config method would fail with internal error on large
    (> 100kb) configs. This has been fixed.

    (Issue tracker: #19259)

  - JSON-RPC: put_session_data calls were not saving the value properly,
    leading to an undefined value for a subsequent get_session_data call.
    This has been fixed.

    (Issue tracker: #19426)

  - JSON-RPC: The run_cmd method was requiring the args parameter. It now
    defaults to an empty string, and thus it is optional.

  - JSON-RPC: Stopping a command/subscription did not trigger a "stopped"
    notification on the comet channel. This has been fixed.

    (Issue tracker: #19659)

  - JSON-RPC: subscribe_cdboper would crash when given an invalid path. This
    has been fixed.

    (Issue tracker: #19392)

  - JSON-RPC: The get_cmds method was resulting in an internal error. This
    has been fixed.

    (Issue tracker: #19415)

  - NETCONF: NETCONF gateway handled leaf-list updates incorrectly. This
    has now been fixed.

    (Issue tracker: #19374, #19418, #19486)

  - NETCONF: If an action was augmented into another module, invoking the
    action via NETCONF would fail with "operation-failed". This has been
    fixed.

    (Issue tracker: #18920)

  - Python API: Added missing Python MAAPI function authenticate2.

    (Issue tracker: #19533)

  - REST API: The REST server was crashing when receiving request over HTTPS
    (SSL was enabled), unless the web UI was enabled as well in confd.conf.
    This has been fixed.

    (Issue tracker: #19161)

  - REST API: The REST server would crash when there was an empty user or
    password given in the Authentication HTTP header. This has been fixed.

  - REST API: Fixed hanging HTTP request when using REST RPC to stop confd.
    Will now answer with HTTP 500 "Server going down".

    (Issue tracker: #19430)

  - REST API: Fixed problem when selecting inner nodes which augments the
    parent node. For example, a select query like

      http://example.com/api/config/someContext/default?select=parent;inner(*)

    where the inner node is augmenting the parent node.

    (Issue tracker: #14537)

  - REST API: Fixed bug in REST API where actions could be invoked without
    the _operations in the path to the action.

  - REST API: Fixed problem where when-expressions weren't evaluated.

    (Issue tracker: #19309)

  - REST API: Fix for moving an ordered-by user list entry using JSON
    with the REST API.

    (Issue tracker: #19282)

  - SNMP agent: If the SNMP traffic log (snmpLog) was enabled in confd.conf,
    entries would be printed in confderr.log. This has been fixed.

    (Issue tracker: #19722)

  - Toolchain: If a YANG 'choice' with a default 'case' was augmented from
    another module, attempting to create the closest-ancestor list entry or
    presence container would make the transaction crash with "internal
    error". This has been fixed.

    (Issue tracker: #19413)

  - Toolchain: Range values between -1 and 1 for YANG decimal64 types
    imported from another module would cause the compiler to crash with
    "internal error". This has been fixed.

    (Issue tracker: #19440)

  - Toolchain: If a YANG module augmented config nodes under a node in
    another module that was provided by a transform, transform write
    callbacks for the augmented nodes were never invoked. This has been
    fixed.

    (Issue tracker: #19393)

  - Toolchain: If an augmented list used tailf:secondary-index, the YANG
    compiler would fail to locate the index-leaves. This has been fixed.

    (Issue tracker: #19535)

  - Toolchain: The type information created by the YANG compiler for the
    case of a leafref to a node in the same module, with a type imported
    from another module, was not complete. This has been fixed.

    (Issue tracker: #18902)

  - Toolchain: If a node had a tailf:dependency statement that referred to a
    node in some other module, and the node was annotated, compilation would
    fail. This has been fixed.

    (Issue tracker: #19585)

  - Toolchain: The YANG compiler did not implement the choice/case semantics
    correctly for nodes augmented into a 'case' in a different module (e.g.
    setting the value of an augmented leaf did not affect the case
    selection). This has been fixed.

  - Toolchain: It was not possible to load a YANG module that augmented a
    "nested" 'choice' (i.e. a choice that is a direct child of a 'case') in
    another module. This has been fixed.

    (Issue tracker: #19394)

  - Web server: The server would crash when an HTTP request would have an
    unknown HTTP version. This has been fixed.

  - Web server: The web server would go in an infinite loop when a redirect
    to '.' would take place. This has been fixed.

    (Issue tracker: #19804)

  - Web UI: (un)hide_schema functions were failing by complaining about
    missing parameter "groupname". "group_name" was the correctly expected
    parameter. This has been fixed.

    (Issue tracker: #19424)

  - Web UI / Examples: ConfD does NOT come with a default web UI. Previously
    an example web UI based on Dojo was being treated like the default web
    UI. Setting the webui/docroot in confd.conf to point to a web UI is now
    necessary, as it will not point to the
    examples.confd/webui/basic/docroot web UI anymore.


ConfD-6.0 [June 22, 2015]
=========================

Non-backwards compatible enhancements:

  - JSON-RPC: On uncaught errors, the session used to crash, and redirect
    the user to the login page. This behavior has changed towards allowing
    the user to recover from such an error (if possible). The session will
    not crash any more, but instead send an internal error message.

    (Issue tracker: #16757)

  - Python API: The Python API has been redesigned and enhanced.

    Modules are renamed according to this table:

      Old module name  | New module name
      -----------------+-----------------
      confd            | _confd
      confd._cdb       | _confd.cdb
      confd._constants | <removed> (*)
      confd._dp        | _confd.dp
      confd._error     | _confd.error
      confd._lib       | _confd (*)
      confd._maapi     | _confd.maapi
      confd.types      | _confd (*)

      *) Everything in the _constants, _lib and types modules are moved into
         the _confd top module.

    New modules added: _confd.events and _confd.ha

    Also note that constants previously residing in a <submodule>.const
    module is now moved in directly under <submodule>.

    The old high-level MAAPI API (confd.maapi) is deprecated but still
    available as _confd.deprecated.maapi.

    API documentation is available through pydoc - run 'pydoc _confd'
    in a shell.

Enhancements:

  - AAA: Added /aaa/authentication/users/user/change-password action.

  - CLI: A new confd.conf option '/confdConfig/cli/promptSessionsCLI' has
    been added. If set to "true" then only the current CLI sessions will be
    displayed when the user tries to start a new CLI session and the maximum
    number of sessions has been reached. Note that MAAPI sessions with their
    context set to "cli" would be regarded as CLI sessions and would be
    listed as such.

    (Issue tracker: #17495)

  - CLI: When using star-character in the keys when fetching data from a
    data provider the fetch would always result in a wildcard search. By
    backslashing the star (*) in the key a direct key fetch (no wildcard
    search) can now be performed.

    (Issue tracker: #18530)

  - CLI: A new clispec attribute 'inclSubCmds' has been added to the
    '/clispec/$MODE/modifications/move' and
    '/clispec/$MODE/modifications/copy' elements. It is optional and if
    specified and set to 'true' then all commands to which the 'src' command
    is a prefix command will be included in the respective (move/copy)
    operation.

    (Issue tracker: #18402)

  - confd: Added get-attributes custom NETCONF RPC for improved performance.

  - confd: SSH session handling has been corrected and improved.

  - confd: Leaf lists (C_LIST) are now iterable in the Python API.

    (Issue tracker: #17038, #17929)

  - confd: The internal regexp library has been updated to libxml2 version
    2.9.2.

  - JSON-RPC: The implementation of the JSON-RPC API only allowed one method
    to be executed at a time. Most of the methods are now allowed to be run
    in parallel.

  - JSON-RPC: The new get_subscriptions method will list all ongoing
    subscriptions and their meta-data. The new get_cmds method will list all
    ongoing batch commands and their meta-data. See documentation for input
    parameters and response structure.

  - JSON-RPC: All JSON-RPC requests are now audited.

  - JSON-RPC / JSMAAPI: The implementation of dealing with change
    subscribers was buffering too much redundant data. This has been fixed
    in order not to misuse memory for large changes that the user didn't
    subscribe to.

    (Issue tracker: #18376)

Corrections:

  - CDB: Fixed an issue where normal subscribers that were (re)started after
    a two phase subscriber had been notified were prevented from getting any
    notifications until a two phase subscriber had been run again.

    (Issue tracker: #18454)

  - CLI: Multiple exit commands were generated on 'show configuration' if a
    leaf was modified inside a container/list that had
    tailf:cli-explicit-exit. This has been fixed.

  - CLI: '?' and auto completion output was not consistent with allowed
    commands for containers with tailf:cli-drop-node-name and tailf:cli-
    incomplete-no. This has been fixed.

    (Issue tracker: #12048)

  - confd: If a module augmented a tailf:hidden node, or a node with
    tailf:cli-case-*, confd would fail to load that module during startup.
    This has been fixed.

    (Issue tracker: #18678)

  - confd: Handle timeout during reading from an SSH connection to avoid a
    hang waiting for data that will never arrive.

    (Issue tracker: #18345)

  - confd: If a data model had a node with a 'must' expression under another
    node that also had a 'must' expression, it would in some cases be
    possible to set the inner node to an invalid value, if 'validate' was
    called multiple times from the CLI. This has been fixed.

  - confd: Lists with tailf:sort-order SNMP or SNMP-IMPLIED were sometimes
    sorted in an incorrect manner. This has been fixed.

    (Issue tracker: #18491)

  - confd: If an XML edit is sent to ConfD (e.g., via NETCONF or
    confd_load), and it has the attribute yang:insert "before" or "after"
    but no yang:key attribute, a proper error message is now generated.

    (Issue tracker: #18952)

  - Documentation: Added description of /confdConfig/scripts.

  - Documentation: The clispec element
    'clispec/$MODE/cmd/callback/exec/options/pty' was missing from the
    clispec(5) manual page. This has been fixed.

    (Issue tracker: #17160)

  - JSON-RPC: start_cmd method could crash the session when the command
    couldn't be started. This has been fixed.

  - JSON-RPC: A previous fix to the AAA rules made it so get_schema would
    return access:create and access:delete=false for presence containers.
    This has been fixed.

    (Issue tracker: #18915)

  - NETCONF: Even if a module was compiled with a subset of the defined
    features, ConfD would advertise all features. This has been fixed.

    (Issue tracker: #18779)

  - REST API: HTTPS (SSL) request authentication stopped working in
    Confd-5.4. This has been fixed.

    (Issue tracker: #18904)

  - REST API: The resulting error message when the JSON payload in a request
    had a faulty string syntax presented the bad character in ASCII code.
    Now it is a readable character instead.

    (Issue tracker: #18862)

  - REST API: CORS preflight requests were blocked by the REST API. This has
    been fixed.

  - Toolchain: The YANG compiler did not correctly handle the case of a
    leaf-list of a typedef from a different module, when the typedef was of
    type leafref. The resulting type information had incorrect semantics and
    caused schema loading to fail. This has been fixed.

    (Issue tracker: #18794, #19134)

  - Toolchain: If a leaf had a tailf:non-strict-leafref and an imported
    type, ConfD would fail to load that module. This has been fixed.

  - Toolchain: ConfD would fail to start in some cases where data models
    have paths with unnecessary "..". This has been fixed.

    (Issue tracker: #18908)

  - Toolchain: confdc would fail to compile an annotation module that
    imported a module that augmented the annotated module. This has been
    fixed.

    (Issue tracker: #18845)

  - Toolchain: In some 'must'/'when' expressions with complex predicates,
    the automatic dependency calculation would return wrong dependencies,
    causing compilation to fail. This has been fixed.

    (Issue tracker: #18865)

  - Toolchain: If a tailf:annotate statement had an if-feature substatement,
    and the feature was enabled, confdc would fail with an internal error.
    This has been fixed.

    (Issue tracker: #18998)

  - Toolchain: The YANG compiler did not handle the case of a leafref to a
    leaf-list in the same module correctly: if the leafref source was a
    leaf, CLI completion would give an error, if the leafref source was a
    leaf-list, all values would be rejected as invalid at commit. This has
    been fixed.

    (Issue tracker: #18914)

  - Toolchain: If a module had a node with an if-feature that referenced a
    feature defined in an imported module, and the module was compiled
    without that feature, the fxs file would have that node anyway. This has
    been fixed.

    (Issue tracker: #18566, #18935)

  - Toolchain: When running 'confdc --emit-mib', augmented material would
    not be reflected in the resulting MIB file. This has been fixed.

    (Issue tracker: #18966)

  - Toolchain: If a submodule declared a symlink with a path to a namespace
    not imported in its main module, the symlink would be reported as having
    an invalid path specification when the main module was loaded in ConfD
    or used for compiling a MIB. This has been fixed.

    (Issue tracker: #18922)

  - Toolchain: tailf:export can now be used in tailf:annotate-module.

    (Issue tracker: #18721)

  - Toolchain: ConfD cannot handle top-level choices. The confdc compiler
    now detects this, and gives an error.

  - Toolchain: confdc would allow models with an empty 'input' or 'output'
    statement. This has been fixed.

  - Toolchain: confdc now gives an error if a submodule is compiled.

  - Toolchain: confdc would in some cases print a warning about
    tailf:dependency paths, where the calculated paths were incorrectly
    formatted. This has been fixed.

    (Issue tracker: #18900)

  - Web server: A number of 1024 connections is a hard limit for the web
    server to keep open at a time. Anything beyond that gets terminated
    immediately. A bug triggered this limit to shrink down every time the
    limit was reached, eventually taking the server down by denying any
    connections to be opened. This has been fixed.

  - Web server: In rare cases web server could crash when writing to the web
    UI browser log. This has been fixed.

    (Issue tracker: #19042)

  - Web server: When accessing "/" from an authenticated browser, an
    internal error would show up. This has been fixed.

    (Issue tracker: #18982, #18813)
